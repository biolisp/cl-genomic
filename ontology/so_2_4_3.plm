;;; Created 2010-07-05 8:46:56 from OBO file so_2_4_3.obo by cl-genomic OBO to PowerLoom converter.

(defmodule "SEQUENCE-ONTOLOGY"
  :includes ("PL-USER"))
(in-module "SEQUENCE-ONTOLOGY")
(clear-module "SEQUENCE-ONTOLOGY")

(deffunction NAME ((?x THING)) :->
   (?NAME STRING))
(defrelation adjacent_to ((?x THING) (?y THING)))
(assert (documentation adjacent_to "A geometric operator, specified in Egenhofer 1989. Two features meet if they share a junction on the sequence."))

(defrelation associated_with ((?x THING) (?y THING)))

(defrelation complete_evidence_for_feature ((?x THING) (?y THING))
   :=> (evidence_for_feature ?x ?y))
(assert (transitive complete_evidence_for_feature))
(assert (documentation complete_evidence_for_feature "B is complete_evidence_for_feature A if the extent (5' and 3' boundaries) and internal boundaries of B fully support the extent and internal boundaries of A."))

(defrelation derives_from ((?x THING) (?y THING)))
(assert (transitive derives_from))

(defrelation edited_from ((?x THING) (?y THING)))

(defrelation edited_to ((?x THING) (?y THING)))

(defrelation evidence_for_feature ((?x THING) (?y THING)))
(assert (transitive evidence_for_feature))
(assert (documentation evidence_for_feature "B is evidence_for_feature A, if an instance of B supports the existence of A."))

(defrelation exemplar_of ((?x THING) (?y THING)))
(assert (documentation exemplar_of "X is exemplar of Y if X is the best evidence for Y."))

(defrelation genome_of ((?x THING) (?y THING)))

(defrelation guided_by ((?x THING) (?y THING)))

(defrelation guides ((?x THING) (?y THING)))

(defrelation has_genome_location ((?x THING) (?y THING)))

(defrelation has_intergral_part ((?x THING) (?y THING)))
(assert (documentation has_intergral_part "X has_integral_part Y if and only if: X has_part Y and Y part_of X."))

(defrelation has_origin ((?x THING) (?y THING)))

(defrelation has_part ((?x THING) (?y THING)))
(assert (documentation has_part "Inverse of part_of."))

(defrelation has_quality ((?x THING) (?y THING)))

(defrelation homologous_to ((?x THING) (?y THING))
   :=> (similar_to ?x ?y))
(assert (symmetric homologous_to))

(defrelation integral_part_of ((?x THING) (?y THING)))
(assert (documentation integral_part_of "X integral_part_of Y if and only if: X part_of Y and Y has_part X."))

(defrelation member_of ((?x THING) (?y THING)))
(assert (transitive member_of))

(defrelation non_functional_homolog_of ((?x THING) (?y THING))
   :=> (homologous_to ?x ?y))
(assert (documentation non_functional_homolog_of "A relationship between a pseudogenic feature and its functional ancestor."))

(defrelation orthologous_to ((?x THING) (?y THING))
   :=> (homologous_to ?x ?y))
(assert (symmetric orthologous_to))

(defrelation paralogous_to ((?x THING) (?y THING))
   :=> (homologous_to ?x ?y))
(assert (symmetric paralogous_to))

(defrelation part_of ((?x THING) (?y THING)))
(assert (transitive part_of))
(assert (documentation part_of "X part_of Y if X is a subregion of Y."))

(defrelation partial_evidence_for_feature ((?x THING) (?y THING))
   :=> (evidence_for_feature ?x ?y))
(assert (documentation partial_evidence_for_feature "B is partial_evidence_for_feature A if the extent of B supports part_of but not all of A."))

(defrelation position_of ((?x THING) (?y THING)))

(defrelation processed_from ((?x THING) (?y THING)))
(assert (documentation processed_from "Inverse of processed_into."))

(defrelation processed_into ((?x THING) (?y THING)))
(assert (documentation processed_into "X is processed_into Y if a region X is modified to create Y."))

(defrelation recombined_from ((?x THING) (?y THING)))

(defrelation recombined_to ((?x THING) (?y THING)))

(defrelation regulated_by ((?x THING) (?y THING)))

(defrelation sequence_of ((?x THING) (?y THING)))

(defrelation similar_to ((?x THING) (?y THING)))
(assert (symmetric similar_to))

(defrelation trans_spliced_from ((?x THING) (?y THING)))

(defrelation trans_spliced_to ((?x THING) (?y THING)))

(defrelation transcribed_from ((?x THING) (?y THING)))
(assert (documentation transcribed_from "X is transcribed_from Y if X is synthesized from template Y."))

(defrelation transcribed_to ((?x THING) (?y THING)))
(assert (documentation transcribed_to "Inverse of transcribed_from."))

(defrelation translates_to ((?x THING) (?y THING)))
(assert (documentation translates_to "Inverse of translation _of."))

(defrelation translation_of ((?x THING) (?y THING)))
(assert (documentation translation_of "X is translation of Y if X is translated by ribosome to create Y."))

(defrelation variant_of ((?x THING) (?y THING)))
(assert (documentation variant_of "A' is a variant (mutation) of A = definition every instance of A' is either an immediate mutation of some instance of A, or there is a chain of immediate mutation processes linking A' to some instance of A."))

(defconcept SO:0000000)
(assert (= (name SO:0000000) "Sequence_Ontology"))

(defconcept SO:0000001)
(assert (subset-of SO:0000001 SO:0000110))
(assert (documentation SO:0000001 "A sequence_feature with an extent greater than zero. A nucleotide region is composed of bases and a polypeptide region is composed of amino acids."))
(assert (= (name SO:0000001) "region"))

(defconcept SO:0000002)
(assert (subset-of SO:0000002 SO:0001411))
(assert (documentation SO:0000002 "A folded sequence."))
(assert (= (name SO:0000002) "sequence_secondary_structure"))

(defconcept SO:0000003)
(assert (subset-of SO:0000003 SO:0000002))
(assert (documentation SO:0000003 "G-quartets are unusual nucleic acid structures consisting of a planar arrangement where each guanine is hydrogen bonded by hoogsteen pairing to another guanine in the quartet."))
(assert (= (name SO:0000003) "G_quartet"))

(defconcept SO:0000004)
(assert (subset-of SO:0000004 SO:0000195))
(assert (= (name SO:0000004) "interior_coding_exon"))

(defconcept SO:0000005)
(assert (subset-of SO:0000005 SO:0000705))
(assert (documentation SO:0000005 "The many tandem repeats (identical or related) of a short basic repeating unit; many have a base composition or other property different from the genome average that allows them to be separated from the bulk (main band) genomic DNA."))
(assert (= (name SO:0000005) "satellite_DNA"))

(defconcept SO:0000006)
(assert (subset-of SO:0000006 SO:0000695))
(assert (documentation SO:0000006 "A region amplified by a PCR reaction."))
(assert (= (name SO:0000006) "PCR_product"))

(defconcept SO:0000007)
(assert (part_of SO:0000007 SO:0000149))
(assert (subset-of SO:0000007 SO:0000143))
(assert (documentation SO:0000007 "A pair of sequencing reads in which the two members of the pair are related by originating at either end of a clone insert."))
(assert (= (name SO:0000007) "read_pair"))

(defconcept SO:0000008)
(assert (= (name SO:0000008) "gene_sensu_your_favorite_organism"))

(defconcept SO:0000009)
(assert (= (name SO:0000009) "gene_class"))

(defconcept SO:0000010)
(assert (subset-of SO:0000010 SO:0000401))
(assert (= (name SO:0000010) "protein_coding"))

(defconcept SO:0000011)
(assert (subset-of SO:0000011 SO:0000401))
(assert (= (name SO:0000011) "non_protein_coding"))

(defconcept SO:0000012)
(assert (subset-of SO:0000012 SO:0000483))
(assert (documentation SO:0000012 "The primary transcript of any one of several small cytoplasmic RNA molecules present in the cytoplasm and sometimes nucleus of a eukaryote."))
(assert (= (name SO:0000012) "scRNA_primary_transcript"))

(defconcept SO:0000013)
(assert (derives_from SO:0000013 SO:0000012))
(assert (subset-of SO:0000013 SO:0000655))
(assert (documentation SO:0000013 "Any one of several small cytoplasmic RNA molecules present in the cytoplasm and sometimes nucleus of a Eukaryote."))
(assert (= (name SO:0000013) "scRNA"))

(defconcept SO:0000014)
(assert (part_of SO:0000014 SO:0000170))
(assert (subset-of SO:0000014 SO:0000235))
(assert (documentation SO:0000014 "A sequence element characteristic of some RNA polymerase II promoters required for the correct positioning of the polymerase for the start of transcription. Overlaps the TSS. The mammalian consensus sequence is YYAN(T|A)YY; the Drosophila consensus sequence is TCA(G|T)t(T|C). In each the A is at position +1 with respect to the TSS. Functionally similar to the TATA box element."))
(assert (= (name SO:0000014) "INR_motif"))

(defconcept SO:0000015)
(assert (part_of SO:0000015 SO:0000170))
(assert (subset-of SO:0000015 SO:0000235))
(assert (documentation SO:0000015 "A sequence element characteristic of some RNA polymerase II promoters; Positioned from +28 to +32 with respect to the TSS (+1). Experimental results suggest that the DPE acts in conjunction with the INR_motif to provide a binding site for TFIID in the absence of a TATA box to mediate transcription of TATA-less promoters. Consensus sequence (A|G)G(A|T)(C|T)(G|A|C)."))
(assert (= (name SO:0000015) "DPE_motif"))

(defconcept SO:0000016)
(assert (part_of SO:0000016 SO:0000170))
(assert (subset-of SO:0000016 SO:0000235))
(assert (documentation SO:0000016 "A sequence element characteristic of some RNA polymerase II promoters, located immediately upstream of some TATA box elements at -37 to -32 with respect to the TSS (+1). Consensus sequence is (G|C)(G|C)(G|A)CGCC. Binds TFIIB."))
(assert (= (name SO:0000016) "BRE_motif"))

(defconcept SO:0000017)
(assert (part_of SO:0000017 SO:0000167))
(assert (subset-of SO:0000017 SO:0000713))
(assert (documentation SO:0000017 "A sequence element characteristic of the promoters of snRNA genes transcribed by RNA polymerase II or by RNA polymerase III. Located between -45 and -60 relative to the TSS. The human PSE_motif consensus sequence is TCACCNTNA(C|G)TNAAAAG(T|G)."))
(assert (= (name SO:0000017) "PSE_motif"))

(defconcept SO:0000018)
(assert (subset-of SO:0000018 SO:0001411))
(assert (documentation SO:0000018 "A group of loci that can be grouped in a linear order representing the different degrees of linkage among the genes concerned."))
(assert (= (name SO:0000018) "linkage_group"))

(defconcept SO:0000020)
(assert (subset-of SO:0000020 SO:0000715))
(assert (documentation SO:0000020 "A region of double stranded RNA where the bases do not conform to WC base pairing. The loop is closed on both sides by canonical base pairing. If the interruption to base pairing occurs on one strand only, it is known as a bulge."))
(assert (= (name SO:0000020) "RNA_internal_loop"))

(defconcept SO:0000021)
(assert (subset-of SO:0000021 SO:0000020))
(assert (documentation SO:0000021 "An internal RNA loop where one of the strands includes more bases than the corresponding region on the other strand."))
(assert (= (name SO:0000021) "asymmetric_RNA_internal_loop"))

(defconcept SO:0000022)
(assert (subset-of SO:0000022 SO:0000715))
(assert (documentation SO:0000022 "A region forming a motif, composed of adenines, where the minor groove edges are inserted into the minor groove of another helix."))
(assert (= (name SO:0000022) "A_minor_RNA_motif"))

(defconcept SO:0000023)
(assert (subset-of SO:0000023 SO:0000021))
(assert (documentation SO:0000023 "The kink turn (K-turn) is an RNA structural motif that creates a sharp (~120 degree) bend between two continuous helices."))
(assert (= (name SO:0000023) "K_turn_RNA_motif"))

(defconcept SO:0000024)
(assert (subset-of SO:0000024 SO:0000021))
(assert (documentation SO:0000024 "A loop in ribosomal RNA containing the sites of attack for ricin and sarcin."))
(assert (= (name SO:0000024) "sarcin_like_RNA_motif"))

(defconcept SO:0000025)
(assert (subset-of SO:0000025 SO:0000020))
(assert (documentation SO:0000025 "An internal RNA loop where the extent of the loop on both stands is the same size."))
(assert (= (name SO:0000025) "symmetric_RNA_internal_loop"))

(defconcept SO:0000026)
(assert (subset-of SO:0000026 SO:0000715))
(assert (= (name SO:0000026) "RNA_junction_loop"))

(defconcept SO:0000027)
(assert (subset-of SO:0000027 SO:0000026))
(assert (= (name SO:0000027) "RNA_hook_turn"))

(defconcept SO:0000028)
(assert (subset-of SO:0000028 SO:0000002))
(assert (= (name SO:0000028) "base_pair"))

(defconcept SO:0000029)
(assert (subset-of SO:0000029 SO:0000028))
(assert (documentation SO:0000029 "The canonical base pair, where two bases interact via WC edges, with glycosidic bonds oriented cis relative to the axis of orientation."))
(assert (= (name SO:0000029) "WC_base_pair"))

(defconcept SO:0000030)
(assert (subset-of SO:0000030 SO:0000028))
(assert (documentation SO:0000030 "A type of non-canonical base-pairing."))
(assert (= (name SO:0000030) "sugar_edge_base_pair"))

(defconcept SO:0000031)
(assert (subset-of SO:0000031 SO:0000696))
(assert (documentation SO:0000031 "DNA or RNA molecules that have been selected from random pools based on their ability to bind other molecules."))
(assert (= (name SO:0000031) "aptamer"))

(defconcept SO:0000032)
(assert (subset-of SO:0000032 SO:0000031))
(assert (documentation SO:0000032 "DNA molecules that have been selected from random pools based on their ability to bind other molecules."))
(assert (= (name SO:0000032) "DNA_aptamer"))

(defconcept SO:0000033)
(assert (subset-of SO:0000033 SO:0000031))
(assert (documentation SO:0000033 "RNA molecules that have been selected from random pools based on their ability to bind other molecules."))
(assert (= (name SO:0000033) "RNA_aptamer"))

(defconcept SO:0000034)
(assert (subset-of SO:0000034 SO:0001247))
(assert (documentation SO:0000034 "Morpholino oligos are synthesized from four different Morpholino subunits, each of which contains one of the four genetic bases (A, C, G, T) linked to a 6-membered morpholine ring. Eighteen to 25 subunits of these four subunit types are joined in a specific order by non-ionic phosphorodiamidate intersubunit linkages to give a Morpholino."))
(assert (= (name SO:0000034) "morpholino_oligo"))

(defconcept SO:0000035)
(assert (part_of SO:0000035 SO:0000234))
(assert (subset-of SO:0000035 SO:0000836))
(assert (documentation SO:0000035 "A riboswitch is a part of an mRNA that can act as a direct sensor of small molecules to control their own expression. A riboswitch is a cis element in the 5' end of an mRNA, that acts as a direct sensor of metabolites."))
(assert (= (name SO:0000035) "riboswitch"))

(defconcept SO:0000036)
(assert (subset-of SO:0000036 SO:0000626))
(assert (documentation SO:0000036 "A DNA region that is required for the binding of chromatin to the nuclear matrix."))
(assert (= (name SO:0000036) "matrix_attachment_site"))

(defconcept SO:0000037)
(assert (subset-of SO:0000037 SO:0000727))
(assert (documentation SO:0000037 "A DNA region that includes DNAse hypersensitive sites located 5' to a gene that confers the high-level, position-independent, and copy number-dependent expression to that gene."))
(assert (= (name SO:0000037) "locus_control_region"))

(defconcept SO:0000038)
(assert (documentation SO:0000038 "A collection of match parts."))
(assert (= (name SO:0000038) "match_set"))

(defconcept SO:0000039)
(assert (part_of SO:0000039 SO:0000343))
(assert (subset-of SO:0000039 SO:0001410))
(assert (documentation SO:0000039 "A part of a match, for example an hsp from blast is a match_part."))
(assert (= (name SO:0000039) "match_part"))

(defconcept SO:0000040)
(assert (subset-of SO:0000040 SO:0000151))
(assert (documentation SO:0000040 "A clone of a DNA region of a genome."))
(assert (= (name SO:0000040) "genomic_clone"))

(defconcept SO:0000041)
(assert (documentation SO:0000041 "An operation that can be applied to a sequence, that results in a change."))
(assert (= (name SO:0000041) "sequence_operation"))

(defconcept SO:0000042)
(assert (documentation SO:0000042 "An attribute of a pseudogene (SO:0000336)."))
(assert (= (name SO:0000042) "pseudogene_attribute"))

(defconcept SO:0000043)
(assert (subset-of SO:0000043 SO:0000336))
(assert (documentation SO:0000043 "A pseudogene where by an mRNA was retrotransposed. The mRNA sequence is transcribed back into the genome, lacking introns and promoters, but often including a polyA tail."))
(assert (= (name SO:0000043) "processed_pseudogene"))

(defconcept SO:0000044)
(assert (subset-of SO:0000044 SO:0000336))
(assert (documentation SO:0000044 "A pseudogene caused by unequal crossing over at recombination."))
(assert (= (name SO:0000044) "pseudogene_by_unequal_crossing_over"))

(defconcept SO:0000045)
(assert (documentation SO:0000045 "To remove a subsection of sequence."))
(assert (= (name SO:0000045) "delete"))

(defconcept SO:0000046)
(assert (documentation SO:0000046 "To insert a subsection of sequence."))
(assert (= (name SO:0000046) "insert"))

(defconcept SO:0000047)
(assert (documentation SO:0000047 "To invert a subsection of sequence."))
(assert (= (name SO:0000047) "invert"))

(defconcept SO:0000048)
(assert (documentation SO:0000048 "To substitute a subsection of sequence for another."))
(assert (= (name SO:0000048) "substitute"))

(defconcept SO:0000049)
(assert (documentation SO:0000049 "To translocate a subsection of sequence."))
(assert (= (name SO:0000049) "translocate"))

(defconcept SO:0000050)
(assert (documentation SO:0000050 "A part of a gene, that has no other route in the ontology back to region. This concept is necessary for logical inference as these parts must have the properties of region. It also allows us to associate all the parts of genes with a gene."))
(assert (= (name SO:0000050) "gene_part"))

(defconcept SO:0000051)
(assert (subset-of SO:0000051 SO:0000696))
(assert (documentation SO:0000051 "A DNA sequence used experimentally to detect the presence or absence of a complementary nucleic acid."))
(assert (= (name SO:0000051) "probe"))

(defconcept SO:0000052)
(assert (= (name SO:0000052) "assortment_derived_deficiency"))

(defconcept SO:0000053)
(assert (subset-of SO:0000053 SO:1000132))
(assert (documentation SO:0000053 "A sequence_variant_effect which changes the regulatory region of a gene."))
(assert (= (name SO:0000053) "sequence_variant_affecting_regulatory_region"))

(defconcept SO:0000054)
(assert (subset-of SO:0000054 SO:1000182))
(assert (documentation SO:0000054 "A kind of chromosome variation where the chromosome complement is not an exact multiple of the haploid number."))
(assert (= (name SO:0000054) "aneuploid"))

(defconcept SO:0000055)
(assert (subset-of SO:0000055 SO:0000054))
(assert (documentation SO:0000055 "A kind of chromosome variation where the chromosome complement is not an exact multiple of the haploid number as extra chromosomes are present."))
(assert (= (name SO:0000055) "hyperploid"))

(defconcept SO:0000056)
(assert (subset-of SO:0000056 SO:0000054))
(assert (documentation SO:0000056 "A kind of chromosome variation where the chromosome complement is not an exact multiple of the haploid number as some chromosomes are missing."))
(assert (= (name SO:0000056) "hypoploid"))

(defconcept SO:0000057)
(assert (subset-of SO:0000057 SO:0000752))
(assert (documentation SO:0000057 "A regulatory element of an operon to which activators or repressors bind thereby effecting translation of genes in that operon."))
(assert (= (name SO:0000057) "operator"))

(defconcept SO:0000058)
(assert (= (name SO:0000058) "assortment_derived_aneuploid"))

(defconcept SO:0000059)
(assert (subset-of SO:0000059 SO:0000410))
(assert (documentation SO:0000059 "A region of a molecule that binds to a nuclease."))
(assert (= (name SO:0000059) "nuclease_binding_site"))

(defconcept SO:0000060)
(assert (subset-of SO:0000060 SO:1000042))
(assert (= (name SO:0000060) "compound_chromosome_arm"))

(defconcept SO:0000061)
(assert (subset-of SO:0000061 SO:0000059))
(assert (documentation SO:0000061 "A region of a molecule that binds to a restriction enzyme."))
(assert (= (name SO:0000061) "restriction_enzyme_binding_site"))

(defconcept SO:0000062)
(assert (subset-of SO:0000062 SO:1000041))
(assert (subset-of SO:0000062 SO:1000029))
(assert (documentation SO:0000062 "An intrachromosomal transposition whereby a translocation in which one of the four broken ends loses a segment before re-joining."))
(assert (= (name SO:0000062) "deficient_intrachromosomal_transposition"))

(defconcept SO:0000063)
(assert (subset-of SO:0000063 SO:1000155))
(assert (documentation SO:0000063 "An interchromosomal transposition whereby a translocation in which one of the four broken ends loses a segment before re-joining."))
(assert (= (name SO:0000063) "deficient_interchromosomal_transposition"))

(defconcept SO:0000064)
(assert (= (name SO:0000064) "gene_by_transcript_attribute"))

(defconcept SO:0000065)
(assert (subset-of SO:0000065 SO:1000183))
(assert (documentation SO:0000065 "A chromosome structure variation whereby an arm exists as an individual chromosome element."))
(assert (= (name SO:0000065) "free_chromosome_arm"))

(defconcept SO:0000066)
(assert (= (name SO:0000066) "gene_by_polyadenylation_attribute"))

(defconcept SO:0000067)
(assert (subset-of SO:0000067 SO:0000401))
(assert (= (name SO:0000067) "gene_to_gene_feature"))

(defconcept SO:0000068)
(assert (subset-of SO:0000068 SO:0000067))
(assert (documentation SO:0000068 "An attribute describing a gene that has a sequence that overlaps the sequence of another gene."))
(assert (= (name SO:0000068) "overlapping"))

(defconcept SO:0000069)
(assert (subset-of SO:0000069 SO:0000068))
(assert (documentation SO:0000069 "An attribute to describe a gene when it is located within the intron of another gene."))
(assert (= (name SO:0000069) "inside_intron"))

(defconcept SO:0000070)
(assert (subset-of SO:0000070 SO:0000069))
(assert (documentation SO:0000070 "An attribute to describe a gene when it is located within the intron of another gene and on the opposite strand."))
(assert (= (name SO:0000070) "inside_intron_antiparallel"))

(defconcept SO:0000071)
(assert (subset-of SO:0000071 SO:0000069))
(assert (documentation SO:0000071 "An attribute to describe a gene when it is located within the intron of another gene and on the same strand."))
(assert (= (name SO:0000071) "inside_intron_parallel"))

(defconcept SO:0000072)
(assert (= (name SO:0000072) "end_overlapping_gene"))

(defconcept SO:0000073)
(assert (subset-of SO:0000073 SO:0000068))
(assert (documentation SO:0000073 "An attribute to describe a gene when the five prime region overlaps with another gene's 3' region."))
(assert (= (name SO:0000073) "five_prime_three_prime_overlap"))

(defconcept SO:0000074)
(assert (subset-of SO:0000074 SO:0000068))
(assert (documentation SO:0000074 "An attribute to describe a gene when the five prime region overlaps with another gene's five prime region."))
(assert (= (name SO:0000074) "five_prime_five_prime_overlap"))

(defconcept SO:0000075)
(assert (subset-of SO:0000075 SO:0000068))
(assert (documentation SO:0000075 "An attribute to describe a gene when the 3' region overlaps with another gene's 3' region."))
(assert (= (name SO:0000075) "three_prime_three_prime_overlap"))

(defconcept SO:0000076)
(assert (subset-of SO:0000076 SO:0000068))
(assert (documentation SO:0000076 "An attribute to describe a gene when the 3' region overlaps with another gene's 5' region."))
(assert (= (name SO:0000076) "three_prime_five_prime_overlap"))

(defconcept SO:0000077)
(assert (subset-of SO:0000077 SO:0000068))
(assert (documentation SO:0000077 "A region sequence that is complementary to a sequence of messenger RNA."))
(assert (= (name SO:0000077) "antisense"))

(defconcept SO:0000078)
(assert (subset-of SO:0000078 SO:0000673))
(assert (documentation SO:0000078 "A transcript that is polycistronic."))
(assert (= (name SO:0000078) "polycistronic_transcript"))

(defconcept SO:0000079)
(assert (subset-of SO:0000079 SO:0000078))
(assert (documentation SO:0000079 "A transcript that is dicistronic."))
(assert (= (name SO:0000079) "dicistronic_transcript"))

(defconcept SO:0000080)
(assert (subset-of SO:0000080 SO:0000081))
(assert (= (name SO:0000080) "operon_member"))

(defconcept SO:0000081)
(assert (subset-of SO:0000081 SO:0000401))
(assert (= (name SO:0000081) "gene_array_member"))

(defconcept SO:0000082)
(assert (= (name SO:0000082) "processed_transcript_attribute"))

(defconcept SO:0000083)
(assert (subset-of SO:0000083 SO:0000736))
(assert (= (name SO:0000083) "macronuclear_sequence"))

(defconcept SO:0000084)
(assert (subset-of SO:0000084 SO:0000736))
(assert (= (name SO:0000084) "micronuclear_sequence"))

(defconcept SO:0000085)
(assert (= (name SO:0000085) "gene_by_genome_location"))

(defconcept SO:0000086)
(assert (= (name SO:0000086) "gene_by_organelle_of_genome"))

(defconcept SO:0000087)
(assert (subset-of SO:0000087 SO:0000704))
(assert (documentation SO:0000087 "A gene from nuclear sequence."))
(assert (= (name SO:0000087) "nuclear_gene"))

(defconcept SO:0000088)
(assert (subset-of SO:0000088 SO:0000704))
(assert (documentation SO:0000088 "A gene located in mitochondrial sequence."))
(assert (= (name SO:0000088) "mt_gene"))

(defconcept SO:0000089)
(assert (subset-of SO:0000089 SO:0000088))
(assert (documentation SO:0000089 "A gene located in kinetoplast sequence."))
(assert (= (name SO:0000089) "kinetoplast_gene"))

(defconcept SO:0000090)
(assert (subset-of SO:0000090 SO:0000704))
(assert (documentation SO:0000090 "A gene from plastid sequence."))
(assert (= (name SO:0000090) "plastid_gene"))

(defconcept SO:0000091)
(assert (subset-of SO:0000091 SO:0000090))
(assert (documentation SO:0000091 "A gene from apicoplast sequence."))
(assert (= (name SO:0000091) "apicoplast_gene"))

(defconcept SO:0000092)
(assert (subset-of SO:0000092 SO:0000090))
(assert (documentation SO:0000092 "A gene from chloroplast sequence."))
(assert (= (name SO:0000092) "ct_gene"))

(defconcept SO:0000093)
(assert (subset-of SO:0000093 SO:0000090))
(assert (documentation SO:0000093 "A gene from chromoplast_sequence."))
(assert (= (name SO:0000093) "chromoplast_gene"))

(defconcept SO:0000094)
(assert (subset-of SO:0000094 SO:0000090))
(assert (documentation SO:0000094 "A gene from cyanelle sequence."))
(assert (= (name SO:0000094) "cyanelle_gene"))

(defconcept SO:0000095)
(assert (subset-of SO:0000095 SO:0000090))
(assert (documentation SO:0000095 "A plastid gene from leucoplast sequence."))
(assert (= (name SO:0000095) "leucoplast_gene"))

(defconcept SO:0000096)
(assert (subset-of SO:0000096 SO:0000090))
(assert (documentation SO:0000096 "A gene from proplastid sequence."))
(assert (= (name SO:0000096) "proplastid_gene"))

(defconcept SO:0000097)
(assert (subset-of SO:0000097 SO:0000704))
(assert (documentation SO:0000097 "A gene from nucleomorph sequence."))
(assert (= (name SO:0000097) "nucleomorph_gene"))

(defconcept SO:0000098)
(assert (subset-of SO:0000098 SO:0000704))
(assert (documentation SO:0000098 "A gene from plasmid sequence."))
(assert (= (name SO:0000098) "plasmid_gene"))

(defconcept SO:0000099)
(assert (subset-of SO:0000099 SO:0000704))
(assert (documentation SO:0000099 "A gene from proviral sequence."))
(assert (= (name SO:0000099) "proviral_gene"))

(defconcept SO:0000100)
(assert (subset-of SO:0000100 SO:0000099))
(assert (documentation SO:0000100 "A proviral gene with origin endogenous retrovirus."))
(assert (= (name SO:0000100) "endogenous_retroviral_gene"))

(defconcept SO:0000101)
(assert (subset-of SO:0000101 SO:0001039))
(assert (documentation SO:0000101 "A transposon or insertion sequence. An element that can insert in a variety of DNA sequences."))
(assert (= (name SO:0000101) "transposable_element"))

(defconcept SO:0000102)
(assert (subset-of SO:0000102 SO:0000347))
(assert (documentation SO:0000102 "A match to an EST or cDNA sequence."))
(assert (= (name SO:0000102) "expressed_sequence_match"))

(defconcept SO:0000103)
(assert (part_of SO:0000103 SO:0000753))
(assert (subset-of SO:0000103 SO:0000699))
(assert (documentation SO:0000103 "The end of the clone insert."))
(assert (= (name SO:0000103) "clone_insert_end"))

(defconcept SO:0000104)
(assert (derives_from SO:0000104 SO:0000316))
(assert (subset-of SO:0000104 SO:0001411))
(assert (documentation SO:0000104 "A sequence of amino acids linked by peptide bonds which may lack appreciable tertiary structure and may not be liable to irreversible denaturation."))
(assert (= (name SO:0000104) "polypeptide"))

(defconcept SO:0000105)
(assert (subset-of SO:0000105 SO:0000830))
(assert (documentation SO:0000105 "A region of the chromosome between the centromere and the telomere. Human chromosomes have two arms, the p arm (short) and the q arm (long) which are separated from each other by the centromere."))
(assert (= (name SO:0000105) "chromosome_arm"))

(defconcept SO:0000106)
(assert (= (name SO:0000106) "non_capped_primary_transcript"))

(defconcept SO:0000107)
(assert (subset-of SO:0000107 SO:0000112))
(assert (= (name SO:0000107) "sequencing_primer"))

(defconcept SO:0000108)
(assert (subset-of SO:0000108 SO:0000234))
(assert (documentation SO:0000108 "An mRNA with a frameshift."))
(assert (= (name SO:0000108) "mRNA_with_frameshift"))

(defconcept SO:0000109)
(assert (documentation SO:0000109 "A sequence_variant is a non exact copy of a sequence_feature or genome exhibiting one or more sequence_alteration."))
(assert (= (name SO:0000109) "sequence_variant_obs"))

(defconcept SO:0000110)
(assert (documentation SO:0000110 "An extent of biological sequence."))
(assert (= (name SO:0000110) "sequence_feature"))

(defconcept SO:0000111)
(assert (part_of SO:0000111 SO:0000101))
(assert (subset-of SO:0000111 SO:0000704))
(assert (documentation SO:0000111 "A gene encoded within a transposable element. For example gag, int, env and pol are the transposable element genes of the TY element in yeast."))
(assert (= (name SO:0000111) "transposable_element_gene"))

(defconcept SO:0000112)
(assert (subset-of SO:0000112 SO:0000441))
(assert (documentation SO:0000112 "A short preexisting polynucleotide chain to which new deoxyribonucleotides can be added by DNA polymerase."))
(assert (= (name SO:0000112) "primer"))

(defconcept SO:0000113)
(assert (subset-of SO:0000113 SO:0001039))
(assert (documentation SO:0000113 "A viral sequence which has integrated into a host genome."))
(assert (= (name SO:0000113) "proviral_region"))

(defconcept SO:0000114)
(assert (subset-of SO:0000114 SO:0000306))
(assert (documentation SO:0000114 "A methylated deoxy-cytosine."))
(assert (= (name SO:0000114) "methylated_C"))

(defconcept SO:0000115)
(assert (= (name SO:0000115) "transcript_feature"))

(defconcept SO:0000116)
(assert (subset-of SO:0000116 SO:0000237))
(assert (documentation SO:0000116 "An attribute describing a sequence that is modified by editing."))
(assert (= (name SO:0000116) "edited"))

(defconcept SO:0000117)
(assert (= (name SO:0000117) "transcript_with_readthrough_stop_codon"))

(defconcept SO:0000118)
(assert (subset-of SO:0000118 SO:0000673))
(assert (documentation SO:0000118 "A transcript with a translational frameshift."))
(assert (= (name SO:0000118) "transcript_with_translational_frameshift"))

(defconcept SO:0000119)
(assert (subset-of SO:0000119 SO:0000401))
(assert (documentation SO:0000119 "An attribute to describe a sequence that is regulated."))
(assert (= (name SO:0000119) "regulated"))

(defconcept SO:0000120)
(assert (subset-of SO:0000120 SO:0000185))
(assert (documentation SO:0000120 "A primary transcript that, at least in part, encodes one or more proteins."))
(assert (= (name SO:0000120) "protein_coding_primary_transcript"))

(defconcept SO:0000121)
(assert (subset-of SO:0000121 SO:0000112))
(assert (documentation SO:0000121 "A single stranded oligo used for polymerase chain reaction."))
(assert (= (name SO:0000121) "forward_primer"))

(defconcept SO:0000122)
(assert (subset-of SO:0000122 SO:0000002))
(assert (documentation SO:0000122 "A folded RNA sequence."))
(assert (= (name SO:0000122) "RNA_sequence_secondary_structure"))

(defconcept SO:0000123)
(assert (subset-of SO:0000123 SO:0000119))
(assert (documentation SO:0000123 "An attribute describing a gene that is regulated at transcription."))
(assert (= (name SO:0000123) "transcriptionally_regulated"))

(defconcept SO:0000124)
(assert (subset-of SO:0000124 SO:0000123))
(assert (documentation SO:0000124 "Expressed in relatively constant amounts without regard to cellular environmental conditions such as the concentration of a particular substrate."))
(assert (= (name SO:0000124) "transcriptionally_constitutive"))

(defconcept SO:0000125)
(assert (subset-of SO:0000125 SO:0000123))
(assert (documentation SO:0000125 "An inducer molecule is required for transcription to occur."))
(assert (= (name SO:0000125) "transcriptionally_induced"))

(defconcept SO:0000126)
(assert (subset-of SO:0000126 SO:0000123))
(assert (documentation SO:0000126 "A repressor molecule is required for transcription to stop."))
(assert (= (name SO:0000126) "transcriptionally_repressed"))

(defconcept SO:0000127)
(assert (subset-of SO:0000127 SO:0000704))
(assert (documentation SO:0000127 "A gene that is silenced."))
(assert (= (name SO:0000127) "silenced_gene"))

(defconcept SO:0000128)
(assert (subset-of SO:0000128 SO:0000127))
(assert (documentation SO:0000128 "A gene that is silenced by DNA modification."))
(assert (= (name SO:0000128) "gene_silenced_by_DNA_modification"))

(defconcept SO:0000129)
(assert (subset-of SO:0000129 SO:0000128))
(assert (documentation SO:0000129 "A gene that is silenced by DNA methylation."))
(assert (= (name SO:0000129) "gene_silenced_by_DNA_methylation"))

(defconcept SO:0000130)
(assert (subset-of SO:0000130 SO:0000119))
(assert (documentation SO:0000130 "An attribute describing a gene that is regulated after it has been translated."))
(assert (= (name SO:0000130) "post_translationally_regulated"))

(defconcept SO:0000131)
(assert (subset-of SO:0000131 SO:0000119))
(assert (documentation SO:0000131 "An attribute describing a gene that is regulated as it is translated."))
(assert (= (name SO:0000131) "translationally_regulated"))

(defconcept SO:0000132)
(assert (subset-of SO:0000132 SO:0000112))
(assert (documentation SO:0000132 "A single stranded oligo used for polymerase chain reaction."))
(assert (= (name SO:0000132) "reverse_primer"))

(defconcept SO:0000133)
(assert (subset-of SO:0000133 SO:0000401))
(assert (documentation SO:0000133 "This attribute describes a gene where heritable changes other than those in the DNA sequence occur. These changes include: modification to the DNA (such as DNA methylation, the covalent modification of cytosine), and post-translational modification of histones."))
(assert (= (name SO:0000133) "epigenetically_modified"))

(defconcept SO:0000134)
(assert (subset-of SO:0000134 SO:0000133))
(assert (subset-of SO:0000134 SO:0000119))
(assert (documentation SO:0000134 "Imprinted genes are epigenetically modified genes that are expressed monoallelically according to their parent of origin."))
(assert (= (name SO:0000134) "imprinted"))

(defconcept SO:0000135)
(assert (subset-of SO:0000135 SO:0000134))
(assert (documentation SO:0000135 "The maternal copy of the gene is modified, rendering it transcriptionally silent."))
(assert (= (name SO:0000135) "maternally_imprinted"))

(defconcept SO:0000136)
(assert (subset-of SO:0000136 SO:0000134))
(assert (documentation SO:0000136 "The paternal copy of the gene is modified, rendering it transcriptionally silent."))
(assert (= (name SO:0000136) "paternally_imprinted"))

(defconcept SO:0000137)
(assert (subset-of SO:0000137 SO:0000133))
(assert (documentation SO:0000137 "Allelic exclusion is a process occurring in diploid organisms, where a gene is inactivated and not expressed in that cell."))
(assert (= (name SO:0000137) "allelically_excluded"))

(defconcept SO:0000138)
(assert (subset-of SO:0000138 SO:0000898))
(assert (documentation SO:0000138 "An epigenetically modified gene, rearranged at the DNA level."))
(assert (= (name SO:0000138) "gene_rearranged_at_DNA_level"))

(defconcept SO:0000139)
(assert (part_of SO:0000139 SO:0000203))
(assert (subset-of SO:0000139 SO:0000837))
(assert (documentation SO:0000139 "Region in mRNA where ribosome assembles."))
(assert (= (name SO:0000139) "ribosome_entry_site"))

(defconcept SO:0000140)
(assert (part_of SO:0000140 SO:0000234))
(assert (subset-of SO:0000140 SO:0005836))
(assert (documentation SO:0000140 "A sequence segment located within the five prime end of an mRNA that causes premature termination of translation."))
(assert (= (name SO:0000140) "attenuator"))

(defconcept SO:0000141)
(assert (part_of SO:0000141 SO:0000673))
(assert (subset-of SO:0000141 SO:0005836))
(assert (documentation SO:0000141 "The sequence of DNA located either at the end of the transcript that causes RNA polymerase to terminate transcription."))
(assert (= (name SO:0000141) "terminator"))

(defconcept SO:0000142)
(assert (subset-of SO:0000142 SO:0000002))
(assert (documentation SO:0000142 "A folded DNA sequence."))
(assert (= (name SO:0000142) "DNA_sequence_secondary_structure"))

(defconcept SO:0000143)
(assert (subset-of SO:0000143 SO:0001410))
(assert (documentation SO:0000143 "A region of known length which may be used to manufacture a longer region."))
(assert (= (name SO:0000143) "assembly_component"))

(defconcept SO:0000144)
(assert (= (name SO:0000144) "primary_transcript_attribute"))

(defconcept SO:0000145)
(assert (subset-of SO:0000145 SO:0000360))
(assert (documentation SO:0000145 "A codon that has been redefined at translation. The redefinition may be as a result of translational bypass, translational frameshifting or stop codon readthrough."))
(assert (= (name SO:0000145) "recoded_codon"))

(defconcept SO:0000146)
(assert (subset-of SO:0000146 SO:0000237))
(assert (documentation SO:0000146 "An attribute describing when a sequence, usually an mRNA is capped by the addition of a modified guanine nucleotide at the 5' end."))
(assert (= (name SO:0000146) "capped"))

(defconcept SO:0000147)
(assert (subset-of SO:0000147 SO:0000833))
(assert (documentation SO:0000147 "A region of the transcript sequence within a gene which is not removed from the primary RNA transcript by RNA splicing."))
(assert (= (name SO:0000147) "exon"))

(defconcept SO:0000148)
(assert (part_of SO:0000148 SO:0000719))
(assert (subset-of SO:0000148 SO:0000353))
(assert (documentation SO:0000148 "One or more contigs that have been ordered and oriented using end-read information. Contains gaps that are filled with N's."))
(assert (= (name SO:0000148) "supercontig"))

(defconcept SO:0000149)
(assert (part_of SO:0000149 SO:0000148))
(assert (subset-of SO:0000149 SO:0000353))
(assert (subset-of SO:0000149 SO:0000143))
(assert (documentation SO:0000149 "A contiguous sequence derived from sequence assembly. Has no gaps, but may contain N's from unavailable bases."))
(assert (= (name SO:0000149) "contig"))

(defconcept SO:0000150)
(assert (part_of SO:0000150 SO:0000149))
(assert (subset-of SO:0000150 SO:0000143))
(assert (documentation SO:0000150 "A sequence obtained from a single sequencing experiment. Typically a read is produced when a base calling program interprets information from a chromatogram trace file produced from a sequencing machine."))
(assert (= (name SO:0000150) "read"))

(defconcept SO:0000151)
(assert (subset-of SO:0000151 SO:0000695))
(assert (documentation SO:0000151 "A piece of DNA that has been inserted in a vector so that it can be propagated in a host bacterium or some other organism."))
(assert (= (name SO:0000151) "clone"))

(defconcept SO:0000152)
(assert (subset-of SO:0000152 SO:0000440))
(assert (documentation SO:0000152 "Yeast Artificial Chromosome, a vector constructed from the telomeric, centromeric, and replication origin sequences needed for replication in yeast cells."))
(assert (= (name SO:0000152) "YAC"))

(defconcept SO:0000153)
(assert (subset-of SO:0000153 SO:0000440))
(assert (documentation SO:0000153 "Bacterial Artificial Chromosome, a cloning vector that can be propagated as mini-chromosomes in a bacterial host."))
(assert (= (name SO:0000153) "BAC"))

(defconcept SO:0000154)
(assert (subset-of SO:0000154 SO:0000440))
(assert (documentation SO:0000154 "The P1-derived artificial chromosome are DNA constructs that are derived from the DNA of P1 bacteriophage. They can carry large amounts (about 100-300 kilobases) of other sequences for a variety of bioengineering purposes. It is one type of vector used to clone DNA fragments (100- to 300-kb insert size; average, 150 kb) in Escherichia coli cells."))
(assert (= (name SO:0000154) "PAC"))

(defconcept SO:0000155)
(assert (subset-of SO:0000155 SO:0001235))
(assert (documentation SO:0000155 "A self replicating, using the hosts cellular machinery, often circular nucleic acid molecule that is distinct from a chromosome in the organism."))
(assert (= (name SO:0000155) "plasmid"))

(defconcept SO:0000156)
(assert (subset-of SO:0000156 SO:0000440))
(assert (documentation SO:0000156 "A cloning vector that is a hybrid of lambda phages and a plasmid that can be propagated as a plasmid or packaged as a phage,since they retain the lambda cos sites."))
(assert (= (name SO:0000156) "cosmid"))

(defconcept SO:0000157)
(assert (subset-of SO:0000157 SO:0000440))
(assert (documentation SO:0000157 "A plasmid which carries within its sequence a bacteriophage replication origin. When the host bacterium is infected with \\\"helper\\\" phage, a phagemid is replicated along with the phage DNA and packaged into phage capsids."))
(assert (= (name SO:0000157) "phagemid"))

(defconcept SO:0000158)
(assert (subset-of SO:0000158 SO:0000440))
(assert (documentation SO:0000158 "A cloning vector that utilizes the E. coli F factor."))
(assert (= (name SO:0000158) "fosmid"))

(defconcept SO:0000159)
(assert (subset-of SO:0000159 SO:0001411))
(assert (subset-of SO:0000159 SO:0001059))
(assert (documentation SO:0000159 "The point at which one or more contiguous nucleotides were excised."))
(assert (= (name SO:0000159) "deletion"))

(defconcept SO:0000160)
(assert (documentation SO:0000160 "A linear clone derived from lambda bacteriophage. The genes involved in the lysogenic pathway are removed from the from the viral DNA. Up to 25 kb of foreign DNA can then be inserted into the lambda genome."))
(assert (= (name SO:0000160) "lambda_clone"))

(defconcept SO:0000161)
(assert (subset-of SO:0000161 SO:0000306))
(assert (documentation SO:0000161 "A modified RNA base in which adenine has been methylated."))
(assert (= (name SO:0000161) "methylated_A"))

(defconcept SO:0000162)
(assert (subset-of SO:0000162 SO:0000835))
(assert (documentation SO:0000162 "Consensus region of primary transcript bordering junction of splicing. A region that overlaps exactly 2 base and adjacent_to splice_junction."))
(assert (= (name SO:0000162) "splice_site"))

(defconcept SO:0000163)
(assert (subset-of SO:0000163 SO:0001419))
(assert (documentation SO:0000163 "Intronic 2 bp region bordering the exon, at the 5' edge of the intron. A splice_site that is downstream_adjacent_to exon and starts intron."))
(assert (= (name SO:0000163) "five_prime_cis_splice_site"))

(defconcept SO:0000164)
(assert (subset-of SO:0000164 SO:0001419))
(assert (documentation SO:0000164 "Intronic 2 bp region bordering the exon, at the 3' edge of the intron. A splice_site that is upstream_adjacent_to exon and finishes intron."))
(assert (= (name SO:0000164) "three_prime_cis_splice_site"))

(defconcept SO:0000165)
(assert (subset-of SO:0000165 SO:0000727))
(assert (documentation SO:0000165 "A cis-acting sequence that increases the utilization of (some) eukaryotic promoters, and can function in either orientation and in any location (upstream or downstream) relative to the promoter."))
(assert (= (name SO:0000165) "enhancer"))

(defconcept SO:0000166)
(assert (subset-of SO:0000166 SO:0000165))
(assert (documentation SO:0000166 "An enhancer bound by a factor."))
(assert (= (name SO:0000166) "enhancer_bound_by_factor"))

(defconcept SO:0000167)
(assert (subset-of SO:0000167 SO:0001055))
(assert (documentation SO:0000167 "A regulatory_region composed of the TSS(s) and binding sites for TF_complexes of the basal transcription machinery."))
(assert (= (name SO:0000167) "promoter"))

(defconcept SO:0000168)
(assert (documentation SO:0000168 "A specific nucleotide sequence of DNA at or near which a particular restriction enzyme cuts the DNA."))
(assert (= (name SO:0000168) "restriction_enzyme_cut_site"))

(defconcept SO:0000169)
(assert (subset-of SO:0000169 SO:0001203))
(assert (documentation SO:0000169 "A DNA sequence in eukaryotic DNA to which RNA polymerase I binds, to begin transcription."))
(assert (= (name SO:0000169) "RNApol_I_promoter"))

(defconcept SO:0000170)
(assert (has_part SO:0000170 SO:0000174))
(assert (subset-of SO:0000170 SO:0001203))
(assert (subset-of SO:0000170 SO:0000727))
(assert (documentation SO:0000170 "A DNA sequence in eukaryotic DNA to which RNA polymerase II binds, to begin transcription."))
(assert (= (name SO:0000170) "RNApol_II_promoter"))

(defconcept SO:0000171)
(assert (has_part SO:0000171 SO:0000174))
(assert (subset-of SO:0000171 SO:0001203))
(assert (subset-of SO:0000171 SO:0000727))
(assert (documentation SO:0000171 "A DNA sequence in eukaryotic DNA to which RNA polymerase III binds, to begin transcription."))
(assert (= (name SO:0000171) "RNApol_III_promoter"))

(defconcept SO:0000172)
(assert (part_of SO:0000172 SO:0000170))
(assert (subset-of SO:0000172 SO:0000235))
(assert (documentation SO:0000172 "Part of a conserved sequence located about 75-bp upstream of the start point of eukaryotic transcription units which may be involved in RNA polymerase binding; consensus=GG(C|T)CAATCT."))
(assert (= (name SO:0000172) "CAAT_signal"))

(defconcept SO:0000173)
(assert (part_of SO:0000173 SO:0000170))
(assert (subset-of SO:0000173 SO:0000713))
(assert (documentation SO:0000173 "A conserved GC-rich region located upstream of the start point of eukaryotic transcription units which may occur in multiple copies or in either orientation; consensus=GGGCGG."))
(assert (= (name SO:0000173) "GC_rich_promoter_region"))

(defconcept SO:0000174)
(assert (subset-of SO:0000174 SO:0000235))
(assert (documentation SO:0000174 "A conserved AT-rich septamer found about 25-bp before the start point of many eukaryotic RNA polymerase II transcript units; may be involved in positioning the enzyme for correct initiation; consensus=TATA(A|T)A(A|T)."))
(assert (= (name SO:0000174) "TATA_box"))

(defconcept SO:0000175)
(assert (part_of SO:0000175 SO:0000613))
(assert (subset-of SO:0000175 SO:0000713))
(assert (documentation SO:0000175 "A conserved region about 10-bp upstream of the start point of bacterial transcription units which may be involved in binding RNA polymerase; consensus=TAtAaT."))
(assert (= (name SO:0000175) "minus_10_signal"))

(defconcept SO:0000176)
(assert (part_of SO:0000176 SO:0000613))
(assert (subset-of SO:0000176 SO:0000713))
(assert (documentation SO:0000176 "A conserved hexamer about 35-bp upstream of the start point of bacterial transcription units; consensus=TTGACa or TGTTGACA."))
(assert (= (name SO:0000176) "minus_35_signal"))

(defconcept SO:0000177)
(assert (subset-of SO:0000177 SO:0000347))
(assert (documentation SO:0000177 "A nucleotide match against a sequence from another organism."))
(assert (= (name SO:0000177) "cross_genome_match"))

(defconcept SO:0000178)
(assert (subset-of SO:0000178 SO:0005855))
(assert (documentation SO:0000178 "A group of contiguous genes transcribed as a single (polycistronic) mRNA from a single regulatory region."))
(assert (= (name SO:0000178) "operon"))

(defconcept SO:0000179)
(assert (part_of SO:0000179 SO:0000753))
(assert (subset-of SO:0000179 SO:0000699))
(assert (documentation SO:0000179 "The start of the clone insert."))
(assert (= (name SO:0000179) "clone_insert_start"))

(defconcept SO:0000180)
(assert (subset-of SO:0000180 SO:0000101))
(assert (documentation SO:0000180 "A transposable element that is incorporated into a chromosome by a mechanism that requires reverse transcriptase."))
(assert (= (name SO:0000180) "retrotransposon"))

(defconcept SO:0000181)
(assert (subset-of SO:0000181 SO:0000347))
(assert (documentation SO:0000181 "A match against a translated sequence."))
(assert (= (name SO:0000181) "translated_nucleotide_match"))

(defconcept SO:0000182)
(assert (subset-of SO:0000182 SO:0000101))
(assert (documentation SO:0000182 "A transposon where the mechanism of transposition is via a DNA intermediate."))
(assert (= (name SO:0000182) "DNA_transposon"))

(defconcept SO:0000183)
(assert (subset-of SO:0000183 SO:0000842))
(assert (documentation SO:0000183 "A region of the gene which is not transcribed."))
(assert (= (name SO:0000183) "non_transcribed_region"))

(defconcept SO:0000184)
(assert (subset-of SO:0000184 SO:0000662))
(assert (documentation SO:0000184 "A major type of spliceosomal intron spliced by the U2 spliceosome, that includes U1, U2, U4/U6 and U5 snRNAs."))
(assert (= (name SO:0000184) "U2_intron"))

(defconcept SO:0000185)
(assert (subset-of SO:0000185 SO:0000673))
(assert (documentation SO:0000185 "A transcript that in its initial state requires modification to be functional."))
(assert (= (name SO:0000185) "primary_transcript"))

(defconcept SO:0000186)
(assert (subset-of SO:0000186 SO:0000180))
(assert (documentation SO:0000186 "A retrotransposon flanked by long terminal repeat sequences."))
(assert (= (name SO:0000186) "LTR_retrotransposon"))

(defconcept SO:0000187)
(assert (documentation SO:0000187 "A group of characterized repeat sequences."))
(assert (= (name SO:0000187) "repeat_family"))

(defconcept SO:0000188)
(assert (subset-of SO:0000188 SO:0000835))
(assert (documentation SO:0000188 "A region of a primary transcript that is transcribed, but removed from within the transcript by splicing together the sequences (exons) on either side of it."))
(assert (= (name SO:0000188) "intron"))

(defconcept SO:0000189)
(assert (subset-of SO:0000189 SO:0000180))
(assert (documentation SO:0000189 "A retrotransposon without long terminal repeat sequences."))
(assert (= (name SO:0000189) "non_LTR_retrotransposon"))

(defconcept SO:0000190)
(assert (subset-of SO:0000190 SO:0000188))
(assert (= (name SO:0000190) "five_prime_intron"))

(defconcept SO:0000191)
(assert (subset-of SO:0000191 SO:0000188))
(assert (= (name SO:0000191) "interior_intron"))

(defconcept SO:0000192)
(assert (subset-of SO:0000192 SO:0000188))
(assert (= (name SO:0000192) "three_prime_intron"))

(defconcept SO:0000193)
(assert (subset-of SO:0000193 SO:0000412))
(assert (documentation SO:0000193 "A DNA fragment used as a reagent to detect the polymorphic genomic loci by hybridizing against the genomic DNA digested with a given restriction enzyme."))
(assert (= (name SO:0000193) "RFLP_fragment"))

(defconcept SO:0000194)
(assert (subset-of SO:0000194 SO:0000189))
(assert (documentation SO:0000194 "A dispersed repeat family with many copies, each from 1 to 6 kb long. New elements are generated by retroposition of a transcribed copy. Typically the LINE contains 2 ORF's one of which is reverse transcriptase, and 3'and 5' direct repeats."))
(assert (= (name SO:0000194) "LINE_element"))

(defconcept SO:0000195)
(assert (subset-of SO:0000195 SO:0000147))
(assert (documentation SO:0000195 "An exon whereby at least one base is part of a codon (here, 'codon' is inclusive of the stop_codon)."))
(assert (= (name SO:0000195) "coding_exon"))

(defconcept SO:0000196)
(assert (part_of SO:0000196 SO:0000200))
(assert (subset-of SO:0000196 SO:0001215))
(assert (documentation SO:0000196 "The sequence of the five_prime_coding_exon that codes for protein."))
(assert (= (name SO:0000196) "five_prime_coding_exon_coding_region"))

(defconcept SO:0000197)
(assert (part_of SO:0000197 SO:0000202))
(assert (subset-of SO:0000197 SO:0001215))
(assert (documentation SO:0000197 "The sequence of the three_prime_coding_exon that codes for protein."))
(assert (= (name SO:0000197) "three_prime_coding_exon_coding_region"))

(defconcept SO:0000198)
(assert (subset-of SO:0000198 SO:0000147))
(assert (documentation SO:0000198 "An exon that does not contain any codons."))
(assert (= (name SO:0000198) "noncoding_exon"))

(defconcept SO:0000199)
(assert (subset-of SO:0000199 SO:0001059))
(assert (documentation SO:0000199 "A region of nucleotide sequence that has translocated to a new position."))
(assert (= (name SO:0000199) "translocation"))

(defconcept SO:0000200)
(assert (subset-of SO:0000200 SO:0000195))
(assert (documentation SO:0000200 "The 5' most coding exon."))
(assert (= (name SO:0000200) "five_prime_coding_exon"))

(defconcept SO:0000201)
(assert (subset-of SO:0000201 SO:0000147))
(assert (documentation SO:0000201 "An exon that is bounded by 5' and 3' splice sites."))
(assert (= (name SO:0000201) "interior_exon"))

(defconcept SO:0000202)
(assert (subset-of SO:0000202 SO:0000195))
(assert (documentation SO:0000202 "The coding exon that is most 3-prime on a given transcript."))
(assert (= (name SO:0000202) "three_prime_coding_exon"))

(defconcept SO:0000203)
(assert (subset-of SO:0000203 SO:0000836))
(assert (documentation SO:0000203 "Messenger RNA sequences that are untranslated and lie five prime or three prime to sequences which are translated."))
(assert (= (name SO:0000203) "UTR"))

(defconcept SO:0000204)
(assert (subset-of SO:0000204 SO:0000203))
(assert (documentation SO:0000204 "A region at the 5' end of a mature transcript (preceding the initiation codon) that is not translated into a protein."))
(assert (= (name SO:0000204) "five_prime_UTR"))

(defconcept SO:0000205)
(assert (subset-of SO:0000205 SO:0000203))
(assert (documentation SO:0000205 "A region at the 3' end of a mature transcript (following the stop codon) that is not translated into a protein."))
(assert (= (name SO:0000205) "three_prime_UTR"))

(defconcept SO:0000206)
(assert (subset-of SO:0000206 SO:0000189))
(assert (documentation SO:0000206 "A repetitive element, a few hundred base pairs long, that is dispersed throughout the genome. A common human SINE is the Alu element."))
(assert (= (name SO:0000206) "SINE_element"))

(defconcept SO:0000207)
(assert (subset-of SO:0000207 SO:0000248))
(assert (= (name SO:0000207) "simple_sequence_length_variation"))

(defconcept SO:0000208)
(assert (subset-of SO:0000208 SO:0000182))
(assert (documentation SO:0000208 "A DNA transposable element defined as having termini with perfect, or nearly perfect short inverted repeats, generally 10 - 40 nucleotides long."))
(assert (= (name SO:0000208) "terminal_inverted_repeat_element"))

(defconcept SO:0000209)
(assert (subset-of SO:0000209 SO:0000483))
(assert (documentation SO:0000209 "A primary transcript encoding a ribosomal RNA."))
(assert (= (name SO:0000209) "rRNA_primary_transcript"))

(defconcept SO:0000210)
(assert (subset-of SO:0000210 SO:0000483))
(assert (documentation SO:0000210 "A primary transcript encoding a transfer RNA (SO:0000253)."))
(assert (= (name SO:0000210) "tRNA_primary_transcript"))

(defconcept SO:0000211)
(assert (subset-of SO:0000211 SO:0000210))
(assert (documentation SO:0000211 "A primary transcript encoding alanyl tRNA."))
(assert (= (name SO:0000211) "alanine_tRNA_primary_transcript"))

(defconcept SO:0000212)
(assert (subset-of SO:0000212 SO:0000210))
(assert (documentation SO:0000212 "A primary transcript encoding arginyl tRNA (SO:0000255)."))
(assert (= (name SO:0000212) "arginine_tRNA_primary_transcript"))

(defconcept SO:0000213)
(assert (subset-of SO:0000213 SO:0000210))
(assert (documentation SO:0000213 "A primary transcript encoding asparaginyl tRNA (SO:0000256)."))
(assert (= (name SO:0000213) "asparagine_tRNA_primary_transcript"))

(defconcept SO:0000214)
(assert (subset-of SO:0000214 SO:0000210))
(assert (documentation SO:0000214 "A primary transcript encoding aspartyl tRNA (SO:0000257)."))
(assert (= (name SO:0000214) "aspartic_acid_tRNA_primary_transcript"))

(defconcept SO:0000215)
(assert (subset-of SO:0000215 SO:0000210))
(assert (documentation SO:0000215 "A primary transcript encoding cysteinyl tRNA (SO:0000258)."))
(assert (= (name SO:0000215) "cysteine_tRNA_primary_transcript"))

(defconcept SO:0000216)
(assert (subset-of SO:0000216 SO:0000210))
(assert (documentation SO:0000216 "A primary transcript encoding glutaminyl tRNA (SO:0000260)."))
(assert (= (name SO:0000216) "glutamic_acid_tRNA_primary_transcript"))

(defconcept SO:0000217)
(assert (subset-of SO:0000217 SO:0000210))
(assert (documentation SO:0000217 "A primary transcript encoding glutamyl tRNA (SO:0000260)."))
(assert (= (name SO:0000217) "glutamine_tRNA_primary_transcript"))

(defconcept SO:0000218)
(assert (subset-of SO:0000218 SO:0000210))
(assert (documentation SO:0000218 "A primary transcript encoding glycyl tRNA (SO:0000263)."))
(assert (= (name SO:0000218) "glycine_tRNA_primary_transcript"))

(defconcept SO:0000219)
(assert (subset-of SO:0000219 SO:0000210))
(assert (documentation SO:0000219 "A primary transcript encoding histidyl tRNA (SO:0000262)."))
(assert (= (name SO:0000219) "histidine_tRNA_primary_transcript"))

(defconcept SO:0000220)
(assert (subset-of SO:0000220 SO:0000210))
(assert (documentation SO:0000220 "A primary transcript encoding isoleucyl tRNA (SO:0000263)."))
(assert (= (name SO:0000220) "isoleucine_tRNA_primary_transcript"))

(defconcept SO:0000221)
(assert (subset-of SO:0000221 SO:0000210))
(assert (documentation SO:0000221 "A primary transcript encoding leucyl tRNA (SO:0000264)."))
(assert (= (name SO:0000221) "leucine_tRNA_primary_transcript"))

(defconcept SO:0000222)
(assert (subset-of SO:0000222 SO:0000210))
(assert (documentation SO:0000222 "A primary transcript encoding lysyl tRNA (SO:0000265)."))
(assert (= (name SO:0000222) "lysine_tRNA_primary_transcript"))

(defconcept SO:0000223)
(assert (subset-of SO:0000223 SO:0000210))
(assert (documentation SO:0000223 "A primary transcript encoding methionyl tRNA (SO:0000266)."))
(assert (= (name SO:0000223) "methionine_tRNA_primary_transcript"))

(defconcept SO:0000224)
(assert (subset-of SO:0000224 SO:0000210))
(assert (documentation SO:0000224 "A primary transcript encoding phenylalanyl tRNA (SO:0000267)."))
(assert (= (name SO:0000224) "phenylalanine_tRNA_primary_transcript"))

(defconcept SO:0000225)
(assert (subset-of SO:0000225 SO:0000210))
(assert (documentation SO:0000225 "A primary transcript encoding prolyl tRNA (SO:0000268)."))
(assert (= (name SO:0000225) "proline_tRNA_primary_transcript"))

(defconcept SO:0000226)
(assert (subset-of SO:0000226 SO:0000210))
(assert (documentation SO:0000226 "A primary transcript encoding seryl tRNA (SO:000269)."))
(assert (= (name SO:0000226) "serine_tRNA_primary_transcript"))

(defconcept SO:0000227)
(assert (subset-of SO:0000227 SO:0000210))
(assert (documentation SO:0000227 "A primary transcript encoding threonyl tRNA (SO:000270)."))
(assert (= (name SO:0000227) "threonine_tRNA_primary_transcript"))

(defconcept SO:0000228)
(assert (subset-of SO:0000228 SO:0000210))
(assert (documentation SO:0000228 "A primary transcript encoding tryptophanyl tRNA (SO:000271)."))
(assert (= (name SO:0000228) "tryptophan_tRNA_primary_transcript"))

(defconcept SO:0000229)
(assert (subset-of SO:0000229 SO:0000210))
(assert (documentation SO:0000229 "A primary transcript encoding tyrosyl tRNA (SO:000272)."))
(assert (= (name SO:0000229) "tyrosine_tRNA_primary_transcript"))

(defconcept SO:0000230)
(assert (subset-of SO:0000230 SO:0000210))
(assert (documentation SO:0000230 "A primary transcript encoding valyl tRNA (SO:000273)."))
(assert (= (name SO:0000230) "valine_tRNA_primary_transcript"))

(defconcept SO:0000231)
(assert (subset-of SO:0000231 SO:0000483))
(assert (documentation SO:0000231 "A primary transcript encoding a small nuclear RNA (SO:0000274)."))
(assert (= (name SO:0000231) "snRNA_primary_transcript"))

(defconcept SO:0000232)
(assert (subset-of SO:0000232 SO:0000483))
(assert (documentation SO:0000232 "A primary transcript encoding a small nucleolar mRNA (SO:0000275)."))
(assert (= (name SO:0000232) "snoRNA_primary_transcript"))

(defconcept SO:0000233)
(assert (derives_from SO:0000233 SO:0000185))
(assert (subset-of SO:0000233 SO:0000673))
(assert (documentation SO:0000233 "A transcript which has undergone the necessary modifications, if any, for its function. In eukaryotes this includes, for example, processing of introns, cleavage, base modification, and modifications to the 5' and/or the 3' ends, other than addition of bases. In bacteria functional mRNAs are usually not modified."))
(assert (= (name SO:0000233) "mature_transcript"))

(defconcept SO:0000234)
(assert (subset-of SO:0000234 SO:0000233))
(assert (documentation SO:0000234 "Messenger RNA is the intermediate molecule between DNA and protein. It includes UTR and coding sequences. It does not contain introns."))
(assert (= (name SO:0000234) "mRNA"))

(defconcept SO:0000235)
(assert (subset-of SO:0000235 SO:0005836))
(assert (subset-of SO:0000235 SO:0000410))
(assert (documentation SO:0000235 "A region of a molecule that binds a TF complex [GO:0005667]."))
(assert (= (name SO:0000235) "TF_binding_site"))

(defconcept SO:0000236)
(assert (subset-of SO:0000236 SO:0000717))
(assert (documentation SO:0000236 "The in-frame interval between the stop codons of a reading frame which when read as sequential triplets, has the potential of encoding a sequential string of amino acids. TER(NNN)nTER."))
(assert (= (name SO:0000236) "ORF"))

(defconcept SO:0000237)
(assert (subset-of SO:0000237 SO:0000733))
(assert (= (name SO:0000237) "transcript_attribute"))

(defconcept SO:0000238)
(assert (subset-of SO:0000238 SO:0000182))
(assert (documentation SO:0000238 "A transposable element with extensive secondary structure, characterized by large modular imperfect long inverted repeats."))
(assert (= (name SO:0000238) "foldback_element"))

(defconcept SO:0000239)
(assert (subset-of SO:0000239 SO:0001412))
(assert (documentation SO:0000239 "The sequences extending on either side of a specific region."))
(assert (= (name SO:0000239) "flanking_region"))

(defconcept SO:0000240)
(assert (part_of SO:0000240 SO:0001524))
(assert (subset-of SO:0000240 SO:0001507))
(assert (= (name SO:0000240) "chromosome_variation"))

(defconcept SO:0000241)
(assert (subset-of SO:0000241 SO:0000203))
(assert (documentation SO:0000241 "A UTR bordered by the terminal and initial codons of two CDSs in a polycistronic transcript. Every UTR is either 5', 3' or internal."))
(assert (= (name SO:0000241) "internal_UTR"))

(defconcept SO:0000242)
(assert (subset-of SO:0000242 SO:0000203))
(assert (documentation SO:0000242 "The untranslated sequence separating the 'cistrons' of multicistronic mRNA."))
(assert (= (name SO:0000242) "untranslated_region_polycistronic_mRNA"))

(defconcept SO:0000243)
(assert (subset-of SO:0000243 SO:0000139))
(assert (documentation SO:0000243 "Sequence element that recruits a ribosomal subunit to internal mRNA for translation initiation."))
(assert (= (name SO:0000243) "internal_ribosome_entry_site"))

(defconcept SO:0000244)
(assert (= (name SO:0000244) "four_cutter_restriction_site"))

(defconcept SO:0000245)
(assert (= (name SO:0000245) "mRNA_by_polyadenylation_status"))

(defconcept SO:0000246)
(assert (subset-of SO:0000246 SO:0000863))
(assert (documentation SO:0000246 "A attribute describing the addition of a poly A tail to the 3' end of a mRNA molecule."))
(assert (= (name SO:0000246) "polyadenylated"))

(defconcept SO:0000247)
(assert (= (name SO:0000247) "mRNA_not_polyadenylated"))

(defconcept SO:0000248)
(assert (subset-of SO:0000248 SO:1000002))
(assert (= (name SO:0000248) "sequence_length_variation"))

(defconcept SO:0000249)
(assert (= (name SO:0000249) "six_cutter_restriction_site"))

(defconcept SO:0000250)
(assert (subset-of SO:0000250 SO:0001236))
(assert (documentation SO:0000250 "A post_transcriptionally modified base."))
(assert (= (name SO:0000250) "modified_RNA_base_feature"))

(defconcept SO:0000251)
(assert (= (name SO:0000251) "eight_cutter_restriction_site"))

(defconcept SO:0000252)
(assert (derives_from SO:0000252 SO:0000209))
(assert (subset-of SO:0000252 SO:0000655))
(assert (documentation SO:0000252 "RNA that comprises part of a ribosome, and that can provide both structural scaffolding and catalytic activity."))
(assert (= (name SO:0000252) "rRNA"))

(defconcept SO:0000253)
(assert (derives_from SO:0000253 SO:0000210))
(assert (subset-of SO:0000253 SO:0000655))
(assert (documentation SO:0000253 "Transfer RNA (tRNA) molecules are approximately 80 nucleotides in length. Their secondary structure includes four short double-helical elements and three loops (D, anti-codon, and T loops). Further hydrogen bonds mediate the characteristic L-shaped molecular structure. Transfer RNAs have two regions of fundamental functional importance: the anti-codon, which is responsible for specific mRNA codon recognition, and the 3' end, to which the tRNA's corresponding amino acid is attached (by aminoacyl-tRNA synthetases). Transfer RNAs cope with the degeneracy of the genetic code in two manners: having more than one tRNA (with a specific anti-codon) for a particular amino acid; and 'wobble' base-pairing, i.e. permitting non-standard base-pairing at the 3rd anti-codon position."))
(assert (= (name SO:0000253) "tRNA"))

(defconcept SO:0000254)
(assert (derives_from SO:0000254 SO:0000211))
(assert (subset-of SO:0000254 SO:0000253))
(assert (documentation SO:0000254 "A tRNA sequence that has an alanine anticodon, and a 3' alanine binding region."))
(assert (= (name SO:0000254) "alanyl_tRNA"))

(defconcept SO:0000255)
(assert (subset-of SO:0000255 SO:0000209))
(assert (documentation SO:0000255 "A primary transcript encoding a small ribosomal subunit RNA."))
(assert (= (name SO:0000255) "rRNA_small_subunit_primary_transcript"))

(defconcept SO:0000256)
(assert (derives_from SO:0000256 SO:0000213))
(assert (subset-of SO:0000256 SO:0000253))
(assert (documentation SO:0000256 "A tRNA sequence that has an asparagine anticodon, and a 3' asparagine binding region."))
(assert (= (name SO:0000256) "asparaginyl_tRNA"))

(defconcept SO:0000257)
(assert (derives_from SO:0000257 SO:0000214))
(assert (subset-of SO:0000257 SO:0000253))
(assert (documentation SO:0000257 "A tRNA sequence that has an aspartic acid anticodon, and a 3' aspartic acid binding region."))
(assert (= (name SO:0000257) "aspartyl_tRNA"))

(defconcept SO:0000258)
(assert (derives_from SO:0000258 SO:0000215))
(assert (subset-of SO:0000258 SO:0000253))
(assert (documentation SO:0000258 "A tRNA sequence that has a cysteine anticodon, and a 3' cysteine binding region."))
(assert (= (name SO:0000258) "cysteinyl_tRNA"))

(defconcept SO:0000259)
(assert (derives_from SO:0000259 SO:0000216))
(assert (subset-of SO:0000259 SO:0000253))
(assert (documentation SO:0000259 "A tRNA sequence that has a glutamine anticodon, and a 3' glutamine binding region."))
(assert (= (name SO:0000259) "glutaminyl_tRNA"))

(defconcept SO:0000260)
(assert (derives_from SO:0000260 SO:0000217))
(assert (subset-of SO:0000260 SO:0000253))
(assert (documentation SO:0000260 "A tRNA sequence that has a glutamic acid anticodon, and a 3' glutamic acid binding region."))
(assert (= (name SO:0000260) "glutamyl_tRNA"))

(defconcept SO:0000261)
(assert (derives_from SO:0000261 SO:0000218))
(assert (subset-of SO:0000261 SO:0000253))
(assert (documentation SO:0000261 "A tRNA sequence that has a glycine anticodon, and a 3' glycine binding region."))
(assert (= (name SO:0000261) "glycyl_tRNA"))

(defconcept SO:0000262)
(assert (derives_from SO:0000262 SO:0000219))
(assert (subset-of SO:0000262 SO:0000253))
(assert (documentation SO:0000262 "A tRNA sequence that has a histidine anticodon, and a 3' histidine binding region."))
(assert (= (name SO:0000262) "histidyl_tRNA"))

(defconcept SO:0000263)
(assert (derives_from SO:0000263 SO:0000220))
(assert (subset-of SO:0000263 SO:0000253))
(assert (documentation SO:0000263 "A tRNA sequence that has an isoleucine anticodon, and a 3' isoleucine binding region."))
(assert (= (name SO:0000263) "isoleucyl_tRNA"))

(defconcept SO:0000264)
(assert (derives_from SO:0000264 SO:0000221))
(assert (subset-of SO:0000264 SO:0000253))
(assert (documentation SO:0000264 "A tRNA sequence that has a leucine anticodon, and a 3' leucine binding region."))
(assert (= (name SO:0000264) "leucyl_tRNA"))

(defconcept SO:0000265)
(assert (derives_from SO:0000265 SO:0000222))
(assert (subset-of SO:0000265 SO:0000253))
(assert (documentation SO:0000265 "A tRNA sequence that has a lysine anticodon, and a 3' lysine binding region."))
(assert (= (name SO:0000265) "lysyl_tRNA"))

(defconcept SO:0000266)
(assert (derives_from SO:0000266 SO:0000223))
(assert (subset-of SO:0000266 SO:0000253))
(assert (documentation SO:0000266 "A tRNA sequence that has a methionine anticodon, and a 3' methionine binding region."))
(assert (= (name SO:0000266) "methionyl_tRNA"))

(defconcept SO:0000267)
(assert (derives_from SO:0000267 SO:0000224))
(assert (subset-of SO:0000267 SO:0000253))
(assert (documentation SO:0000267 "A tRNA sequence that has a phenylalanine anticodon, and a 3' phenylalanine binding region."))
(assert (= (name SO:0000267) "phenylalanyl_tRNA"))

(defconcept SO:0000268)
(assert (derives_from SO:0000268 SO:0000225))
(assert (subset-of SO:0000268 SO:0000253))
(assert (documentation SO:0000268 "A tRNA sequence that has a proline anticodon, and a 3' proline binding region."))
(assert (= (name SO:0000268) "prolyl_tRNA"))

(defconcept SO:0000269)
(assert (derives_from SO:0000269 SO:0000226))
(assert (subset-of SO:0000269 SO:0000253))
(assert (documentation SO:0000269 "A tRNA sequence that has a serine anticodon, and a 3' serine binding region."))
(assert (= (name SO:0000269) "seryl_tRNA"))

(defconcept SO:0000270)
(assert (derives_from SO:0000270 SO:0000227))
(assert (subset-of SO:0000270 SO:0000253))
(assert (documentation SO:0000270 "A tRNA sequence that has a threonine anticodon, and a 3' threonine binding region."))
(assert (= (name SO:0000270) "threonyl_tRNA"))

(defconcept SO:0000271)
(assert (derives_from SO:0000271 SO:0000228))
(assert (subset-of SO:0000271 SO:0000253))
(assert (documentation SO:0000271 "A tRNA sequence that has a tryptophan anticodon, and a 3' tryptophan binding region."))
(assert (= (name SO:0000271) "tryptophanyl_tRNA"))

(defconcept SO:0000272)
(assert (derives_from SO:0000272 SO:0000229))
(assert (subset-of SO:0000272 SO:0000253))
(assert (documentation SO:0000272 "A tRNA sequence that has a tyrosine anticodon, and a 3' tyrosine binding region."))
(assert (= (name SO:0000272) "tyrosyl_tRNA"))

(defconcept SO:0000273)
(assert (derives_from SO:0000273 SO:0000230))
(assert (subset-of SO:0000273 SO:0000253))
(assert (documentation SO:0000273 "A tRNA sequence that has a valine anticodon, and a 3' valine binding region."))
(assert (= (name SO:0000273) "valyl_tRNA"))

(defconcept SO:0000274)
(assert (derives_from SO:0000274 SO:0000231))
(assert (subset-of SO:0000274 SO:0000655))
(assert (documentation SO:0000274 "A small nuclear RNA molecule involved in pre-mRNA splicing and processing."))
(assert (= (name SO:0000274) "snRNA"))

(defconcept SO:0000275)
(assert (derives_from SO:0000275 SO:0000232))
(assert (subset-of SO:0000275 SO:0000655))
(assert (documentation SO:0000275 "A snoRNA (small nucleolar RNA) is any one of a class of small RNAs that are associated with the eukaryotic nucleus as components of small nucleolar ribonucleoproteins. They participate in the processing or modifications of many RNAs, mostly ribosomal RNAs (rRNAs) though snoRNAs are also known to target other classes of RNA, including spliceosomal RNAs, tRNAs, and mRNAs via a stretch of sequence that is complementary to a sequence in the targeted RNA."))
(assert (= (name SO:0000275) "snoRNA"))

(defconcept SO:0000276)
(assert (derives_from SO:0000276 SO:0000647))
(assert (subset-of SO:0000276 SO:0000370))
(assert (documentation SO:0000276 "Small, ~22-nt, RNA molecule that is the endogenous transcript of a miRNA gene. Micro RNAs are produced from precursor molecules (SO:0000647) that can form local hairpin structures, which ordinarily are processed (via the Dicer pathway) such that a single miRNA molecule accumulates from one arm of a hairpin precursor molecule. Micro RNAs may trigger the cleavage of their target molecules or act as translational repressors."))
(assert (= (name SO:0000276) "miRNA"))

(defconcept SO:0000277)
(assert (subset-of SO:0000277 SO:0000733))
(assert (documentation SO:0000277 "An attribute describing a sequence that is bound by another molecule."))
(assert (= (name SO:0000277) "bound_by_factor"))

(defconcept SO:0000278)
(assert (subset-of SO:0000278 SO:0000673))
(assert (documentation SO:0000278 "A transcript that is bound by a nucleic acid."))
(assert (= (name SO:0000278) "transcript_bound_by_nucleic_acid"))

(defconcept SO:0000279)
(assert (subset-of SO:0000279 SO:0000673))
(assert (documentation SO:0000279 "A transcript that is bound by a protein."))
(assert (= (name SO:0000279) "transcript_bound_by_protein"))

(defconcept SO:0000280)
(assert (subset-of SO:0000280 SO:0000804))
(assert (subset-of SO:0000280 SO:0000704))
(assert (documentation SO:0000280 "A gene that is engineered."))
(assert (= (name SO:0000280) "engineered_gene"))

(defconcept SO:0000281)
(assert (subset-of SO:0000281 SO:0000805))
(assert (subset-of SO:0000281 SO:0000285))
(assert (subset-of SO:0000281 SO:0000280))
(assert (documentation SO:0000281 "A gene that is engineered and foreign."))
(assert (= (name SO:0000281) "engineered_foreign_gene"))

(defconcept SO:0000282)
(assert (subset-of SO:0000282 SO:0000108))
(assert (documentation SO:0000282 "An mRNA with a minus 1 frameshift."))
(assert (= (name SO:0000282) "mRNA_with_minus_1_frameshift"))

(defconcept SO:0000283)
(assert (subset-of SO:0000283 SO:0000281))
(assert (subset-of SO:0000283 SO:0000111))
(assert (documentation SO:0000283 "A transposable_element that is engineered and foreign."))
(assert (= (name SO:0000283) "engineered_foreign_transposable_element_gene"))

(defconcept SO:0000284)
(assert (documentation SO:0000284 "The recognition site is bipartite and interrupted."))
(assert (= (name SO:0000284) "type_I_enzyme_restriction_site"))

(defconcept SO:0000285)
(assert (subset-of SO:0000285 SO:0000704))
(assert (documentation SO:0000285 "A gene that is foreign."))
(assert (= (name SO:0000285) "foreign_gene"))

(defconcept SO:0000286)
(assert (part_of SO:0000286 SO:0000186))
(assert (subset-of SO:0000286 SO:0000657))
(assert (documentation SO:0000286 "A sequence directly repeated at both ends of a defined sequence, of the sort typically found in retroviruses."))
(assert (= (name SO:0000286) "long_terminal_repeat"))

(defconcept SO:0000287)
(assert (subset-of SO:0000287 SO:0000704))
(assert (documentation SO:0000287 "A gene that is a fusion."))
(assert (= (name SO:0000287) "fusion_gene"))

(defconcept SO:0000288)
(assert (subset-of SO:0000288 SO:0000287))
(assert (subset-of SO:0000288 SO:0000280))
(assert (documentation SO:0000288 "A fusion gene that is engineered."))
(assert (= (name SO:0000288) "engineered_fusion_gene"))

(defconcept SO:0000289)
(assert (subset-of SO:0000289 SO:0000005))
(assert (documentation SO:0000289 "A repeat_region containing repeat_units (2 to 4 bp) that is repeated multiple times in tandem."))
(assert (= (name SO:0000289) "microsatellite"))

(defconcept SO:0000290)
(assert (subset-of SO:0000290 SO:0000289))
(assert (= (name SO:0000290) "dinucleotide_repeat_microsatellite_feature"))

(defconcept SO:0000291)
(assert (subset-of SO:0000291 SO:0000289))
(assert (= (name SO:0000291) "trinucleotide_repeat_microsatellite_feature"))

(defconcept SO:0000292)
(assert (= (name SO:0000292) "repetitive_element"))

(defconcept SO:0000293)
(assert (subset-of SO:0000293 SO:0000805))
(assert (subset-of SO:0000293 SO:0000657))
(assert (documentation SO:0000293 "A repetitive element that is engineered and foreign."))
(assert (= (name SO:0000293) "engineered_foreign_repetitive_element"))

(defconcept SO:0000294)
(assert (subset-of SO:0000294 SO:0000657))
(assert (documentation SO:0000294 "The sequence is complementarily repeated on the opposite strand. It is a palindrome, and it may, or may not be hyphenated. Examples: GCTGATCAGC, or GCTGA-----TCAGC."))
(assert (= (name SO:0000294) "inverted_repeat"))

(defconcept SO:0000295)
(assert (subset-of SO:0000295 SO:0000662))
(assert (documentation SO:0000295 "A type of spliceosomal intron spliced by the U12 spliceosome, that includes U11, U12, U4atac/U6atac and U5 snRNAs."))
(assert (= (name SO:0000295) "U12_intron"))

(defconcept SO:0000296)
(assert (part_of SO:0000296 SO:0001235))
(assert (subset-of SO:0000296 SO:0001411))
(assert (documentation SO:0000296 "The origin of replication; starting site for duplication of a nucleic acid molecule to give two identical copies."))
(assert (= (name SO:0000296) "origin_of_replication"))

(defconcept SO:0000297)
(assert (subset-of SO:0000297 SO:0000296))
(assert (documentation SO:0000297 "Displacement loop; a region within mitochondrial DNA in which a short stretch of RNA is paired with one strand of DNA, displacing the original partner DNA strand in this region; also used to describe the displacement of a region of one strand of duplex DNA by a single stranded invader in the reaction catalyzed by RecA protein."))
(assert (= (name SO:0000297) "D_loop"))

(defconcept SO:0000298)
(assert (subset-of SO:0000298 SO:0001411))
(assert (= (name SO:0000298) "recombination_feature"))

(defconcept SO:0000299)
(assert (subset-of SO:0000299 SO:0000669))
(assert (= (name SO:0000299) "specific_recombination_site"))

(defconcept SO:0000300)
(assert (subset-of SO:0000300 SO:0000299))
(assert (= (name SO:0000300) "recombination_feature_of_rearranged_gene"))

(defconcept SO:0000301)
(assert (subset-of SO:0000301 SO:0000300))
(assert (= (name SO:0000301) "vertebrate_immune_system_gene_recombination_feature"))

(defconcept SO:0000302)
(assert (subset-of SO:0000302 SO:0000939))
(assert (documentation SO:0000302 "Recombination signal including J-heptamer, J-spacer and J-nonamer in 5' of J-region of a J-gene or J-sequence."))
(assert (= (name SO:0000302) "J_gene_recombination_feature"))

(defconcept SO:0000303)
(assert (subset-of SO:0000303 SO:0000835))
(assert (documentation SO:0000303 "Part of the primary transcript that is clipped off during processing."))
(assert (= (name SO:0000303) "clip"))

(defconcept SO:0000304)
(assert (documentation SO:0000304 "The recognition site is either palindromic, partially palindromic or an interrupted palindrome. Cleavage occurs within the recognition site."))
(assert (= (name SO:0000304) "type_II_enzyme_restriction_site"))

(defconcept SO:0000305)
(assert (subset-of SO:0000305 SO:0001720))
(assert (documentation SO:0000305 "A modified nucleotide, i.e. a nucleotide other than A, T, C. G."))
(assert (= (name SO:0000305) "modified_base"))

(defconcept SO:0000306)
(assert (subset-of SO:0000306 SO:0000305))
(assert (documentation SO:0000306 "A nucleotide modified by methylation."))
(assert (= (name SO:0000306) "methylated_base_feature"))

(defconcept SO:0000307)
(assert (subset-of SO:0000307 SO:0001411))
(assert (documentation SO:0000307 "Regions of a few hundred to a few thousand bases in vertebrate genomes that are relatively GC and CpG rich; they are typically unmethylated and often found near the 5' ends of genes."))
(assert (= (name SO:0000307) "CpG_island"))

(defconcept SO:0000308)
(assert (= (name SO:0000308) "sequence_feature_locating_method"))

(defconcept SO:0000309)
(assert (= (name SO:0000309) "computed_feature"))

(defconcept SO:0000310)
(assert (= (name SO:0000310) "predicted_ab_initio_computation"))

(defconcept SO:0000311)
(assert (documentation SO:0000311 "."))
(assert (= (name SO:0000311) "computed_feature_by_similarity"))

(defconcept SO:0000312)
(assert (subset-of SO:0000312 SO:0000789))
(assert (documentation SO:0000312 "Attribute to describe a feature that has been experimentally verified."))
(assert (= (name SO:0000312) "experimentally_determined"))

(defconcept SO:0000313)
(assert (subset-of SO:0000313 SO:0000122))
(assert (documentation SO:0000313 "A double-helical region of nucleic acid formed by base-pairing between adjacent (inverted) complementary sequences."))
(assert (= (name SO:0000313) "stem_loop"))

(defconcept SO:0000314)
(assert (subset-of SO:0000314 SO:0000657))
(assert (documentation SO:0000314 "A repeat where the same sequence is repeated in the same direction. Example: GCTGA-----GCTGA."))
(assert (= (name SO:0000314) "direct_repeat"))

(defconcept SO:0000315)
(assert (subset-of SO:0000315 SO:0000835))
(assert (documentation SO:0000315 "The first base where RNA polymerase begins to synthesize the RNA transcript."))
(assert (= (name SO:0000315) "TSS"))

(defconcept SO:0000316)
(assert (subset-of SO:0000316 SO:0000836))
(assert (documentation SO:0000316 "A contiguous sequence which begins with, and includes, a start codon and ends with, and includes, a stop codon."))
(assert (= (name SO:0000316) "CDS"))

(defconcept SO:0000317)
(assert (subset-of SO:0000317 SO:0000151))
(assert (documentation SO:0000317 "Complementary DNA; A piece of DNA copied from an mRNA and spliced into a vector for propagation in a suitable host."))
(assert (= (name SO:0000317) "cDNA_clone"))

(defconcept SO:0000318)
(assert (subset-of SO:0000318 SO:0000360))
(assert (documentation SO:0000318 "First codon to be translated by a ribosome."))
(assert (= (name SO:0000318) "start_codon"))

(defconcept SO:0000319)
(assert (subset-of SO:0000319 SO:0000360))
(assert (documentation SO:0000319 "In mRNA, a set of three nucleotides that indicates the end of information for protein synthesis."))
(assert (= (name SO:0000319) "stop_codon"))

(defconcept SO:0000320)
(assert (subset-of SO:0000320 SO:0000841))
(assert (subset-of SO:0000320 SO:0000344))
(assert (documentation SO:0000320 "Sequences within the intron that modulate splice site selection for some introns."))
(assert (= (name SO:0000320) "intronic_splice_enhancer"))

(defconcept SO:0000321)
(assert (subset-of SO:0000321 SO:0000108))
(assert (documentation SO:0000321 "An mRNA with a plus 1 frameshift."))
(assert (= (name SO:0000321) "mRNA_with_plus_1_frameshift"))

(defconcept SO:0000322)
(assert (subset-of SO:0000322 SO:0000684))
(assert (= (name SO:0000322) "nuclease_hypersensitive_site"))

(defconcept SO:0000323)
(assert (subset-of SO:0000323 SO:0000851))
(assert (documentation SO:0000323 "The first base to be translated into protein."))
(assert (= (name SO:0000323) "coding_start"))

(defconcept SO:0000324)
(assert (subset-of SO:0000324 SO:0000696))
(assert (documentation SO:0000324 "A nucleotide sequence that may be used to identify a larger sequence."))
(assert (= (name SO:0000324) "tag"))

(defconcept SO:0000325)
(assert (subset-of SO:0000325 SO:0000209))
(assert (documentation SO:0000325 "A primary transcript encoding a large ribosomal subunit RNA."))
(assert (= (name SO:0000325) "rRNA_large_subunit_primary_transcript"))

(defconcept SO:0000326)
(assert (subset-of SO:0000326 SO:0000324))
(assert (documentation SO:0000326 "A short diagnostic sequence tag, serial analysis of gene expression (SAGE), that allows the quantitative and simultaneous analysis of a large number of transcripts."))
(assert (= (name SO:0000326) "SAGE_tag"))

(defconcept SO:0000327)
(assert (subset-of SO:0000327 SO:0000851))
(assert (documentation SO:0000327 "The last base to be translated into protein. It does not include the stop codon."))
(assert (= (name SO:0000327) "coding_end"))

(defconcept SO:0000328)
(assert (subset-of SO:0000328 SO:0000051))
(assert (= (name SO:0000328) "microarray_oligo"))

(defconcept SO:0000329)
(assert (subset-of SO:0000329 SO:0000108))
(assert (documentation SO:0000329 "An mRNA with a plus 2 frameshift."))
(assert (= (name SO:0000329) "mRNA_with_plus_2_frameshift"))

(defconcept SO:0000330)
(assert (subset-of SO:0000330 SO:0001410))
(assert (documentation SO:0000330 "Region of sequence similarity by descent from a common ancestor."))
(assert (= (name SO:0000330) "conserved_region"))

(defconcept SO:0000331)
(assert (subset-of SO:0000331 SO:0000324))
(assert (documentation SO:0000331 "Short (typically a few hundred base pairs) DNA sequence that has a single occurrence in a genome and whose location and base sequence are known."))
(assert (= (name SO:0000331) "STS"))

(defconcept SO:0000332)
(assert (subset-of SO:0000332 SO:0000330))
(assert (documentation SO:0000332 "Coding region of sequence similarity by descent from a common ancestor."))
(assert (= (name SO:0000332) "coding_conserved_region"))

(defconcept SO:0000333)
(assert (part_of SO:0000333 SO:0000233))
(assert (subset-of SO:0000333 SO:0000699))
(assert (documentation SO:0000333 "The boundary between two exons in a processed transcript."))
(assert (= (name SO:0000333) "exon_junction"))

(defconcept SO:0000334)
(assert (subset-of SO:0000334 SO:0000330))
(assert (documentation SO:0000334 "Non-coding region of sequence similarity by descent from a common ancestor."))
(assert (= (name SO:0000334) "nc_conserved_region"))

(defconcept SO:0000335)
(assert (subset-of SO:0000335 SO:0000108))
(assert (documentation SO:0000335 "A mRNA with a minus 2 frameshift."))
(assert (= (name SO:0000335) "mRNA_with_minus_2_frameshift"))

(defconcept SO:0000336)
(assert (non_functional_homolog_of SO:0000336 SO:0000704))
(assert (subset-of SO:0000336 SO:0000462))
(assert (documentation SO:0000336 "A sequence that closely resembles a known functional gene, at another locus within a genome, that is non-functional as a consequence of (usually several) mutations that prevent either its transcription or translation (or both). In general, pseudogenes result from either reverse transcription of a transcript of their \\\"normal\\\" paralog (SO:0000043) (in which case the pseudogene typically lacks introns and includes a poly(A) tail) or from recombination (SO:0000044) (in which case the pseudogene is typically a tandem duplication of its \\\"normal\\\" paralog)."))
(assert (= (name SO:0000336) "pseudogene"))

(defconcept SO:0000337)
(assert (subset-of SO:0000337 SO:0000442))
(assert (documentation SO:0000337 "A double stranded RNA duplex, at least 20bp long, used experimentally to inhibit gene function by RNA interference."))
(assert (= (name SO:0000337) "RNAi_reagent"))

(defconcept SO:0000338)
(assert (subset-of SO:0000338 SO:0000208))
(assert (documentation SO:0000338 "A highly repetitive and short (100-500 base pair) transposable element with terminal inverted repeats (TIR) and target site duplication (TSD). MITEs do not encode proteins."))
(assert (= (name SO:0000338) "MITE"))

(defconcept SO:0000339)
(assert (subset-of SO:0000339 SO:0000298))
(assert (documentation SO:0000339 "A region in a genome which promotes recombination."))
(assert (= (name SO:0000339) "recombination_hotspot"))

(defconcept SO:0000340)
(assert (subset-of SO:0000340 SO:0001235))
(assert (documentation SO:0000340 "Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication."))
(assert (= (name SO:0000340) "chromosome"))

(defconcept SO:0000341)
(assert (subset-of SO:0000341 SO:0000830))
(assert (documentation SO:0000341 "A cytologically distinguishable feature of a chromosome, often made visible by staining, and usually alternating light and dark."))
(assert (= (name SO:0000341) "chromosome_band"))

(defconcept SO:0000342)
(assert (subset-of SO:0000342 SO:0000299))
(assert (= (name SO:0000342) "site_specific_recombination_target_region"))

(defconcept SO:0000343)
(assert (subset-of SO:0000343 SO:0001410))
(assert (documentation SO:0000343 "A region of sequence, aligned to another sequence with some statistical significance, using an algorithm such as BLAST or SIM4."))
(assert (= (name SO:0000343) "match"))

(defconcept SO:0000344)
(assert (subset-of SO:0000344 SO:0001056))
(assert (documentation SO:0000344 "Region of a transcript that regulates splicing."))
(assert (= (name SO:0000344) "splice_enhancer"))

(defconcept SO:0000345)
(assert (derives_from SO:0000345 SO:0000234))
(assert (subset-of SO:0000345 SO:0000324))
(assert (documentation SO:0000345 "A tag produced from a single sequencing read from a cDNA clone or PCR product; typically a few hundred base pairs long."))
(assert (= (name SO:0000345) "EST"))

(defconcept SO:0000346)
(assert (subset-of SO:0000346 SO:0000947))
(assert (= (name SO:0000346) "loxP_site"))

(defconcept SO:0000347)
(assert (subset-of SO:0000347 SO:0000343))
(assert (documentation SO:0000347 "A match against a nucleotide sequence."))
(assert (= (name SO:0000347) "nucleotide_match"))

(defconcept SO:0000348)
(assert (subset-of SO:0000348 SO:0000443))
(assert (documentation SO:0000348 "An attribute describing a sequence consisting of nucleobases bound to repeating units. The forms found in nature are deoxyribonucleic acid (DNA), where the repeating units are 2-deoxy-D-ribose rings connected to a phosphate backbone, and ribonucleic acid (RNA), where the repeating units are D-ribose rings connected to a phosphate backbone."))
(assert (= (name SO:0000348) "nucleic_acid"))

(defconcept SO:0000349)
(assert (subset-of SO:0000349 SO:0000343))
(assert (documentation SO:0000349 "A match against a protein sequence."))
(assert (= (name SO:0000349) "protein_match"))

(defconcept SO:0000350)
(assert (subset-of SO:0000350 SO:0000948))
(assert (documentation SO:0000350 "An inversion site found on the Saccharomyces cerevisiae 2 micron plasmid."))
(assert (= (name SO:0000350) "FRT_site"))

(defconcept SO:0000351)
(assert (subset-of SO:0000351 SO:0000443))
(assert (documentation SO:0000351 "An attribute to decide a sequence of nucleotides, nucleotide analogs, or amino acids that has been designed by an experimenter and which may, or may not, correspond with any natural sequence."))
(assert (= (name SO:0000351) "synthetic_sequence"))

(defconcept SO:0000352)
(assert (subset-of SO:0000352 SO:0000348))
(assert (documentation SO:0000352 "An attribute describing a sequence consisting of nucleobases bound to a repeating unit made of a 2-deoxy-D-ribose ring connected to a phosphate backbone."))
(assert (= (name SO:0000352) "DNA"))

(defconcept SO:0000353)
(assert (subset-of SO:0000353 SO:0001248))
(assert (documentation SO:0000353 "A sequence of nucleotides that has been algorithmically derived from an alignment of two or more different sequences."))
(assert (= (name SO:0000353) "sequence_assembly"))

(defconcept SO:0000354)
(assert (subset-of SO:0000354 SO:0000684))
(assert (= (name SO:0000354) "group_1_intron_homing_endonuclease_target_region"))

(defconcept SO:0000355)
(assert (subset-of SO:0000355 SO:0000298))
(assert (documentation SO:0000355 "A region of the genome which is co-inherited as the result of the lack of historic recombination within it."))
(assert (= (name SO:0000355) "haplotype_block"))

(defconcept SO:0000356)
(assert (subset-of SO:0000356 SO:0000348))
(assert (documentation SO:0000356 "An attribute describing a sequence consisting of nucleobases bound to a repeating unit made of a D-ribose ring connected to a phosphate backbone."))
(assert (= (name SO:0000356) "RNA"))

(defconcept SO:0000357)
(assert (subset-of SO:0000357 SO:0000733))
(assert (documentation SO:0000357 "An attribute describing a region that is bounded either side by a particular kind of region."))
(assert (= (name SO:0000357) "flanked"))

(defconcept SO:0000359)
(assert (subset-of SO:0000359 SO:0000357))
(assert (documentation SO:0000359 "An attribute describing sequence that is flanked by Lox-P sites."))
(assert (= (name SO:0000359) "floxed"))

(defconcept SO:0000360)
(assert (subset-of SO:0000360 SO:0000851))
(assert (documentation SO:0000360 "A set of (usually) three nucleotide bases in a DNA or RNA sequence, which together code for a unique amino acid or the termination of translation and are contained within the CDS."))
(assert (= (name SO:0000360) "codon"))

(defconcept SO:0000361)
(assert (subset-of SO:0000361 SO:0000357))
(assert (documentation SO:0000361 "An attribute to describe sequence that is flanked by the FLP recombinase recognition site, FRT."))
(assert (= (name SO:0000361) "FRT_flanked"))

(defconcept SO:0000362)
(assert (subset-of SO:0000362 SO:0000790))
(assert (documentation SO:0000362 "A cDNA clone constructed from more than one mRNA. Usually an experimental artifact."))
(assert (= (name SO:0000362) "invalidated_by_chimeric_cDNA"))

(defconcept SO:0000363)
(assert (subset-of SO:0000363 SO:0000902))
(assert (documentation SO:0000363 "A transgene that is floxed."))
(assert (= (name SO:0000363) "floxed_gene"))

(defconcept SO:0000364)
(assert (subset-of SO:0000364 SO:0000239))
(assert (documentation SO:0000364 "The region of sequence surrounding a transposable element."))
(assert (= (name SO:0000364) "transposable_element_flanking_region"))

(defconcept SO:0000365)
(assert (subset-of SO:0000365 SO:0001039))
(assert (documentation SO:0000365 "A region encoding an integrase which acts at a site adjacent to it (attI_site) to insert DNA which must include but is not limited to an attC_site."))
(assert (= (name SO:0000365) "integron"))

(defconcept SO:0000366)
(assert (subset-of SO:0000366 SO:0000699))
(assert (documentation SO:0000366 "The junction where an insertion occurred."))
(assert (= (name SO:0000366) "insertion_site"))

(defconcept SO:0000367)
(assert (part_of SO:0000367 SO:0000365))
(assert (subset-of SO:0000367 SO:0000946))
(assert (documentation SO:0000367 "A region within an integron, adjacent to an integrase, at which site specific recombination involving an attC_site takes place."))
(assert (= (name SO:0000367) "attI_site"))

(defconcept SO:0000368)
(assert (subset-of SO:0000368 SO:0000366))
(assert (documentation SO:0000368 "The junction in a genome where a transposable_element has inserted."))
(assert (= (name SO:0000368) "transposable_element_insertion_site"))

(defconcept SO:0000369)
(assert (= (name SO:0000369) "integrase_coding_region"))

(defconcept SO:0000370)
(assert (subset-of SO:0000370 SO:0000655))
(assert (documentation SO:0000370 "A non-coding RNA, usually with a specific secondary structure, that acts to regulate gene expression."))
(assert (= (name SO:0000370) "small_regulatory_ncRNA"))

(defconcept SO:0000371)
(assert (subset-of SO:0000371 SO:0000182))
(assert (documentation SO:0000371 "A transposon that encodes function required for conjugation."))
(assert (= (name SO:0000371) "conjugative_transposon"))

(defconcept SO:0000372)
(assert (subset-of SO:0000372 SO:0000673))
(assert (documentation SO:0000372 "An RNA sequence that has catalytic activity with or without an associated ribonucleoprotein."))
(assert (= (name SO:0000372) "enzymatic_RNA"))

(defconcept SO:0000373)
(assert (subset-of SO:0000373 SO:0000456))
(assert (documentation SO:0000373 "A recombinationally rearranged gene by inversion."))
(assert (= (name SO:0000373) "recombinationally_inverted_gene"))

(defconcept SO:0000374)
(assert (subset-of SO:0000374 SO:0000372))
(assert (documentation SO:0000374 "An RNA with catalytic activity."))
(assert (= (name SO:0000374) "ribozyme"))

(defconcept SO:0000375)
(assert (subset-of SO:0000375 SO:0000651))
(assert (documentation SO:0000375 "5_8S ribosomal RNA (5. 8S rRNA) is a component of the large subunit of the eukaryotic ribosome. It is transcribed by RNA polymerase I as part of the 45S precursor that also contains 18S and 28S rRNA. Functionally, it is thought that 5.8S rRNA may be involved in ribosome translocation. It is also known to form covalent linkage to the p53 tumour suppressor protein. 5_8S rRNA is also found in archaea."))
(assert (= (name SO:0000375) "rRNA_5_8S"))

(defconcept SO:0000376)
(assert (subset-of SO:0000376 SO:0000370))
(assert (documentation SO:0000376 "A small (184-nt in E. coli) RNA that forms a hairpin type structure. 6S RNA associates with RNA polymerase in a highly specific manner. 6S RNA represses expression from a sigma70-dependent promoter during stationary phase."))
(assert (= (name SO:0000376) "RNA_6S"))

(defconcept SO:0000377)
(assert (subset-of SO:0000377 SO:0000370))
(assert (documentation SO:0000377 "An enterobacterial RNA that binds the CsrA protein. The CsrB RNAs contain a conserved motif CAGGXXG that is found in up to 18 copies and has been suggested to bind CsrA. The Csr regulatory system has a strong negative regulatory effect on glycogen biosynthesis, glyconeogenesis and glycogen catabolism and a positive regulatory effect on glycolysis. In other bacteria such as Erwinia caratovara the RsmA protein has been shown to regulate the production of virulence determinants, such extracellular enzymes. RsmA binds to RsmB regulatory RNA which is also a member of this family."))
(assert (= (name SO:0000377) "CsrB_RsmB_RNA"))

(defconcept SO:0000378)
(assert (subset-of SO:0000378 SO:0000370))
(assert (documentation SO:0000378 "DsrA RNA regulates both transcription, by overcoming transcriptional silencing by the nucleoid-associated H-NS protein, and translation, by promoting efficient translation of the stress sigma factor, RpoS. These two activities of DsrA can be separated by mutation: the first of three stem-loops of the 85 nucleotide RNA is necessary for RpoS translation but not for anti-H-NS action, while the second stem-loop is essential for antisilencing and less critical for RpoS translation. The third stem-loop, which behaves as a transcription terminator, can be substituted by the trp transcription terminator without loss of either DsrA function. The sequence of the first stem-loop of DsrA is complementary with the upstream leader portion of RpoS messenger RNA, suggesting that pairing of DsrA with the RpoS message might be important for translational regulation."))
(assert (= (name SO:0000378) "DsrA_RNA"))

(defconcept SO:0000379)
(assert (subset-of SO:0000379 SO:0000378))
(assert (documentation SO:0000379 "A small untranslated RNA involved in expression of the dipeptide and oligopeptide transport systems in Escherichia coli."))
(assert (= (name SO:0000379) "GcvB_RNA"))

(defconcept SO:0000380)
(assert (subset-of SO:0000380 SO:0000715))
(assert (documentation SO:0000380 "A small catalytic RNA motif that catalyzes self-cleavage reaction. Its name comes from its secondary structure which resembles a carpenter's hammer. The hammerhead ribozyme is involved in the replication of some viroid and some satellite RNAs."))
(assert (= (name SO:0000380) "hammerhead_ribozyme"))

(defconcept SO:0000381)
(assert (subset-of SO:0000381 SO:0000603))
(assert (= (name SO:0000381) "group_IIA_intron"))

(defconcept SO:0000382)
(assert (subset-of SO:0000382 SO:0000603))
(assert (= (name SO:0000382) "group_IIB_intron"))

(defconcept SO:0000383)
(assert (subset-of SO:0000383 SO:0000644))
(assert (documentation SO:0000383 "A non-translated 93 nt antisense RNA that binds its target ompF mRNA and regulates ompF expression by inhibiting translation and inducing degradation of the message."))
(assert (= (name SO:0000383) "MicF_RNA"))

(defconcept SO:0000384)
(assert (subset-of SO:0000384 SO:0000370))
(assert (documentation SO:0000384 "A small untranslated RNA which is induced in response to oxidative stress in Escherichia coli. Acts as a global regulator to activate or repress the expression of as many as 40 genes, including the fhlA-encoded transcriptional activator and the rpoS-encoded sigma(s) subunit of RNA polymerase. OxyS is bound by the Hfq protein, that increases the OxyS RNA interaction with its target messages."))
(assert (= (name SO:0000384) "OxyS_RNA"))

(defconcept SO:0000385)
(assert (subset-of SO:0000385 SO:0000655))
(assert (documentation SO:0000385 "The RNA molecule essential for the catalytic activity of RNase MRP, an enzymatically active ribonucleoprotein with two distinct roles in eukaryotes. In mitochondria it plays a direct role in the initiation of mitochondrial DNA replication. In the nucleus it is involved in precursor rRNA processing, where it cleaves the internal transcribed spacer 1 between 18S and 5.8S rRNAs."))
(assert (= (name SO:0000385) "RNase_MRP_RNA"))

(defconcept SO:0000386)
(assert (subset-of SO:0000386 SO:0000655))
(assert (documentation SO:0000386 "The RNA component of Ribonuclease P (RNase P), a ubiquitous endoribonuclease, found in archaea, bacteria and eukarya as well as chloroplasts and mitochondria. Its best characterized activity is the generation of mature 5 prime ends of tRNAs by cleaving the 5 prime leader elements of precursor-tRNAs. Cellular RNase Ps are ribonucleoproteins. RNA from bacterial RNase Ps retains its catalytic activity in the absence of the protein subunit, i.e. it is a ribozyme. Isolated eukaryotic and archaeal RNase P RNA has not been shown to retain its catalytic function, but is still essential for the catalytic activity of the holoenzyme. Although the archaeal and eukaryotic holoenzymes have a much greater protein content than the bacterial ones, the RNA cores from all the three lineages are homologous. Helices corresponding to P1, P2, P3, P4, and P10/11 are common to all cellular RNase P RNAs. Yet, there is considerable sequence variation, particularly among the eukaryotic RNAs."))
(assert (= (name SO:0000386) "RNase_P_RNA"))

(defconcept SO:0000387)
(assert (subset-of SO:0000387 SO:0000370))
(assert (documentation SO:0000387 "Translational regulation of the stationary phase sigma factor RpoS is mediated by the formation of a double-stranded RNA stem-loop structure in the upstream region of the rpoS messenger RNA, occluding the translation initiation site. Clones carrying rprA (RpoS regulator RNA) increased the translation of RpoS. The rprA gene encodes a 106 nucleotide regulatory RNA. As with DsrA Rfam:RF00014, RprA is predicted to form three stem-loops. Thus, at least two small RNAs, DsrA and RprA, participate in the positive regulation of RpoS translation. Unlike DsrA, RprA does not have an extensive region of complementarity to the RpoS leader, leaving its mechanism of action unclear. RprA is non-essential."))
(assert (= (name SO:0000387) "RprA_RNA"))

(defconcept SO:0000388)
(assert (subset-of SO:0000388 SO:0000370))
(assert (documentation SO:0000388 "The Rev response element (RRE) is encoded within the HIV-env gene. Rev is an essential regulatory protein of HIV that binds an internal loop of the RRE leading, encouraging further Rev-RRE binding. This RNP complex is critical for mRNA export and hence for expression of the HIV structural proteins."))
(assert (= (name SO:0000388) "RRE_RNA"))

(defconcept SO:0000389)
(assert (subset-of SO:0000389 SO:0000370))
(assert (documentation SO:0000389 "A 109-nucleotide RNA of E. coli that seems to have a regulatory role on the galactose operon. Changes in Spot 42 levels are implicated in affecting DNA polymerase I levels."))
(assert (= (name SO:0000389) "spot_42_RNA"))

(defconcept SO:0000390)
(assert (subset-of SO:0000390 SO:0000655))
(assert (documentation SO:0000390 "The RNA component of telomerase, a reverse transcriptase that synthesizes telomeric DNA."))
(assert (= (name SO:0000390) "telomerase_RNA"))

(defconcept SO:0000391)
(assert (subset-of SO:0000391 SO:0000274))
(assert (documentation SO:0000391 "U1 is a small nuclear RNA (snRNA) component of the spliceosome (involved in pre-mRNA splicing). Its 5' end forms complementary base pairs with the 5' splice junction, thus defining the 5' donor site of an intron. There are significant differences in sequence and secondary structure between metazoan and yeast U1 snRNAs, the latter being much longer (568 nucleotides as compared to 164 nucleotides in human). Nevertheless, secondary structure predictions suggest that all U1 snRNAs share a 'common core' consisting of helices I, II, the proximal region of III, and IV."))
(assert (= (name SO:0000391) "U1_snRNA"))

(defconcept SO:0000392)
(assert (subset-of SO:0000392 SO:0000274))
(assert (documentation SO:0000392 "U2 is a small nuclear RNA (snRNA) component of the spliceosome (involved in pre-mRNA splicing). Complementary binding between U2 snRNA (in an area lying towards the 5' end but 3' to hairpin I) and the branchpoint sequence (BPS) of the intron results in the bulging out of an unpaired adenine, on the BPS, which initiates a nucleophilic attack at the intronic 5' splice site, thus starting the first of two transesterification reactions that mediate splicing."))
(assert (= (name SO:0000392) "U2_snRNA"))

(defconcept SO:0000393)
(assert (subset-of SO:0000393 SO:0000274))
(assert (documentation SO:0000393 "U4 small nuclear RNA (U4 snRNA) is a component of the major U2-dependent spliceosome. It forms a duplex with U6, and with each splicing round, it is displaced from U6 (and the spliceosome) in an ATP-dependent manner, allowing U6 to refold and create the active site for splicing catalysis. A recycling process involving protein Prp24 re-anneals U4 and U6."))
(assert (= (name SO:0000393) "U4_snRNA"))

(defconcept SO:0000394)
(assert (subset-of SO:0000394 SO:0000274))
(assert (documentation SO:0000394 "An snRNA required for the splicing of the minor U12-dependent class of eukaryotic nuclear introns. It forms a base paired complex with U6atac_snRNA (SO:0000397)."))
(assert (= (name SO:0000394) "U4atac_snRNA"))

(defconcept SO:0000395)
(assert (subset-of SO:0000395 SO:0000274))
(assert (documentation SO:0000395 "U5 RNA is a component of both types of known spliceosome. The precise function of this molecule is unknown, though it is known that the 5' loop is required for splice site selection and p220 binding, and that both the 3' stem-loop and the Sm site are important for Sm protein binding and cap methylation."))
(assert (= (name SO:0000395) "U5_snRNA"))

(defconcept SO:0000396)
(assert (subset-of SO:0000396 SO:0000274))
(assert (documentation SO:0000396 "U6 snRNA is a component of the spliceosome which is involved in splicing pre-mRNA. The putative secondary structure consensus base pairing is confined to a short 5' stem loop, but U6 snRNA is thought to form extensive base-pair interactions with U4 snRNA."))
(assert (= (name SO:0000396) "U6_snRNA"))

(defconcept SO:0000397)
(assert (subset-of SO:0000397 SO:0000274))
(assert (documentation SO:0000397 "U6atac_snRNA is an snRNA required for the splicing of the minor U12-dependent class of eukaryotic nuclear introns. It forms a base paired complex with U4atac_snRNA (SO:0000394)."))
(assert (= (name SO:0000397) "U6atac_snRNA"))

(defconcept SO:0000398)
(assert (subset-of SO:0000398 SO:0000274))
(assert (documentation SO:0000398 "U11 snRNA plays a role in splicing of the minor U12-dependent class of eukaryotic nuclear introns, similar to U1 snRNA in the major class spliceosome it base pairs to the conserved 5' splice site sequence."))
(assert (= (name SO:0000398) "U11_snRNA"))

(defconcept SO:0000399)
(assert (subset-of SO:0000399 SO:0000274))
(assert (documentation SO:0000399 "The U12 small nuclear (snRNA), together with U4atac/U6atac, U5, and U11 snRNAs and associated proteins, forms a spliceosome that cleaves a divergent class of low-abundance pre-mRNA introns."))
(assert (= (name SO:0000399) "U12_snRNA"))

(defconcept SO:0000400)
(assert (documentation SO:0000400 "An attribute describes a quality of sequence."))
(assert (= (name SO:0000400) "sequence_attribute"))

(defconcept SO:0000401)
(assert (subset-of SO:0000401 SO:0000733))
(assert (= (name SO:0000401) "gene_attribute"))

(defconcept SO:0000402)
(assert (= (name SO:0000402) "enhancer_attribute"))

(defconcept SO:0000403)
(assert (derives_from SO:0000403 SO:0005837))
(assert (subset-of SO:0000403 SO:0000593))
(assert (documentation SO:0000403 "U14 small nucleolar RNA (U14 snoRNA) is required for early cleavages of eukaryotic precursor rRNAs. In yeasts, this molecule possess a stem-loop region (known as the Y-domain) which is essential for function. A similar structure, but with a different consensus sequence, is found in plants, but is absent in vertebrates."))
(assert (= (name SO:0000403) "U14_snoRNA"))

(defconcept SO:0000404)
(assert (subset-of SO:0000404 SO:0000655))
(assert (documentation SO:0000404 "A family of RNAs are found as part of the enigmatic vault ribonucleoprotein complex. The complex consists of a major vault protein (MVP), two minor vault proteins (VPARP and TEP1), and several small untranslated RNA molecules. It has been suggested that the vault complex is involved in drug resistance."))
(assert (= (name SO:0000404) "vault_RNA"))

(defconcept SO:0000405)
(assert (subset-of SO:0000405 SO:0000655))
(assert (documentation SO:0000405 "Y RNAs are components of the Ro ribonucleoprotein particle (Ro RNP), in association with Ro60 and La proteins. The Y RNAs and Ro60 and La proteins are well conserved, but the function of the Ro RNP is not known. In humans the RNA component can be one of four small RNAs: hY1, hY3, hY4 and hY5. These small RNAs are predicted to fold into a conserved secondary structure containing three stem structures. The largest of the four, hY1, contains an additional hairpin."))
(assert (= (name SO:0000405) "Y_RNA"))

(defconcept SO:0000406)
(assert (subset-of SO:0000406 SO:0000188))
(assert (documentation SO:0000406 "An intron within an intron. Twintrons are group II or III introns, into which another group II or III intron has been transposed."))
(assert (= (name SO:0000406) "twintron"))

(defconcept SO:0000407)
(assert (subset-of SO:0000407 SO:0000650))
(assert (documentation SO:0000407 "A large polynucleotide in eukaryotes, which functions as the small subunit of the ribosome."))
(assert (= (name SO:0000407) "rRNA_18S"))

(defconcept SO:0000408)
(assert (documentation SO:0000408 "The interbase position where something (eg an aberration) occurred."))
(assert (= (name SO:0000408) "site"))

(defconcept SO:0000409)
(assert (subset-of SO:0000409 SO:0001411))
(assert (documentation SO:0000409 "A region on the surface of a molecule that may interact with another molecule. When applied to polypeptides: Amino acids involved in binding or interactions. It can also apply to an amino acid bond which is represented by the positions of the two flanking amino acids."))
(assert (= (name SO:0000409) "binding_site"))

(defconcept SO:0000410)
(assert (subset-of SO:0000410 SO:0000409))
(assert (documentation SO:0000410 "A region of a molecule that binds to a protein."))
(assert (= (name SO:0000410) "protein_binding_site"))

(defconcept SO:0000411)
(assert (subset-of SO:0000411 SO:0000695))
(assert (documentation SO:0000411 "A region that rescues."))
(assert (= (name SO:0000411) "rescue_region"))

(defconcept SO:0000412)
(assert (subset-of SO:0000412 SO:0000143))
(assert (documentation SO:0000412 "A region of polynucleotide sequence produced by digestion with a restriction endonuclease."))
(assert (= (name SO:0000412) "restriction_fragment"))

(defconcept SO:0000413)
(assert (subset-of SO:0000413 SO:0000700))
(assert (documentation SO:0000413 "A region where the sequence differs from that of a specified sequence."))
(assert (= (name SO:0000413) "sequence_difference"))

(defconcept SO:0000414)
(assert (subset-of SO:0000414 SO:0000790))
(assert (documentation SO:0000414 "An attribute to describe a feature that is invalidated due to genomic contamination."))
(assert (= (name SO:0000414) "invalidated_by_genomic_contamination"))

(defconcept SO:0000415)
(assert (subset-of SO:0000415 SO:0000790))
(assert (documentation SO:0000415 "An attribute to describe a feature that is invalidated due to polyA priming."))
(assert (= (name SO:0000415) "invalidated_by_genomic_polyA_primed_cDNA"))

(defconcept SO:0000416)
(assert (subset-of SO:0000416 SO:0000790))
(assert (documentation SO:0000416 "An attribute to describe a feature that is invalidated due to partial processing."))
(assert (= (name SO:0000416) "invalidated_by_partial_processing"))

(defconcept SO:0000417)
(assert (subset-of SO:0000417 SO:0100021))
(assert (subset-of SO:0000417 SO:0001070))
(assert (documentation SO:0000417 "A structurally or functionally defined protein region. In proteins with multiple domains, the combination of the domains determines the function of the protein. A region which has been shown to recur throughout evolution."))
(assert (= (name SO:0000417) "polypeptide_domain"))

(defconcept SO:0000418)
(assert (part_of SO:0000418 SO:0001062))
(assert (subset-of SO:0000418 SO:0001527))
(assert (documentation SO:0000418 "The signal_peptide is a short region of the peptide located at the N-terminus that directs the protein to be secreted or part of membrane components."))
(assert (= (name SO:0000418) "signal_peptide"))

(defconcept SO:0000419)
(assert (part_of SO:0000419 SO:0001063))
(assert (subset-of SO:0000419 SO:0000839))
(assert (documentation SO:0000419 "The polypeptide sequence that remains when the cleaved peptide regions have been cleaved from the immature peptide."))
(assert (= (name SO:0000419) "mature_protein_region"))

(defconcept SO:0000420)
(assert (subset-of SO:0000420 SO:0000481))
(assert (= (name SO:0000420) "five_prime_terminal_inverted_repeat"))

(defconcept SO:0000421)
(assert (subset-of SO:0000421 SO:0000481))
(assert (= (name SO:0000421) "three_prime_terminal_inverted_repeat"))

(defconcept SO:0000422)
(assert (subset-of SO:0000422 SO:0000848))
(assert (= (name SO:0000422) "U5_LTR_region"))

(defconcept SO:0000423)
(assert (subset-of SO:0000423 SO:0000848))
(assert (= (name SO:0000423) "R_LTR_region"))

(defconcept SO:0000424)
(assert (subset-of SO:0000424 SO:0000848))
(assert (= (name SO:0000424) "U3_LTR_region"))

(defconcept SO:0000425)
(assert (subset-of SO:0000425 SO:0000286))
(assert (= (name SO:0000425) "five_prime_LTR"))

(defconcept SO:0000426)
(assert (subset-of SO:0000426 SO:0000286))
(assert (= (name SO:0000426) "three_prime_LTR"))

(defconcept SO:0000427)
(assert (subset-of SO:0000427 SO:0000850))
(assert (subset-of SO:0000427 SO:0000423))
(assert (= (name SO:0000427) "R_five_prime_LTR_region"))

(defconcept SO:0000428)
(assert (subset-of SO:0000428 SO:0000850))
(assert (subset-of SO:0000428 SO:0000422))
(assert (= (name SO:0000428) "U5_five_prime_LTR_region"))

(defconcept SO:0000429)
(assert (subset-of SO:0000429 SO:0000850))
(assert (subset-of SO:0000429 SO:0000424))
(assert (= (name SO:0000429) "U3_five_prime_LTR_region"))

(defconcept SO:0000430)
(assert (subset-of SO:0000430 SO:0000849))
(assert (= (name SO:0000430) "R_three_prime_LTR_region"))

(defconcept SO:0000431)
(assert (subset-of SO:0000431 SO:0000849))
(assert (= (name SO:0000431) "U3_three_prime_LTR_region"))

(defconcept SO:0000432)
(assert (subset-of SO:0000432 SO:0000849))
(assert (= (name SO:0000432) "U5_three_prime_LTR_region"))

(defconcept SO:0000433)
(assert (part_of SO:0000433 SO:0000189))
(assert (subset-of SO:0000433 SO:0000840))
(assert (subset-of SO:0000433 SO:0000657))
(assert (documentation SO:0000433 "A polymeric tract, such as poly(dA), within a non_LTR_retrotransposon."))
(assert (= (name SO:0000433) "non_LTR_retrotransposon_polymeric_tract"))

(defconcept SO:0000434)
(assert (derives_from SO:0000434 SO:0000101))
(assert (subset-of SO:0000434 SO:0000314))
(assert (documentation SO:0000434 "A sequence of the target DNA that is duplicated when a transposable element or phage inserts; usually found at each end the insertion."))
(assert (= (name SO:0000434) "target_site_duplication"))

(defconcept SO:0000435)
(assert (part_of SO:0000435 SO:0000186))
(assert (subset-of SO:0000435 SO:0000330))
(assert (documentation SO:0000435 "A polypurine tract within an LTR_retrotransposon."))
(assert (= (name SO:0000435) "RR_tract"))

(defconcept SO:0000436)
(assert (subset-of SO:0000436 SO:0000296))
(assert (documentation SO:0000436 "A sequence that can autonomously replicate, as a plasmid, when transformed into a bacterial host."))
(assert (= (name SO:0000436) "ARS"))

(defconcept SO:0000437)
(assert (= (name SO:0000437) "assortment_derived_duplication"))

(defconcept SO:0000438)
(assert (= (name SO:0000438) "gene_not_polyadenylated"))

(defconcept SO:0000439)
(assert (subset-of SO:0000439 SO:1000045))
(assert (subset-of SO:0000439 SO:1000030))
(assert (= (name SO:0000439) "inverted_ring_chromosome"))

(defconcept SO:0000440)
(assert (part_of SO:0000440 SO:0000151))
(assert (subset-of SO:0000440 SO:0001235))
(assert (documentation SO:0000440 "A replicon that has been modified to act as a vector for foreign sequence."))
(assert (= (name SO:0000440) "vector_replicon"))

(defconcept SO:0000441)
(assert (subset-of SO:0000441 SO:0000696))
(assert (documentation SO:0000441 "A single stranded oligonucleotide."))
(assert (= (name SO:0000441) "ss_oligo"))

(defconcept SO:0000442)
(assert (subset-of SO:0000442 SO:0000696))
(assert (documentation SO:0000442 "A double stranded oligonucleotide."))
(assert (= (name SO:0000442) "ds_oligo"))

(defconcept SO:0000443)
(assert (subset-of SO:0000443 SO:0000400))
(assert (documentation SO:0000443 "An attribute to describe the kind of biological sequence."))
(assert (= (name SO:0000443) "polymer_attribute"))

(defconcept SO:0000444)
(assert (subset-of SO:0000444 SO:0000198))
(assert (documentation SO:0000444 "Non-coding exon in the 3' UTR."))
(assert (= (name SO:0000444) "three_prime_noncoding_exon"))

(defconcept SO:0000445)
(assert (subset-of SO:0000445 SO:0000198))
(assert (documentation SO:0000445 "Non-coding exon in the 5' UTR."))
(assert (= (name SO:0000445) "five_prime_noncoding_exon"))

(defconcept SO:0000446)
(assert (subset-of SO:0000446 SO:0000188))
(assert (documentation SO:0000446 "Intron located in the untranslated region."))
(assert (= (name SO:0000446) "UTR_intron"))

(defconcept SO:0000447)
(assert (subset-of SO:0000447 SO:0000446))
(assert (documentation SO:0000447 "An intron located in the 5' UTR."))
(assert (= (name SO:0000447) "five_prime_UTR_intron"))

(defconcept SO:0000448)
(assert (subset-of SO:0000448 SO:0000446))
(assert (documentation SO:0000448 "An intron located in the 3' UTR."))
(assert (= (name SO:0000448) "three_prime_UTR_intron"))

(defconcept SO:0000449)
(assert (subset-of SO:0000449 SO:0000351))
(assert (documentation SO:0000449 "A sequence of nucleotides or amino acids which, by design, has a \\\"random\\\" order of components, given a predetermined input frequency of these components."))
(assert (= (name SO:0000449) "random_sequence"))

(defconcept SO:0000450)
(assert (subset-of SO:0000450 SO:0000830))
(assert (documentation SO:0000450 "A light region between two darkly staining bands in a polytene chromosome."))
(assert (= (name SO:0000450) "interband"))

(defconcept SO:0000451)
(assert (subset-of SO:0000451 SO:0001217))
(assert (documentation SO:0000451 "A gene that encodes a polyadenylated mRNA."))
(assert (= (name SO:0000451) "gene_with_polyadenylated_mRNA"))

(defconcept SO:0000452)
(assert (= (name SO:0000452) "transgene_attribute"))

(defconcept SO:0000453)
(assert (subset-of SO:0000453 SO:1000183))
(assert (documentation SO:0000453 "A chromosome structure variant whereby a region of a chromosome has been transferred to another position. Among interchromosomal rearrangements, the term transposition is reserved for that class in which the telomeres of the chromosomes involved are coupled (that is to say, form the two ends of a single DNA molecule) as in wild-type."))
(assert (= (name SO:0000453) "chromosomal_transposition"))

(defconcept SO:0000454)
(assert (subset-of SO:0000454 SO:0000655))
(assert (documentation SO:0000454 "A 17-28-nt, small interfering RNA derived from transcripts of repetitive elements."))
(assert (= (name SO:0000454) "rasiRNA"))

(defconcept SO:0000455)
(assert (subset-of SO:0000455 SO:0001217))
(assert (documentation SO:0000455 "A gene that encodes an mRNA with a frameshift."))
(assert (= (name SO:0000455) "gene_with_mRNA_with_frameshift"))

(defconcept SO:0000456)
(assert (subset-of SO:0000456 SO:0000704))
(assert (documentation SO:0000456 "A gene that is recombinationally rearranged."))
(assert (= (name SO:0000456) "recombinationally_rearranged_gene"))

(defconcept SO:0000457)
(assert (subset-of SO:0000457 SO:1000037))
(assert (documentation SO:0000457 "A chromosome duplication involving an insertion from another chromosome."))
(assert (= (name SO:0000457) "interchromosomal_duplication"))

(defconcept SO:0000458)
(assert (subset-of SO:0000458 SO:0000460))
(assert (documentation SO:0000458 "Germline genomic DNA including D-region with 5' UTR and 3' UTR, also designated as D-segment."))
(assert (= (name SO:0000458) "D_gene"))

(defconcept SO:0000459)
(assert (subset-of SO:0000459 SO:0000704))
(assert (documentation SO:0000459 "A gene with a transcript that is trans-spliced."))
(assert (= (name SO:0000459) "gene_with_trans_spliced_transcript"))

(defconcept SO:0000460)
(assert (subset-of SO:0000460 SO:0000301))
(assert (= (name SO:0000460) "vertebrate_immunoglobulin_T_cell_receptor_segment"))

(defconcept SO:0000461)
(assert (subset-of SO:0000461 SO:1000029))
(assert (documentation SO:0000461 "A chromosomal deletion whereby a chromosome generated by recombination between two inversions; has a deficiency at each end of the inversion."))
(assert (= (name SO:0000461) "inversion_derived_bipartite_deficiency"))

(defconcept SO:0000462)
(assert (subset-of SO:0000462 SO:0001411))
(assert (documentation SO:0000462 "A non-functional descendent of a functional entity."))
(assert (= (name SO:0000462) "pseudogenic_region"))

(defconcept SO:0000463)
(assert (subset-of SO:0000463 SO:0000401))
(assert (documentation SO:0000463 "A gene that encodes more than one transcript."))
(assert (= (name SO:0000463) "encodes_alternately_spliced_transcripts"))

(defconcept SO:0000464)
(assert (non_functional_homolog_of SO:0000464 SO:0000147))
(assert (subset-of SO:0000464 SO:0000462))
(assert (documentation SO:0000464 "A non-functional descendant of an exon."))
(assert (= (name SO:0000464) "decayed_exon"))

(defconcept SO:0000465)
(assert (subset-of SO:0000465 SO:1000038))
(assert (subset-of SO:0000465 SO:1000029))
(assert (documentation SO:0000465 "A chromosome deletion whereby a chromosome is generated by recombination between two inversions; there is a deficiency at one end of the inversion and a duplication at the other end of the inversion."))
(assert (= (name SO:0000465) "inversion_derived_deficiency_plus_duplication"))

(defconcept SO:0000466)
(assert (subset-of SO:0000466 SO:0000460))
(assert (documentation SO:0000466 "Germline genomic DNA including L-part1, V-intron and V-exon, with the 5' UTR and 3' UTR."))
(assert (= (name SO:0000466) "V_gene"))

(defconcept SO:0000467)
(assert (subset-of SO:0000467 SO:0000130))
(assert (documentation SO:0000467 "An attribute describing a gene sequence where the resulting protein is regulated by the stability of the resulting protein."))
(assert (= (name SO:0000467) "post_translationally_regulated_by_protein_stability"))

(defconcept SO:0000468)
(assert (part_of SO:0000468 SO:0000688))
(assert (subset-of SO:0000468 SO:0000143))
(assert (documentation SO:0000468 "One of the pieces of sequence that make up a golden path."))
(assert (= (name SO:0000468) "golden_path_fragment"))

(defconcept SO:0000469)
(assert (subset-of SO:0000469 SO:0000130))
(assert (documentation SO:0000469 "An attribute describing a gene sequence where the resulting protein is modified to regulate it."))
(assert (= (name SO:0000469) "post_translationally_regulated_by_protein_modification"))

(defconcept SO:0000470)
(assert (subset-of SO:0000470 SO:0000460))
(assert (documentation SO:0000470 "Germline genomic DNA of an immunoglobulin/T-cell receptor gene including J-region with 5' UTR (SO:0000204) and 3' UTR (SO:0000205), also designated as J-segment."))
(assert (= (name SO:0000470) "J_gene"))

(defconcept SO:0000471)
(assert (subset-of SO:0000471 SO:0000123))
(assert (documentation SO:0000471 "The gene product is involved in its own transcriptional regulation."))
(assert (= (name SO:0000471) "autoregulated"))

(defconcept SO:0000472)
(assert (subset-of SO:0000472 SO:0000353))
(assert (documentation SO:0000472 "A set of regions which overlap with minimal polymorphism to form a linear sequence."))
(assert (= (name SO:0000472) "tiling_path"))

(defconcept SO:0000473)
(assert (subset-of SO:0000473 SO:0000471))
(assert (subset-of SO:0000473 SO:0000126))
(assert (documentation SO:0000473 "The gene product is involved in its own transcriptional regulation where it decreases transcription."))
(assert (= (name SO:0000473) "negatively_autoregulated"))

(defconcept SO:0000474)
(assert (part_of SO:0000474 SO:0000472))
(assert (subset-of SO:0000474 SO:0000143))
(assert (documentation SO:0000474 "A piece of sequence that makes up a tiling_path (SO:0000472)."))
(assert (= (name SO:0000474) "tiling_path_fragment"))

(defconcept SO:0000475)
(assert (subset-of SO:0000475 SO:0000471))
(assert (subset-of SO:0000475 SO:0000125))
(assert (documentation SO:0000475 "The gene product is involved in its own transcriptional regulation, where it increases transcription."))
(assert (= (name SO:0000475) "positively_autoregulated"))

(defconcept SO:0000476)
(assert (subset-of SO:0000476 SO:0000150))
(assert (documentation SO:0000476 "A DNA sequencer read which is part of a contig."))
(assert (= (name SO:0000476) "contig_read"))

(defconcept SO:0000477)
(assert (documentation SO:0000477 "A gene that is polycistronic."))
(assert (= (name SO:0000477) "polycistronic_gene"))

(defconcept SO:0000478)
(assert (subset-of SO:0000478 SO:0000460))
(assert (documentation SO:0000478 "Genomic DNA of immunoglobulin/T-cell receptor gene including C-region (and introns if present) with 5' UTR (SO:0000204) and 3' UTR (SO:0000205)."))
(assert (= (name SO:0000478) "C_gene"))

(defconcept SO:0000479)
(assert (subset-of SO:0000479 SO:0000673))
(assert (documentation SO:0000479 "A transcript that is trans-spliced."))
(assert (= (name SO:0000479) "trans_spliced_transcript"))

(defconcept SO:0000480)
(assert (subset-of SO:0000480 SO:0000474))
(assert (subset-of SO:0000480 SO:0000151))
(assert (documentation SO:0000480 "A clone which is part of a tiling path. A tiling path is a set of sequencing substrates, typically clones, which have been selected in order to efficiently cover a region of the genome in preparation for sequencing and assembly."))
(assert (= (name SO:0000480) "tiling_path_clone"))

(defconcept SO:0000481)
(assert (part_of SO:0000481 SO:0000208))
(assert (subset-of SO:0000481 SO:0000294))
(assert (documentation SO:0000481 "An inverted repeat (SO:0000294) occurring at the termini of a DNA transposon."))
(assert (= (name SO:0000481) "terminal_inverted_repeat"))

(defconcept SO:0000482)
(assert (subset-of SO:0000482 SO:0000301))
(assert (= (name SO:0000482) "vertebrate_immunoglobulin_T_cell_receptor_gene_cluster"))

(defconcept SO:0000483)
(assert (subset-of SO:0000483 SO:0000185))
(assert (documentation SO:0000483 "A primary transcript that is never translated into a protein."))
(assert (= (name SO:0000483) "nc_primary_transcript"))

(defconcept SO:0000484)
(assert (part_of SO:0000484 SO:0000202))
(assert (subset-of SO:0000484 SO:0001214))
(assert (documentation SO:0000484 "The sequence of the 3' exon that is not coding."))
(assert (= (name SO:0000484) "three_prime_coding_exon_noncoding_region"))

(defconcept SO:0000485)
(assert (has_part SO:0000485 SO:0000572))
(assert (has_part SO:0000485 SO:0000470))
(assert (subset-of SO:0000485 SO:0000938))
(assert (documentation SO:0000485 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one DJ-gene, and one J-gene."))
(assert (= (name SO:0000485) "DJ_J_cluster"))

(defconcept SO:0000486)
(assert (part_of SO:0000486 SO:0000200))
(assert (subset-of SO:0000486 SO:0001214))
(assert (documentation SO:0000486 "The sequence of the 5' exon preceding the start codon."))
(assert (= (name SO:0000486) "five_prime_coding_exon_noncoding_region"))

(defconcept SO:0000487)
(assert (has_part SO:0000487 SO:0000574))
(assert (has_part SO:0000487 SO:0000478))
(assert (has_part SO:0000487 SO:0000470))
(assert (subset-of SO:0000487 SO:0000938))
(assert (documentation SO:0000487 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VDJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000487) "VDJ_J_C_cluster"))

(defconcept SO:0000488)
(assert (has_part SO:0000488 SO:0000574))
(assert (has_part SO:0000488 SO:0000470))
(assert (subset-of SO:0000488 SO:0000938))
(assert (documentation SO:0000488 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VDJ-gene and one J-gene."))
(assert (= (name SO:0000488) "VDJ_J_cluster"))

(defconcept SO:0000489)
(assert (has_part SO:0000489 SO:0000576))
(assert (has_part SO:0000489 SO:0000478))
(assert (subset-of SO:0000489 SO:0000938))
(assert (documentation SO:0000489 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VJ-gene and one C-gene."))
(assert (= (name SO:0000489) "VJ_C_cluster"))

(defconcept SO:0000490)
(assert (has_part SO:0000490 SO:0000576))
(assert (has_part SO:0000490 SO:0000478))
(assert (has_part SO:0000490 SO:0000470))
(assert (subset-of SO:0000490 SO:0000938))
(assert (documentation SO:0000490 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000490) "VJ_J_C_cluster"))

(defconcept SO:0000491)
(assert (has_part SO:0000491 SO:0000576))
(assert (has_part SO:0000491 SO:0000470))
(assert (subset-of SO:0000491 SO:0000938))
(assert (documentation SO:0000491 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VJ-gene and one J-gene."))
(assert (= (name SO:0000491) "VJ_J_cluster"))

(defconcept SO:0000492)
(assert (subset-of SO:0000492 SO:0000939))
(assert (= (name SO:0000492) "D_gene_recombination_feature"))

(defconcept SO:0000493)
(assert (part_of SO:0000493 SO:0000570))
(assert (subset-of SO:0000493 SO:0000561))
(assert (documentation SO:0000493 "7 nucleotide recombination site like CACAGTG, part of a 3' D-recombination signal sequence of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000493) "three_prime_D_heptamer"))

(defconcept SO:0000494)
(assert (part_of SO:0000494 SO:0000570))
(assert (subset-of SO:0000494 SO:0000562))
(assert (documentation SO:0000494 "A 9 nucleotide recombination site (e.g. ACAAAAACC), part of a 3' D-recombination signal sequence of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000494) "three_prime_D_nonamer"))

(defconcept SO:0000495)
(assert (part_of SO:0000495 SO:0000570))
(assert (subset-of SO:0000495 SO:0000563))
(assert (documentation SO:0000495 "A 12 or 23 nucleotide spacer between the 3'D-HEPTAMER and 3'D-NONAMER of a 3'D-RS."))
(assert (= (name SO:0000495) "three_prime_D_spacer"))

(defconcept SO:0000496)
(assert (part_of SO:0000496 SO:0000556))
(assert (subset-of SO:0000496 SO:0000561))
(assert (documentation SO:0000496 "7 nucleotide recombination site (e.g. CACTGTG), part of a 5' D-recombination signal sequence (SO:0000556) of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000496) "five_prime_D_heptamer"))

(defconcept SO:0000497)
(assert (part_of SO:0000497 SO:0000556))
(assert (subset-of SO:0000497 SO:0000562))
(assert (documentation SO:0000497 "9 nucleotide recombination site (e.g. GGTTTTTGT), part of a five_prime_D-recombination signal sequence (SO:0000556) of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000497) "five_prime_D_nonamer"))

(defconcept SO:0000498)
(assert (part_of SO:0000498 SO:0000556))
(assert (subset-of SO:0000498 SO:0000563))
(assert (documentation SO:0000498 "12 or 23 nucleotide spacer between the 5' D-heptamer (SO:0000496) and 5' D-nonamer (SO:0000497) of a 5' D-recombination signal sequence (SO:0000556) of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000498) "five_prime_D_spacer"))

(defconcept SO:0000499)
(assert (subset-of SO:0000499 SO:0000353))
(assert (documentation SO:0000499 "A continuous piece of sequence similar to the 'virtual contig' concept of the Ensembl database."))
(assert (= (name SO:0000499) "virtual_sequence"))

(defconcept SO:0000500)
(assert (subset-of SO:0000500 SO:0000028))
(assert (documentation SO:0000500 "A type of non-canonical base-pairing. This is less energetically favourable than watson crick base pairing. Hoogsteen GC base pairs only have two hydrogen bonds."))
(assert (= (name SO:0000500) "Hoogsteen_base_pair"))

(defconcept SO:0000501)
(assert (subset-of SO:0000501 SO:0000028))
(assert (documentation SO:0000501 "A type of non-canonical base-pairing."))
(assert (= (name SO:0000501) "reverse_Hoogsteen_base_pair"))

(defconcept SO:0000502)
(assert (documentation SO:0000502 "A region of sequence that is transcribed. This region may cover the transcript of a gene, it may emcompas the sequence covered by all of the transcripts of a alternately spliced gene, or it may cover the region transcribed by a polycistronic transcript. A gene may have 1 or more transcribed regions and a transcribed_region may belong to one or more genes."))
(assert (= (name SO:0000502) "transcribed_region"))

(defconcept SO:0000503)
(assert (= (name SO:0000503) "alternately_spliced_gene_encodeing_one_transcript"))

(defconcept SO:0000504)
(assert (has_part SO:0000504 SO:0000572))
(assert (has_part SO:0000504 SO:0000478))
(assert (has_part SO:0000504 SO:0000458))
(assert (subset-of SO:0000504 SO:0000938))
(assert (documentation SO:0000504 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one D-gene, one DJ-gene and one C-gene."))
(assert (= (name SO:0000504) "D_DJ_C_cluster"))

(defconcept SO:0000505)
(assert (has_part SO:0000505 SO:0000572))
(assert (has_part SO:0000505 SO:0000458))
(assert (subset-of SO:0000505 SO:0000938))
(assert (documentation SO:0000505 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one D-gene and one DJ-gene."))
(assert (= (name SO:0000505) "D_DJ_cluster"))

(defconcept SO:0000506)
(assert (has_part SO:0000506 SO:0000572))
(assert (has_part SO:0000506 SO:0000478))
(assert (has_part SO:0000506 SO:0000470))
(assert (has_part SO:0000506 SO:0000458))
(assert (subset-of SO:0000506 SO:0000938))
(assert (documentation SO:0000506 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one D-gene, one DJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000506) "D_DJ_J_C_cluster"))

(defconcept SO:0000507)
(assert (part_of SO:0000507 SO:0000516))
(assert (non_functional_homolog_of SO:0000507 SO:0000147))
(assert (subset-of SO:0000507 SO:0000462))
(assert (documentation SO:0000507 "A non functional descendant of an exon, part of a pseudogene."))
(assert (= (name SO:0000507) "pseudogenic_exon"))

(defconcept SO:0000508)
(assert (has_part SO:0000508 SO:0000572))
(assert (has_part SO:0000508 SO:0000470))
(assert (has_part SO:0000508 SO:0000458))
(assert (subset-of SO:0000508 SO:0000938))
(assert (documentation SO:0000508 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one D-gene, one DJ-gene, and one J-gene."))
(assert (= (name SO:0000508) "D_DJ_J_cluster"))

(defconcept SO:0000509)
(assert (has_part SO:0000509 SO:0000478))
(assert (has_part SO:0000509 SO:0000470))
(assert (has_part SO:0000509 SO:0000458))
(assert (subset-of SO:0000509 SO:0000482))
(assert (documentation SO:0000509 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one D-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000509) "D_J_C_cluster"))

(defconcept SO:0000510)
(assert (subset-of SO:0000510 SO:0000936))
(assert (documentation SO:0000510 "Genomic DNA of immunoglobulin/T-cell receptor gene in partially rearranged genomic DNA including L-part1, V-intron and V-D-exon, with the 5' UTR (SO:0000204) and 3' UTR (SO:0000205)."))
(assert (= (name SO:0000510) "VD_gene"))

(defconcept SO:0000511)
(assert (has_part SO:0000511 SO:0000478))
(assert (has_part SO:0000511 SO:0000470))
(assert (subset-of SO:0000511 SO:0000482))
(assert (documentation SO:0000511 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one J-gene and one C-gene."))
(assert (= (name SO:0000511) "J_C_cluster"))

(defconcept SO:0000512)
(assert (subset-of SO:0000512 SO:1000029))
(assert (documentation SO:0000512 "A chromosomal deletion whereby a chromosome generated by recombination between two inversions; has a deficiency at one end and presumed to have a deficiency or duplication at the other end of the inversion."))
(assert (= (name SO:0000512) "inversion_derived_deficiency_plus_aneuploid"))

(defconcept SO:0000513)
(assert (has_part SO:0000513 SO:0000470))
(assert (subset-of SO:0000513 SO:0000482))
(assert (documentation SO:0000513 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including more than one J-gene."))
(assert (= (name SO:0000513) "J_cluster"))

(defconcept SO:0000514)
(assert (part_of SO:0000514 SO:0000302))
(assert (subset-of SO:0000514 SO:0000562))
(assert (documentation SO:0000514 "9 nucleotide recombination site (e.g. GGTTTTTGT), part of a J-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000514) "J_nonamer"))

(defconcept SO:0000515)
(assert (part_of SO:0000515 SO:0000302))
(assert (subset-of SO:0000515 SO:0000561))
(assert (documentation SO:0000515 "7 nucleotide recombination site (e.g. CACAGTG), part of a J-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000515) "J_heptamer"))

(defconcept SO:0000516)
(assert (part_of SO:0000516 SO:0000336))
(assert (non_functional_homolog_of SO:0000516 SO:0000673))
(assert (subset-of SO:0000516 SO:0000462))
(assert (documentation SO:0000516 "A non functional descendant of a transcript, part of a pseudogene."))
(assert (= (name SO:0000516) "pseudogenic_transcript"))

(defconcept SO:0000517)
(assert (part_of SO:0000517 SO:0000302))
(assert (subset-of SO:0000517 SO:0000563))
(assert (documentation SO:0000517 "12 or 23 nucleotide spacer between the J-nonamer and the J-heptamer of a J-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000517) "J_spacer"))

(defconcept SO:0000518)
(assert (has_part SO:0000518 SO:0000572))
(assert (has_part SO:0000518 SO:0000466))
(assert (subset-of SO:0000518 SO:0000938))
(assert (documentation SO:0000518 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene and one DJ-gene."))
(assert (= (name SO:0000518) "V_DJ_cluster"))

(defconcept SO:0000519)
(assert (has_part SO:0000519 SO:0000572))
(assert (has_part SO:0000519 SO:0000470))
(assert (has_part SO:0000519 SO:0000466))
(assert (subset-of SO:0000519 SO:0000938))
(assert (documentation SO:0000519 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one DJ-gene and one J-gene."))
(assert (= (name SO:0000519) "V_DJ_J_cluster"))

(defconcept SO:0000520)
(assert (has_part SO:0000520 SO:0000574))
(assert (has_part SO:0000520 SO:0000478))
(assert (has_part SO:0000520 SO:0000466))
(assert (subset-of SO:0000520 SO:0000938))
(assert (documentation SO:0000520 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VDJ-gene and one C-gene."))
(assert (= (name SO:0000520) "V_VDJ_C_cluster"))

(defconcept SO:0000521)
(assert (has_part SO:0000521 SO:0000574))
(assert (has_part SO:0000521 SO:0000466))
(assert (subset-of SO:0000521 SO:0000938))
(assert (documentation SO:0000521 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene and one VDJ-gene."))
(assert (= (name SO:0000521) "V_VDJ_cluster"))

(defconcept SO:0000522)
(assert (has_part SO:0000522 SO:0000574))
(assert (has_part SO:0000522 SO:0000470))
(assert (has_part SO:0000522 SO:0000466))
(assert (subset-of SO:0000522 SO:0000938))
(assert (documentation SO:0000522 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VDJ-gene and one J-gene."))
(assert (= (name SO:0000522) "V_VDJ_J_cluster"))

(defconcept SO:0000523)
(assert (has_part SO:0000523 SO:0000576))
(assert (has_part SO:0000523 SO:0000478))
(assert (has_part SO:0000523 SO:0000466))
(assert (subset-of SO:0000523 SO:0000938))
(assert (documentation SO:0000523 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VJ-gene and one C-gene."))
(assert (= (name SO:0000523) "V_VJ_C_cluster"))

(defconcept SO:0000524)
(assert (has_part SO:0000524 SO:0000576))
(assert (has_part SO:0000524 SO:0000466))
(assert (subset-of SO:0000524 SO:0000938))
(assert (documentation SO:0000524 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene and one VJ-gene."))
(assert (= (name SO:0000524) "V_VJ_cluster"))

(defconcept SO:0000525)
(assert (has_part SO:0000525 SO:0000576))
(assert (has_part SO:0000525 SO:0000470))
(assert (has_part SO:0000525 SO:0000466))
(assert (subset-of SO:0000525 SO:0000938))
(assert (documentation SO:0000525 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VJ-gene and one J-gene."))
(assert (= (name SO:0000525) "V_VJ_J_cluster"))

(defconcept SO:0000526)
(assert (has_part SO:0000526 SO:0000466))
(assert (subset-of SO:0000526 SO:0000482))
(assert (documentation SO:0000526 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including more than one V-gene."))
(assert (= (name SO:0000526) "V_cluster"))

(defconcept SO:0000527)
(assert (has_part SO:0000527 SO:0000572))
(assert (has_part SO:0000527 SO:0000478))
(assert (has_part SO:0000527 SO:0000466))
(assert (has_part SO:0000527 SO:0000458))
(assert (subset-of SO:0000527 SO:0000938))
(assert (documentation SO:0000527 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one D-gene, one DJ-gene and one C-gene."))
(assert (= (name SO:0000527) "V_D_DJ_C_cluster"))

(defconcept SO:0000528)
(assert (has_part SO:0000528 SO:0000572))
(assert (has_part SO:0000528 SO:0000466))
(assert (has_part SO:0000528 SO:0000458))
(assert (subset-of SO:0000528 SO:0000938))
(assert (documentation SO:0000528 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one D-gene, one DJ-gene."))
(assert (= (name SO:0000528) "V_D_DJ_cluster"))

(defconcept SO:0000529)
(assert (has_part SO:0000529 SO:0000572))
(assert (has_part SO:0000529 SO:0000478))
(assert (has_part SO:0000529 SO:0000470))
(assert (has_part SO:0000529 SO:0000466))
(assert (has_part SO:0000529 SO:0000458))
(assert (subset-of SO:0000529 SO:0000938))
(assert (documentation SO:0000529 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one D-gene, one DJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000529) "V_D_DJ_J_C_cluster"))

(defconcept SO:0000530)
(assert (has_part SO:0000530 SO:0000572))
(assert (has_part SO:0000530 SO:0000470))
(assert (has_part SO:0000530 SO:0000466))
(assert (has_part SO:0000530 SO:0000458))
(assert (subset-of SO:0000530 SO:0000938))
(assert (documentation SO:0000530 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one D-gene, one DJ-gene and one J-gene."))
(assert (= (name SO:0000530) "V_D_DJ_J_cluster"))

(defconcept SO:0000531)
(assert (has_part SO:0000531 SO:0000478))
(assert (has_part SO:0000531 SO:0000470))
(assert (has_part SO:0000531 SO:0000466))
(assert (has_part SO:0000531 SO:0000458))
(assert (subset-of SO:0000531 SO:0000938))
(assert (documentation SO:0000531 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one V-gene, one D-gene and one J-gene and one C-gene."))
(assert (= (name SO:0000531) "V_D_J_C_cluster"))

(defconcept SO:0000532)
(assert (has_part SO:0000532 SO:0000470))
(assert (has_part SO:0000532 SO:0000466))
(assert (has_part SO:0000532 SO:0000458))
(assert (subset-of SO:0000532 SO:0000938))
(assert (documentation SO:0000532 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one V-gene, one D-gene and one J-gene."))
(assert (= (name SO:0000532) "V_D_J_cluster"))

(defconcept SO:0000533)
(assert (part_of SO:0000533 SO:0000538))
(assert (subset-of SO:0000533 SO:0000561))
(assert (documentation SO:0000533 "7 nucleotide recombination site (e.g. CACAGTG), part of V-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000533) "V_heptamer"))

(defconcept SO:0000534)
(assert (has_part SO:0000534 SO:0000470))
(assert (has_part SO:0000534 SO:0000466))
(assert (subset-of SO:0000534 SO:0000482))
(assert (documentation SO:0000534 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one V-gene and one J-gene."))
(assert (= (name SO:0000534) "V_J_cluster"))

(defconcept SO:0000535)
(assert (has_part SO:0000535 SO:0000478))
(assert (has_part SO:0000535 SO:0000470))
(assert (has_part SO:0000535 SO:0000466))
(assert (subset-of SO:0000535 SO:0000482))
(assert (documentation SO:0000535 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one V-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000535) "V_J_C_cluster"))

(defconcept SO:0000536)
(assert (part_of SO:0000536 SO:0000538))
(assert (subset-of SO:0000536 SO:0000562))
(assert (documentation SO:0000536 "9 nucleotide recombination site (e.g. ACAAAAACC), part of V-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000536) "V_nonamer"))

(defconcept SO:0000537)
(assert (part_of SO:0000537 SO:0000538))
(assert (subset-of SO:0000537 SO:0000563))
(assert (documentation SO:0000537 "12 or 23 nucleotide spacer between the V-heptamer and the V-nonamer of a V-gene recombination feature of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000537) "V_spacer"))

(defconcept SO:0000538)
(assert (subset-of SO:0000538 SO:0000939))
(assert (documentation SO:0000538 "Recombination signal including V-heptamer, V-spacer and V-nonamer in 3' of V-region of a V-gene or V-sequence of an immunoglobulin/T-cell receptor gene."))
(assert (= (name SO:0000538) "V_gene_recombination_feature"))

(defconcept SO:0000539)
(assert (has_part SO:0000539 SO:0000572))
(assert (has_part SO:0000539 SO:0000478))
(assert (subset-of SO:0000539 SO:0000938))
(assert (documentation SO:0000539 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one DJ-gene and one C-gene."))
(assert (= (name SO:0000539) "DJ_C_cluster"))

(defconcept SO:0000540)
(assert (has_part SO:0000540 SO:0000572))
(assert (has_part SO:0000540 SO:0000478))
(assert (has_part SO:0000540 SO:0000470))
(assert (subset-of SO:0000540 SO:0000938))
(assert (documentation SO:0000540 "Genomic DNA in rearranged configuration including at least one D-J-GENE, one J-GENE and one C-GENE."))
(assert (= (name SO:0000540) "DJ_J_C_cluster"))

(defconcept SO:0000541)
(assert (has_part SO:0000541 SO:0000574))
(assert (has_part SO:0000541 SO:0000478))
(assert (subset-of SO:0000541 SO:0000938))
(assert (documentation SO:0000541 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one VDJ-gene and one C-gene."))
(assert (= (name SO:0000541) "VDJ_C_cluster"))

(defconcept SO:0000542)
(assert (has_part SO:0000542 SO:0000572))
(assert (has_part SO:0000542 SO:0000478))
(assert (has_part SO:0000542 SO:0000466))
(assert (subset-of SO:0000542 SO:0000938))
(assert (documentation SO:0000542 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one DJ-gene and one C-gene."))
(assert (= (name SO:0000542) "V_DJ_C_cluster"))

(defconcept SO:0000543)
(assert (= (name SO:0000543) "alternately_spliced_gene_encoding_greater_than_one_transcript"))

(defconcept SO:0000544)
(assert (subset-of SO:0000544 SO:0000182))
(assert (documentation SO:0000544 "A rolling circle transposon. Autonomous helitrons encode a 5'-to-3' DNA helicase and nuclease/ligase similar to those encoded by known rolling-circle replicons."))
(assert (= (name SO:0000544) "helitron"))

(defconcept SO:0000545)
(assert (part_of SO:0000545 SO:1001268))
(assert (subset-of SO:0000545 SO:0000591))
(assert (documentation SO:0000545 "The pseudoknots involved in recoding are unique in that, as they play their role as a structure, they are immediately unfolded and their now linear sequence serves as a template for decoding."))
(assert (= (name SO:0000545) "recoding_pseudoknot"))

(defconcept SO:0000546)
(assert (subset-of SO:0000546 SO:0000351))
(assert (= (name SO:0000546) "designed_sequence"))

(defconcept SO:0000547)
(assert (subset-of SO:0000547 SO:1000038))
(assert (documentation SO:0000547 "A chromosome generated by recombination between two inversions; there is a duplication at each end of the inversion."))
(assert (= (name SO:0000547) "inversion_derived_bipartite_duplication"))

(defconcept SO:0000548)
(assert (subset-of SO:0000548 SO:0001217))
(assert (documentation SO:0000548 "A gene that encodes a transcript that is edited."))
(assert (= (name SO:0000548) "gene_with_edited_transcript"))

(defconcept SO:0000549)
(assert (subset-of SO:0000549 SO:1000038))
(assert (documentation SO:0000549 "A chromosome generated by recombination between two inversions; has a duplication at one end and presumed to have a deficiency or duplication at the other end of the inversion."))
(assert (= (name SO:0000549) "inversion_derived_duplication_plus_aneuploid"))

(defconcept SO:0000550)
(assert (subset-of SO:0000550 SO:1000183))
(assert (documentation SO:0000550 "A chromosome structural variation whereby either a chromosome exists in addition to the normal chromosome complement or is lacking."))
(assert (= (name SO:0000550) "aneuploid_chromosome"))

(defconcept SO:0000551)
(assert (subset-of SO:0000551 SO:0005836))
(assert (documentation SO:0000551 "The recognition sequence necessary for endonuclease cleavage of an RNA transcript that is followed by polyadenylation; consensus=AATAAA."))
(assert (= (name SO:0000551) "polyA_signal_sequence"))

(defconcept SO:0000552)
(assert (subset-of SO:0000552 SO:0000139))
(assert (documentation SO:0000552 "Region in 5' UTR where ribosome assembles on mRNA."))
(assert (= (name SO:0000552) "Shine_Dalgarno_sequence"))

(defconcept SO:0000553)
(assert (part_of SO:0000553 SO:0000233))
(assert (part_of SO:0000553 SO:0000205))
(assert (subset-of SO:0000553 SO:0000837))
(assert (documentation SO:0000553 "The site on an RNA transcript to which will be added adenine residues by post-transcriptional polyadenylation."))
(assert (= (name SO:0000553) "polyA_site"))

(defconcept SO:0000554)
(assert (= (name SO:0000554) "assortment_derived_deficiency_plus_duplication"))

(defconcept SO:0000555)
(assert (subset-of SO:0000555 SO:0000303))
(assert (documentation SO:0000555 "5' most region of a precursor transcript that is clipped off during processing."))
(assert (= (name SO:0000555) "five_prime_clip"))

(defconcept SO:0000556)
(assert (subset-of SO:0000556 SO:0000492))
(assert (documentation SO:0000556 "Recombination signal of an immunoglobulin/T-cell receptor gene, including the 5' D-nonamer (SO:0000497), 5' D-spacer (SO:0000498), and 5' D-heptamer (SO:0000396) in 5' of the D-region of a D-gene, or in 5' of the D-region of DJ-gene."))
(assert (= (name SO:0000556) "five_prime_D_recombination_signal_sequence"))

(defconcept SO:0000557)
(assert (subset-of SO:0000557 SO:0000303))
(assert (documentation SO:0000557 "3'-most region of a precursor transcript that is clipped off during processing."))
(assert (= (name SO:0000557) "three_prime_clip"))

(defconcept SO:0000558)
(assert (has_part SO:0000558 SO:0000478))
(assert (subset-of SO:0000558 SO:0000482))
(assert (documentation SO:0000558 "Genomic DNA of immunoglobulin/T-cell receptor gene including more than one C-gene."))
(assert (= (name SO:0000558) "C_cluster"))

(defconcept SO:0000559)
(assert (has_part SO:0000559 SO:0000458))
(assert (subset-of SO:0000559 SO:0000482))
(assert (documentation SO:0000559 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including more than one D-gene."))
(assert (= (name SO:0000559) "D_cluster"))

(defconcept SO:0000560)
(assert (has_part SO:0000560 SO:0000470))
(assert (has_part SO:0000560 SO:0000458))
(assert (subset-of SO:0000560 SO:0000482))
(assert (documentation SO:0000560 "Genomic DNA of immunoglobulin/T-cell receptor gene in germline configuration including at least one D-gene and one J-gene."))
(assert (= (name SO:0000560) "D_J_cluster"))

(defconcept SO:0000561)
(assert (subset-of SO:0000561 SO:0000939))
(assert (documentation SO:0000561 "Seven nucleotide recombination site (e.g. CACAGTG), part of V-gene, D-gene or J-gene recombination feature of an immunoglobulin or T-cell receptor gene."))
(assert (= (name SO:0000561) "heptamer_of_recombination_feature_of_vertebrate_immune_system_gene"))

(defconcept SO:0000562)
(assert (subset-of SO:0000562 SO:0000939))
(assert (= (name SO:0000562) "nonamer_of_recombination_feature_of_vertebrate_immune_system_gene"))

(defconcept SO:0000563)
(assert (subset-of SO:0000563 SO:0000301))
(assert (= (name SO:0000563) "vertebrate_immune_system_gene_recombination_spacer"))

(defconcept SO:0000564)
(assert (has_part SO:0000564 SO:0000572))
(assert (has_part SO:0000564 SO:0000478))
(assert (has_part SO:0000564 SO:0000470))
(assert (has_part SO:0000564 SO:0000466))
(assert (subset-of SO:0000564 SO:0000938))
(assert (documentation SO:0000564 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one DJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000564) "V_DJ_J_C_cluster"))

(defconcept SO:0000565)
(assert (has_part SO:0000565 SO:0000574))
(assert (has_part SO:0000565 SO:0000478))
(assert (has_part SO:0000565 SO:0000470))
(assert (has_part SO:0000565 SO:0000466))
(assert (subset-of SO:0000565 SO:0000938))
(assert (documentation SO:0000565 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VDJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000565) "V_VDJ_J_C_cluster"))

(defconcept SO:0000566)
(assert (has_part SO:0000566 SO:0000576))
(assert (has_part SO:0000566 SO:0000478))
(assert (has_part SO:0000566 SO:0000470))
(assert (has_part SO:0000566 SO:0000466))
(assert (subset-of SO:0000566 SO:0000938))
(assert (documentation SO:0000566 "Genomic DNA of immunoglobulin/T-cell receptor gene in rearranged configuration including at least one V-gene, one VJ-gene, one J-gene and one C-gene."))
(assert (= (name SO:0000566) "V_VJ_J_C_cluster"))

(defconcept SO:0000567)
(assert (subset-of SO:0000567 SO:0000550))
(assert (documentation SO:0000567 "A chromosome may be generated by recombination between two inversions; presumed to have a deficiency or duplication at each end of the inversion."))
(assert (= (name SO:0000567) "inversion_derived_aneuploid_chromosome"))

(defconcept SO:0000568)
(assert (subset-of SO:0000568 SO:0000167))
(assert (= (name SO:0000568) "bidirectional_promoter"))

(defconcept SO:0000569)
(assert (subset-of SO:0000569 SO:0000733))
(assert (documentation SO:0000569 "An attribute of a feature that occurred as the product of a reverse transcriptase mediated event."))
(assert (= (name SO:0000569) "retrotransposed"))

(defconcept SO:0000570)
(assert (subset-of SO:0000570 SO:0000492))
(assert (documentation SO:0000570 "Recombination signal of an immunoglobulin/T-cell receptor gene, including the 3' D-heptamer (SO:0000493), 3' D-spacer, and 3' D-nonamer (SO:0000494) in 3' of the D-region of a D-gene."))
(assert (= (name SO:0000570) "three_prime_D_recombination_signal_sequence"))

(defconcept SO:0000571)
(assert (subset-of SO:0000571 SO:0000011))
(assert (= (name SO:0000571) "miRNA_encoding"))

(defconcept SO:0000572)
(assert (subset-of SO:0000572 SO:0000936))
(assert (documentation SO:0000572 "Genomic DNA of immunoglobulin/T-cell receptor gene in partially rearranged genomic DNA including D-J-region with 5' UTR and 3' UTR, also designated as D-J-segment."))
(assert (= (name SO:0000572) "DJ_gene"))

(defconcept SO:0000573)
(assert (subset-of SO:0000573 SO:0000011))
(assert (= (name SO:0000573) "rRNA_encoding"))

(defconcept SO:0000574)
(assert (subset-of SO:0000574 SO:0000936))
(assert (documentation SO:0000574 "Rearranged genomic DNA of immunoglobulin/T-cell receptor gene including L-part1, V-intron and V-D-J-exon, with the 5'UTR (SO:0000204) and 3'UTR (SO:0000205)."))
(assert (= (name SO:0000574) "VDJ_gene"))

(defconcept SO:0000575)
(assert (subset-of SO:0000575 SO:0000011))
(assert (= (name SO:0000575) "scRNA_encoding"))

(defconcept SO:0000576)
(assert (subset-of SO:0000576 SO:0000936))
(assert (documentation SO:0000576 "Rearranged genomic DNA of immunoglobulin/T-cell receptor gene including L-part1, V-intron and V-J-exon, with the 5'UTR (SO:0000204) and 3'UTR (SO:0000205)."))
(assert (= (name SO:0000576) "VJ_gene"))

(defconcept SO:0000577)
(assert (subset-of SO:0000577 SO:0000628))
(assert (documentation SO:0000577 "A region of chromosome where the spindle fibers attach during mitosis and meiosis."))
(assert (= (name SO:0000577) "centromere"))

(defconcept SO:0000578)
(assert (subset-of SO:0000578 SO:0000011))
(assert (= (name SO:0000578) "snoRNA_encoding"))

(defconcept SO:0000579)
(assert (subset-of SO:0000579 SO:0000833))
(assert (documentation SO:0000579 "A locatable feature on a transcript that is edited."))
(assert (= (name SO:0000579) "edited_transcript_feature"))

(defconcept SO:0000580)
(assert (subset-of SO:0000580 SO:0000232))
(assert (documentation SO:0000580 "A primary transcript encoding a methylation guide small nucleolar RNA."))
(assert (= (name SO:0000580) "methylation_guide_snoRNA_primary_transcript"))

(defconcept SO:0000581)
(assert (subset-of SO:0000581 SO:0001411))
(assert (documentation SO:0000581 "A structure consisting of a 7-methylguanosine in 5'-5' triphosphate linkage with the first nucleotide of an mRNA. It is added post-transcriptionally, and is not encoded in the DNA."))
(assert (= (name SO:0000581) "cap"))

(defconcept SO:0000582)
(assert (subset-of SO:0000582 SO:0000232))
(assert (documentation SO:0000582 "A primary transcript encoding an rRNA cleavage snoRNA."))
(assert (= (name SO:0000582) "rRNA_cleavage_snoRNA_primary_transcript"))

(defconcept SO:0000583)
(assert (subset-of SO:0000583 SO:0000579))
(assert (documentation SO:0000583 "The region of a transcript that will be edited."))
(assert (= (name SO:0000583) "pre_edited_region"))

(defconcept SO:0000584)
(assert (subset-of SO:0000584 SO:0000370))
(assert (documentation SO:0000584 "A tmRNA liberates a mRNA from a stalled ribosome. To accomplish this part of the tmRNA is used as a reading frame that ends in a translation stop signal. The broken mRNA is replaced in the ribosome by the tmRNA and translation of the tmRNA leads to addition of a proteolysis tag to the incomplete protein enabling recognition by a protease. Recently a number of permuted tmRNAs genes have been found encoded in two parts. TmRNAs have been identified in eubacteria and some chloroplasts but are absent from archeal and Eukaryote nuclear genomes."))
(assert (= (name SO:0000584) "tmRNA"))

(defconcept SO:0000585)
(assert (subset-of SO:0000585 SO:0000578))
(assert (= (name SO:0000585) "C_D_box_snoRNA_encoding"))

(defconcept SO:0000586)
(assert (subset-of SO:0000586 SO:0000483))
(assert (documentation SO:0000586 "A primary transcript encoding a tmRNA (SO:0000584)."))
(assert (= (name SO:0000586) "tmRNA_primary_transcript"))

(defconcept SO:0000587)
(assert (subset-of SO:0000587 SO:0000588))
(assert (documentation SO:0000587 "Group I catalytic introns are large self-splicing ribozymes. They catalyze their own excision from mRNA, tRNA and rRNA precursors in a wide range of organisms. The core secondary structure consists of 9 paired regions (P1-P9). These fold to essentially two domains, the P4-P6 domain (formed from the stacking of P5, P4, P6 and P6a helices) and the P3-P9 domain (formed from the P8, P3, P7 and P9 helices). Group I catalytic introns often have long ORFs inserted in loop regions."))
(assert (= (name SO:0000587) "group_I_intron"))

(defconcept SO:0000588)
(assert (subset-of SO:0000588 SO:0000188))
(assert (documentation SO:0000588 "A self spliced intron."))
(assert (= (name SO:0000588) "autocatalytically_spliced_intron"))

(defconcept SO:0000589)
(assert (subset-of SO:0000589 SO:0000483))
(assert (documentation SO:0000589 "A primary transcript encoding a signal recognition particle RNA."))
(assert (= (name SO:0000589) "SRP_RNA_primary_transcript"))

(defconcept SO:0000590)
(assert (derives_from SO:0000590 SO:0000589))
(assert (subset-of SO:0000590 SO:0000655))
(assert (documentation SO:0000590 "The signal recognition particle (SRP) is a universally conserved ribonucleoprotein. It is involved in the co-translational targeting of proteins to membranes. The eukaryotic SRP consists of a 300-nucleotide 7S RNA and six proteins: SRPs 72, 68, 54, 19, 14, and 9. Archaeal SRP consists of a 7S RNA and homologues of the eukaryotic SRP19 and SRP54 proteins. In most eubacteria, the SRP consists of a 4.5S RNA and the Ffh protein (a homologue of the eukaryotic SRP54 protein). Eukaryotic and archaeal 7S RNAs have very similar secondary structures, with eight helical elements. These fold into the Alu and S domains, separated by a long linker region. Eubacterial SRP is generally a simpler structure, with the M domain of Ffh bound to a region of the 4.5S RNA that corresponds to helix 8 of the eukaryotic and archaeal SRP S domain. Some Gram-positive bacteria (e.g. Bacillus subtilis), however, have a larger SRP RNA that also has an Alu domain. The Alu domain is thought to mediate the peptide chain elongation retardation function of the SRP. The universally conserved helix which interacts with the SRP54/Ffh M domain mediates signal sequence recognition. In eukaryotes and archaea, the SRP19-helix 6 complex is thought to be involved in SRP assembly and stabilizes helix 8 for SRP54 binding."))
(assert (= (name SO:0000590) "SRP_RNA"))

(defconcept SO:0000591)
(assert (subset-of SO:0000591 SO:0000002))
(assert (documentation SO:0000591 "A tertiary structure in RNA where nucleotides in a loop form base pairs with a region of RNA downstream of the loop."))
(assert (= (name SO:0000591) "pseudoknot"))

(defconcept SO:0000592)
(assert (subset-of SO:0000592 SO:0000591))
(assert (documentation SO:0000592 "A pseudoknot which contains two stems and at least two loops."))
(assert (= (name SO:0000592) "H_pseudoknot"))

(defconcept SO:0000593)
(assert (derives_from SO:0000593 SO:0000595))
(assert (subset-of SO:0000593 SO:0000275))
(assert (documentation SO:0000593 "Most box C/D snoRNAs also contain long (>10 nt) sequences complementary to rRNA. Boxes C and D, as well as boxes C' and D', are usually located in close proximity, and form a structure known as the box C/D motif. This motif is important for snoRNA stability, processing, nucleolar targeting and function. A small number of box C/D snoRNAs are involved in rRNA processing; most, however, are known or predicted to serve as guide RNAs in ribose methylation of rRNA. Targeting involves direct base pairing of the snoRNA at the rRNA site to be modified and selection of a rRNA nucleotide a fixed distance from box D or D'."))
(assert (= (name SO:0000593) "C_D_box_snoRNA"))

(defconcept SO:0000594)
(assert (derives_from SO:0000594 SO:0000596))
(assert (subset-of SO:0000594 SO:0000275))
(assert (documentation SO:0000594 "Members of the box H/ACA family contain an ACA triplet, exactly 3 nt upstream from the 3' end and an H-box in a hinge region that links two structurally similar functional domains of the molecule. Both boxes are important for snoRNA biosynthesis and function. A few box H/ACA snoRNAs are involved in rRNA processing; most others are known or predicted to participate in selection of uridine nucleosides in rRNA to be converted to pseudouridines. Site selection is mediated by direct base pairing of the snoRNA with rRNA through one or both targeting domains."))
(assert (= (name SO:0000594) "H_ACA_box_snoRNA"))

(defconcept SO:0000595)
(assert (subset-of SO:0000595 SO:0000232))
(assert (documentation SO:0000595 "A primary transcript encoding a small nucleolar RNA of the box C/D family."))
(assert (= (name SO:0000595) "C_D_box_snoRNA_primary_transcript"))

(defconcept SO:0000596)
(assert (subset-of SO:0000596 SO:0000232))
(assert (documentation SO:0000596 "A primary transcript encoding a small nucleolar RNA of the box H/ACA family."))
(assert (= (name SO:0000596) "H_ACA_box_snoRNA_primary_transcript"))

(defconcept SO:0000597)
(assert (documentation SO:0000597 "The insertion and deletion of uridine (U) residues, usually within coding regions of mRNA transcripts of cryptogenes in the mitochondrial genome of kinetoplastid protozoa."))
(assert (= (name SO:0000597) "transcript_edited_by_U_insertion/deletion"))

(defconcept SO:0000598)
(assert (= (name SO:0000598) "edited_by_C_insertion_and_dinucleotide_insertion"))

(defconcept SO:0000599)
(assert (= (name SO:0000599) "edited_by_C_to_U_substitution"))

(defconcept SO:0000600)
(assert (= (name SO:0000600) "edited_by_A_to_I_substitution"))

(defconcept SO:0000601)
(assert (= (name SO:0000601) "edited_by_G_addition"))

(defconcept SO:0000602)
(assert (subset-of SO:0000602 SO:0000655))
(assert (documentation SO:0000602 "A short 3'-uridylated RNA that can form a duplex (except for its post-transcriptionally added oligo_U tail (SO:0000609)) with a stretch of mature edited mRNA."))
(assert (= (name SO:0000602) "guide_RNA"))

(defconcept SO:0000603)
(assert (subset-of SO:0000603 SO:0000588))
(assert (documentation SO:0000603 "Group II introns are found in rRNA, tRNA and mRNA of organelles in fungi, plants and protists, and also in mRNA in bacteria. They are large self-splicing ribozymes and have 6 structural domains (usually designated dI to dVI). A subset of group II introns also encode essential splicing proteins in intronic ORFs. The length of these introns can therefore be up to 3kb. Splicing occurs in almost identical fashion to nuclear pre-mRNA splicing with two transesterification steps. The 2' hydroxyl of a bulged adenosine in domain VI attacks the 5' splice site, followed by nucleophilic attack on the 3' splice site by the 3' OH of the upstream exon. Protein machinery is required for splicing in vivo, and long range intron-intron and intron-exon interactions are important for splice site positioning. Group II introns are further sub-classified into groups IIA and IIB which differ in splice site consensus, distance of bulged A from 3' splice site, some tertiary interactions, and intronic ORF phylogeny."))
(assert (= (name SO:0000603) "group_II_intron"))

(defconcept SO:0000604)
(assert (subset-of SO:0000604 SO:0000579))
(assert (documentation SO:0000604 "Edited mRNA sequence mediated by a single guide RNA (SO:0000602)."))
(assert (= (name SO:0000604) "editing_block"))

(defconcept SO:0000605)
(assert (subset-of SO:0000605 SO:0001411))
(assert (documentation SO:0000605 "A region containing or overlapping no genes that is bounded on either side by a gene, or bounded by a gene and the end of the chromosome."))
(assert (= (name SO:0000605) "intergenic_region"))

(defconcept SO:0000606)
(assert (subset-of SO:0000606 SO:0000579))
(assert (documentation SO:0000606 "Edited mRNA sequence mediated by two or more overlapping guide RNAs (SO:0000602)."))
(assert (= (name SO:0000606) "editing_domain"))

(defconcept SO:0000607)
(assert (subset-of SO:0000607 SO:0000579))
(assert (documentation SO:0000607 "The region of an edited transcript that will not be edited."))
(assert (= (name SO:0000607) "unedited_region"))

(defconcept SO:0000608)
(assert (subset-of SO:0000608 SO:0000578))
(assert (= (name SO:0000608) "H_ACA_box_snoRNA_encoding"))

(defconcept SO:0000609)
(assert (adjacent_to SO:0000609 SO:0000602))
(assert (subset-of SO:0000609 SO:0001411))
(assert (documentation SO:0000609 "The string of non-encoded U's at the 3' end of a guide RNA (SO:0000602)."))
(assert (= (name SO:0000609) "oligo_U_tail"))

(defconcept SO:0000610)
(assert (adjacent_to SO:0000610 SO:0000234))
(assert (subset-of SO:0000610 SO:0001411))
(assert (documentation SO:0000610 "Sequence of about 100 nucleotides of A added to the 3' end of most eukaryotic mRNAs."))
(assert (= (name SO:0000610) "polyA_sequence"))

(defconcept SO:0000611)
(assert (subset-of SO:0000611 SO:0000841))
(assert (documentation SO:0000611 "A pyrimidine rich sequence near the 3' end of an intron to which the 5'end becomes covalently bound during nuclear splicing. The resulting structure resembles a lariat."))
(assert (= (name SO:0000611) "branch_site"))

(defconcept SO:0000612)
(assert (subset-of SO:0000612 SO:0000841))
(assert (documentation SO:0000612 "The polypyrimidine tract is one of the cis-acting sequence elements directing intron removal in pre-mRNA splicing."))
(assert (= (name SO:0000612) "polypyrimidine_tract"))

(defconcept SO:0000613)
(assert (subset-of SO:0000613 SO:0001203))
(assert (subset-of SO:0000613 SO:0000752))
(assert (documentation SO:0000613 "A DNA sequence to which bacterial RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0000613) "bacterial_RNApol_promoter"))

(defconcept SO:0000614)
(assert (subset-of SO:0000614 SO:0000752))
(assert (subset-of SO:0000614 SO:0000141))
(assert (documentation SO:0000614 "A terminator signal for bacterial transcription."))
(assert (= (name SO:0000614) "bacterial_terminator"))

(defconcept SO:0000615)
(assert (subset-of SO:0000615 SO:0000951))
(assert (documentation SO:0000615 "A terminator signal for RNA polymerase III transcription."))
(assert (= (name SO:0000615) "terminator_of_type_2_RNApol_III_promoter"))

(defconcept SO:0000616)
(assert (subset-of SO:0000616 SO:0000835))
(assert (documentation SO:0000616 "The base where transcription ends."))
(assert (= (name SO:0000616) "transcription_end_site"))

(defconcept SO:0000617)
(assert (subset-of SO:0000617 SO:0000171))
(assert (= (name SO:0000617) "RNApol_III_promoter_type_1"))

(defconcept SO:0000618)
(assert (subset-of SO:0000618 SO:0000171))
(assert (= (name SO:0000618) "RNApol_III_promoter_type_2"))

(defconcept SO:0000619)
(assert (part_of SO:0000619 SO:0000618))
(assert (subset-of SO:0000619 SO:0000235))
(assert (documentation SO:0000619 "A variably distant linear promoter region recognized by TFIIIC, with consensus sequence TGGCnnAGTGG."))
(assert (= (name SO:0000619) "A_box"))

(defconcept SO:0000620)
(assert (part_of SO:0000620 SO:0000618))
(assert (subset-of SO:0000620 SO:0000235))
(assert (documentation SO:0000620 "A variably distant linear promoter region recognized by TFIIIC, with consensus sequence AGGTTCCAnnCC."))
(assert (= (name SO:0000620) "B_box"))

(defconcept SO:0000621)
(assert (subset-of SO:0000621 SO:0000171))
(assert (= (name SO:0000621) "RNApol_III_promoter_type_3"))

(defconcept SO:0000622)
(assert (part_of SO:0000622 SO:0000617))
(assert (subset-of SO:0000622 SO:0000235))
(assert (documentation SO:0000622 "An RNA polymerase III type 1 promoter with consensus sequence CAnnCCn."))
(assert (= (name SO:0000622) "C_box"))

(defconcept SO:0000623)
(assert (subset-of SO:0000623 SO:0000011))
(assert (= (name SO:0000623) "snRNA_encoding"))

(defconcept SO:0000624)
(assert (subset-of SO:0000624 SO:0000628))
(assert (documentation SO:0000624 "A specific structure at the end of a linear chromosome, required for the integrity and maintenance of the end."))
(assert (= (name SO:0000624) "telomere"))

(defconcept SO:0000625)
(assert (subset-of SO:0000625 SO:0000727))
(assert (documentation SO:0000625 "A regulatory region which upon binding of transcription factors, suppress the transcription of the gene or genes they control."))
(assert (= (name SO:0000625) "silencer"))

(defconcept SO:0000626)
(assert (subset-of SO:0000626 SO:0000830))
(assert (= (name SO:0000626) "chromosomal_regulatory_element"))

(defconcept SO:0000627)
(assert (subset-of SO:0000627 SO:0001055))
(assert (documentation SO:0000627 "A transcriptional cis regulatory region that when located between a CM and a gene's promoter prevents the CRM from modulating that genes expression."))
(assert (= (name SO:0000627) "insulator"))

(defconcept SO:0000628)
(assert (subset-of SO:0000628 SO:0000830))
(assert (= (name SO:0000628) "chromosomal_structural_element"))

(defconcept SO:0000629)
(assert (part_of SO:0000629 SO:0000204))
(assert (subset-of SO:0000629 SO:0000836))
(assert (= (name SO:0000629) "five_prime_open_reading_frame"))

(defconcept SO:0000630)
(assert (part_of SO:0000630 SO:0000203))
(assert (subset-of SO:0000630 SO:0000837))
(assert (documentation SO:0000630 "A start codon upstream of the ORF."))
(assert (= (name SO:0000630) "upstream_AUG_codon"))

(defconcept SO:0000631)
(assert (subset-of SO:0000631 SO:0000185))
(assert (subset-of SO:0000631 SO:0000078))
(assert (documentation SO:0000631 "A primary transcript encoding for more than one gene product."))
(assert (= (name SO:0000631) "polycistronic_primary_transcript"))

(defconcept SO:0000632)
(assert (subset-of SO:0000632 SO:0000665))
(assert (subset-of SO:0000632 SO:0000185))
(assert (documentation SO:0000632 "A primary transcript encoding for one gene product."))
(assert (= (name SO:0000632) "monocistronic_primary_transcript"))

(defconcept SO:0000633)
(assert (subset-of SO:0000633 SO:0000665))
(assert (subset-of SO:0000633 SO:0000234))
(assert (documentation SO:0000633 "An mRNA with either a single protein product, or for which the regions encoding all its protein products overlap."))
(assert (= (name SO:0000633) "monocistronic_mRNA"))

(defconcept SO:0000634)
(assert (subset-of SO:0000634 SO:0000234))
(assert (subset-of SO:0000634 SO:0000078))
(assert (documentation SO:0000634 "An mRNA that encodes multiple proteins from at least two non-overlapping regions."))
(assert (= (name SO:0000634) "polycistronic_mRNA"))

(defconcept SO:0000635)
(assert (subset-of SO:0000635 SO:0000185))
(assert (documentation SO:0000635 "A primary transcript that donates the spliced leader to other mRNA."))
(assert (= (name SO:0000635) "mini_exon_donor_RNA"))

(defconcept SO:0000636)
(assert (part_of SO:0000636 SO:0000635))
(assert (subset-of SO:0000636 SO:0000835))
(assert (= (name SO:0000636) "spliced_leader_RNA"))

(defconcept SO:0000637)
(assert (subset-of SO:0000637 SO:0000804))
(assert (subset-of SO:0000637 SO:0000155))
(assert (documentation SO:0000637 "A plasmid that is engineered."))
(assert (= (name SO:0000637) "engineered_plasmid"))

(defconcept SO:0000638)
(assert (subset-of SO:0000638 SO:0000838))
(assert (documentation SO:0000638 "Part of an rRNA transcription unit that is transcribed but discarded during maturation, not giving rise to any part of rRNA."))
(assert (= (name SO:0000638) "transcribed_spacer_region"))

(defconcept SO:0000639)
(assert (subset-of SO:0000639 SO:0000638))
(assert (documentation SO:0000639 "Non-coding regions of DNA sequence that separate genes coding for the 28S, 5.8S, and 18S ribosomal RNAs."))
(assert (= (name SO:0000639) "internal_transcribed_spacer_region"))

(defconcept SO:0000640)
(assert (subset-of SO:0000640 SO:0000638))
(assert (documentation SO:0000640 "Non-coding regions of DNA that precede the sequence that codes for the ribosomal RNA."))
(assert (= (name SO:0000640) "external_transcribed_spacer_region"))

(defconcept SO:0000641)
(assert (subset-of SO:0000641 SO:0000289))
(assert (= (name SO:0000641) "tetranucleotide_repeat_microsatellite_feature"))

(defconcept SO:0000642)
(assert (subset-of SO:0000642 SO:0000011))
(assert (= (name SO:0000642) "SRP_RNA_encoding"))

(defconcept SO:0000643)
(assert (subset-of SO:0000643 SO:0000005))
(assert (documentation SO:0000643 "A repeat region containing tandemly repeated sequences having a unit length of 10 to 40 bp."))
(assert (= (name SO:0000643) "minisatellite"))

(defconcept SO:0000644)
(assert (derives_from SO:0000644 SO:0000645))
(assert (subset-of SO:0000644 SO:0000655))
(assert (documentation SO:0000644 "Antisense RNA is RNA that is transcribed from the coding, rather than the template, strand of DNA. It is therefore complementary to mRNA."))
(assert (= (name SO:0000644) "antisense_RNA"))

(defconcept SO:0000645)
(assert (subset-of SO:0000645 SO:0000185))
(assert (documentation SO:0000645 "The reverse complement of the primary transcript."))
(assert (= (name SO:0000645) "antisense_primary_transcript"))

(defconcept SO:0000646)
(assert (subset-of SO:0000646 SO:0000655))
(assert (documentation SO:0000646 "A small RNA molecule that is the product of a longer exogenous or endogenous dsRNA, which is either a bimolecular duplex or very long hairpin, processed (via the Dicer pathway) such that numerous siRNAs accumulate from both strands of the dsRNA. SRNAs trigger the cleavage of their target molecules."))
(assert (= (name SO:0000646) "siRNA"))

(defconcept SO:0000647)
(assert (subset-of SO:0000647 SO:0000483))
(assert (documentation SO:0000647 "A primary transcript encoding a micro RNA."))
(assert (= (name SO:0000647) "miRNA_primary_transcript"))

(defconcept SO:0000648)
(assert (subset-of SO:0000648 SO:0000647))
(assert (documentation SO:0000648 "A primary transcript encoding a small temporal mRNA (SO:0000649)."))
(assert (= (name SO:0000648) "stRNA_primary_transcript"))

(defconcept SO:0000649)
(assert (subset-of SO:0000649 SO:0000655))
(assert (documentation SO:0000649 "Non-coding RNAs of about 21 nucleotides in length that regulate temporal development; first discovered in C. elegans."))
(assert (= (name SO:0000649) "stRNA"))

(defconcept SO:0000650)
(assert (derives_from SO:0000650 SO:0000255))
(assert (subset-of SO:0000650 SO:0000252))
(assert (documentation SO:0000650 "Ribosomal RNA transcript that structures the small subunit of the ribosome."))
(assert (= (name SO:0000650) "small_subunit_rRNA"))

(defconcept SO:0000651)
(assert (derives_from SO:0000651 SO:0000325))
(assert (subset-of SO:0000651 SO:0000252))
(assert (documentation SO:0000651 "Ribosomal RNA transcript that structures the large subunit of the ribosome."))
(assert (= (name SO:0000651) "large_subunit_rRNA"))

(defconcept SO:0000652)
(assert (subset-of SO:0000652 SO:0000651))
(assert (documentation SO:0000652 "5S ribosomal RNA (5S rRNA) is a component of the large ribosomal subunit in both prokaryotes and eukaryotes. In eukaryotes, it is synthesised by RNA polymerase III (the other eukaryotic rRNAs are cleaved from a 45S precursor synthesised by RNA polymerase I). In Xenopus oocytes, it has been shown that fingers 4-7 of the nine-zinc finger transcription factor TFIIIA can bind to the central region of 5S RNA. Thus, in addition to positively regulating 5S rRNA transcription, TFIIIA also stabilizes 5S rRNA until it is required for transcription."))
(assert (= (name SO:0000652) "rRNA_5S"))

(defconcept SO:0000653)
(assert (subset-of SO:0000653 SO:0000651))
(assert (documentation SO:0000653 "A component of the large ribosomal subunit."))
(assert (= (name SO:0000653) "rRNA_28S"))

(defconcept SO:0000654)
(assert (subset-of SO:0000654 SO:0000089))
(assert (documentation SO:0000654 "A mitochondrial gene located in a maxicircle."))
(assert (= (name SO:0000654) "maxicircle_gene"))

(defconcept SO:0000655)
(assert (subset-of SO:0000655 SO:0000233))
(assert (documentation SO:0000655 "An RNA transcript that does not encode for a protein rather the RNA molecule is the gene product."))
(assert (= (name SO:0000655) "ncRNA"))

(defconcept SO:0000656)
(assert (subset-of SO:0000656 SO:0000011))
(assert (= (name SO:0000656) "stRNA_encoding"))

(defconcept SO:0000657)
(assert (has_part SO:0000657 SO:0000726))
(assert (subset-of SO:0000657 SO:0001412))
(assert (documentation SO:0000657 "A region of sequence containing one or more repeat units."))
(assert (= (name SO:0000657) "repeat_region"))

(defconcept SO:0000658)
(assert (subset-of SO:0000658 SO:0000657))
(assert (documentation SO:0000658 "A repeat that is located at dispersed sites in the genome."))
(assert (= (name SO:0000658) "dispersed_repeat"))

(defconcept SO:0000659)
(assert (subset-of SO:0000659 SO:0000011))
(assert (= (name SO:0000659) "tmRNA_encoding"))

(defconcept SO:0000660)
(assert (= (name SO:0000660) "DNA_invertase_target_sequence"))

(defconcept SO:0000661)
(assert (= (name SO:0000661) "intron_attribute"))

(defconcept SO:0000662)
(assert (subset-of SO:0000662 SO:0000188))
(assert (documentation SO:0000662 "An intron which is spliced by the spliceosome."))
(assert (= (name SO:0000662) "spliceosomal_intron"))

(defconcept SO:0000663)
(assert (subset-of SO:0000663 SO:0000011))
(assert (= (name SO:0000663) "tRNA_encoding"))

(defconcept SO:0000664)
(assert (subset-of SO:0000664 SO:0000830))
(assert (= (name SO:0000664) "introgressed_chromosome_region"))

(defconcept SO:0000665)
(assert (subset-of SO:0000665 SO:0000673))
(assert (documentation SO:0000665 "A transcript that is monocistronic."))
(assert (= (name SO:0000665) "monocistronic_transcript"))

(defconcept SO:0000666)
(assert (subset-of SO:0000666 SO:0001037))
(assert (subset-of SO:0000666 SO:0000188))
(assert (documentation SO:0000666 "An intron (mitochondrial, chloroplast, nuclear or prokaryotic) that encodes a double strand sequence specific endonuclease allowing for mobility."))
(assert (= (name SO:0000666) "mobile_intron"))

(defconcept SO:0000667)
(assert (subset-of SO:0000667 SO:0001411))
(assert (subset-of SO:0000667 SO:0001059))
(assert (documentation SO:0000667 "The sequence of one or more nucleotides added between two adjacent nucleotides in the sequence."))
(assert (= (name SO:0000667) "insertion"))

(defconcept SO:0000668)
(assert (subset-of SO:0000668 SO:0000102))
(assert (documentation SO:0000668 "A match against an EST sequence."))
(assert (= (name SO:0000668) "EST_match"))

(defconcept SO:0000669)
(assert (subset-of SO:0000669 SO:0000298))
(assert (= (name SO:0000669) "sequence_rearrangement_feature"))

(defconcept SO:0000670)
(assert (subset-of SO:0000670 SO:0000669))
(assert (documentation SO:0000670 "A sequence within the micronuclear DNA of ciliates at which chromosome breakage and telomere addition occurs during nuclear differentiation."))
(assert (= (name SO:0000670) "chromosome_breakage_sequence"))

(defconcept SO:0000671)
(assert (subset-of SO:0000671 SO:0000669))
(assert (documentation SO:0000671 "A sequence eliminated from the genome of ciliates during nuclear differentiation."))
(assert (= (name SO:0000671) "internal_eliminated_sequence"))

(defconcept SO:0000672)
(assert (subset-of SO:0000672 SO:0000669))
(assert (documentation SO:0000672 "A sequence that is conserved, although rearranged relative to the micronucleus, in the macronucleus of a ciliate genome."))
(assert (= (name SO:0000672) "macronucleus_destined_segment"))

(defconcept SO:0000673)
(assert (subset-of SO:0000673 SO:0000831))
(assert (documentation SO:0000673 "An RNA synthesized on a DNA or RNA template by an RNA polymerase."))
(assert (= (name SO:0000673) "transcript"))

(defconcept SO:0000674)
(assert (documentation SO:0000674 "A splice site where the donor and acceptor sites differ from the canonical form."))
(assert (= (name SO:0000674) "non_canonical_splice_site"))

(defconcept SO:0000675)
(assert (documentation SO:0000675 "The major class of splice site with dinucleotides GT and AG for donor and acceptor sites, respectively."))
(assert (= (name SO:0000675) "canonical_splice_site"))

(defconcept SO:0000676)
(assert (subset-of SO:0000676 SO:0000164))
(assert (documentation SO:0000676 "The canonical 3' splice site has the sequence \\\"AG\\\"."))
(assert (= (name SO:0000676) "canonical_three_prime_splice_site"))

(defconcept SO:0000677)
(assert (subset-of SO:0000677 SO:0000163))
(assert (documentation SO:0000677 "The canonical 5' splice site has the sequence \\\"GT\\\"."))
(assert (= (name SO:0000677) "canonical_five_prime_splice_site"))

(defconcept SO:0000678)
(assert (subset-of SO:0000678 SO:0000164))
(assert (documentation SO:0000678 "A 3' splice site that does not have the sequence \\\"AG\\\"."))
(assert (= (name SO:0000678) "non_canonical_three_prime_splice_site"))

(defconcept SO:0000679)
(assert (subset-of SO:0000679 SO:0000163))
(assert (documentation SO:0000679 "A 5' splice site which does not have the sequence \\\"GT\\\"."))
(assert (= (name SO:0000679) "non_canonical_five_prime_splice_site"))

(defconcept SO:0000680)
(assert (subset-of SO:0000680 SO:0000318))
(assert (documentation SO:0000680 "A start codon that is not the usual AUG sequence."))
(assert (= (name SO:0000680) "non_canonical_start_codon"))

(defconcept SO:0000681)
(assert (subset-of SO:0000681 SO:0000673))
(assert (documentation SO:0000681 "A transcript that has been processed \\\"incorrectly\\\", for example by the failure of splicing of one or more exons."))
(assert (= (name SO:0000681) "aberrant_processed_transcript"))

(defconcept SO:0000682)
(assert (= (name SO:0000682) "splicing_feature"))

(defconcept SO:0000683)
(assert (subset-of SO:0000683 SO:0000344))
(assert (documentation SO:0000683 "Exonic splicing enhancers (ESEs) facilitate exon definition by assisting in the recruitment of splicing factors to the adjacent intron."))
(assert (= (name SO:0000683) "exonic_splice_enhancer"))

(defconcept SO:0000684)
(assert (subset-of SO:0000684 SO:0000059))
(assert (documentation SO:0000684 "A region of nucleotide sequence targeted by a nuclease enzyme."))
(assert (= (name SO:0000684) "nuclease_sensitive_site"))

(defconcept SO:0000685)
(assert (subset-of SO:0000685 SO:0000322))
(assert (= (name SO:0000685) "DNAseI_hypersensitive_site"))

(defconcept SO:0000686)
(assert (subset-of SO:0000686 SO:1000044))
(assert (documentation SO:0000686 "A chromosomal translocation whereby the chromosomes carrying non-homologous centromeres may be recovered independently. These chromosomes are described as translocation elements. This occurs for some translocations, particularly but not exclusively, reciprocal translocations."))
(assert (= (name SO:0000686) "translocation_element"))

(defconcept SO:0000687)
(assert (subset-of SO:0000687 SO:0000699))
(assert (documentation SO:0000687 "The space between two bases in a sequence which marks the position where a deletion has occurred."))
(assert (= (name SO:0000687) "deletion_junction"))

(defconcept SO:0000688)
(assert (subset-of SO:0000688 SO:0000353))
(assert (documentation SO:0000688 "A set of subregions selected from sequence contigs which when concatenated form a nonredundant linear sequence."))
(assert (= (name SO:0000688) "golden_path"))

(defconcept SO:0000689)
(assert (subset-of SO:0000689 SO:0000102))
(assert (documentation SO:0000689 "A match against cDNA sequence."))
(assert (= (name SO:0000689) "cDNA_match"))

(defconcept SO:0000690)
(assert (subset-of SO:0000690 SO:0000704))
(assert (documentation SO:0000690 "A gene that encodes a polycistronic transcript."))
(assert (= (name SO:0000690) "gene_with_polycistronic_transcript"))

(defconcept SO:0000691)
(assert (subset-of SO:0000691 SO:0100011))
(assert (documentation SO:0000691 "The initiator methionine that has been cleaved from a mature polypeptide sequence."))
(assert (= (name SO:0000691) "cleaved_initiator_methionine"))

(defconcept SO:0000692)
(assert (subset-of SO:0000692 SO:0000690))
(assert (documentation SO:0000692 "A gene that encodes a dicistronic transcript."))
(assert (= (name SO:0000692) "gene_with_dicistronic_transcript"))

(defconcept SO:0000693)
(assert (subset-of SO:0000693 SO:0001217))
(assert (documentation SO:0000693 "A gene that encodes an mRNA that is recoded."))
(assert (= (name SO:0000693) "gene_with_recoded_mRNA"))

(defconcept SO:0000694)
(assert (subset-of SO:0000694 SO:0001483))
(assert (documentation SO:0000694 "SNPs are single base pair positions in genomic DNA at which different sequence alternatives exist in normal individuals in some population(s), wherein the least frequent variant has an abundance of 1% or greater."))
(assert (= (name SO:0000694) "SNP"))

(defconcept SO:0000695)
(assert (subset-of SO:0000695 SO:0001409))
(assert (documentation SO:0000695 "A sequence used in experiment."))
(assert (= (name SO:0000695) "reagent"))

(defconcept SO:0000696)
(assert (subset-of SO:0000696 SO:0000695))
(assert (documentation SO:0000696 "A short oligonucleotide sequence, of length on the order of 10's of bases; either single or double stranded."))
(assert (= (name SO:0000696) "oligo"))

(defconcept SO:0000697)
(assert (subset-of SO:0000697 SO:0000693))
(assert (documentation SO:0000697 "A gene that encodes a transcript with stop codon readthrough."))
(assert (= (name SO:0000697) "gene_with_stop_codon_read_through"))

(defconcept SO:0000698)
(assert (subset-of SO:0000698 SO:0000697))
(assert (documentation SO:0000698 "A gene encoding an mRNA that has the stop codon redefined as pyrrolysine."))
(assert (= (name SO:0000698) "gene_with_stop_codon_redefined_as_pyrrolysine"))

(defconcept SO:0000699)
(assert (subset-of SO:0000699 SO:0000110))
(assert (documentation SO:0000699 "A sequence_feature with an extent of zero."))
(assert (= (name SO:0000699) "junction"))

(defconcept SO:0000700)
(assert (subset-of SO:0000700 SO:0001410))
(assert (documentation SO:0000700 "A comment about the sequence."))
(assert (= (name SO:0000700) "remark"))

(defconcept SO:0000701)
(assert (subset-of SO:0000701 SO:0000413))
(assert (documentation SO:0000701 "A region of sequence where the validity of the base calling is questionable."))
(assert (= (name SO:0000701) "possible_base_call_error"))

(defconcept SO:0000702)
(assert (subset-of SO:0000702 SO:0000413))
(assert (documentation SO:0000702 "A region of sequence where there may have been an error in the assembly."))
(assert (= (name SO:0000702) "possible_assembly_error"))

(defconcept SO:0000703)
(assert (subset-of SO:0000703 SO:0000700))
(assert (documentation SO:0000703 "A region of sequence implicated in an experimental result."))
(assert (= (name SO:0000703) "experimental_result_region"))

(defconcept SO:0000704)
(assert (member_of SO:0000704 SO:0005855))
(assert (subset-of SO:0000704 SO:0001411))
(assert (documentation SO:0000704 "A region (or regions) that includes all of the sequence elements necessary to encode a functional transcript. A gene may include regulatory regions, transcribed regions and/or other functional sequence regions."))
(assert (= (name SO:0000704) "gene"))

(defconcept SO:0000705)
(assert (subset-of SO:0000705 SO:0000657))
(assert (documentation SO:0000705 "Two or more adjcent copies of a region (of length greater than 1)."))
(assert (= (name SO:0000705) "tandem_repeat"))

(defconcept SO:0000706)
(assert (subset-of SO:0000706 SO:0001420))
(assert (documentation SO:0000706 "The 3' splice site of the acceptor primary transcript."))
(assert (= (name SO:0000706) "trans_splice_acceptor_site"))

(defconcept SO:0000707)
(assert (subset-of SO:0000707 SO:0001420))
(assert (documentation SO:0000707 "The 5' five prime splice site region of the donor RNA."))
(assert (= (name SO:0000707) "trans_splice_donor_site"))

(defconcept SO:0000708)
(assert (subset-of SO:0000708 SO:0000706))
(assert (= (name SO:0000708) "SL1_acceptor_site"))

(defconcept SO:0000709)
(assert (subset-of SO:0000709 SO:0000706))
(assert (= (name SO:0000709) "SL2_acceptor_site"))

(defconcept SO:0000710)
(assert (subset-of SO:0000710 SO:0000697))
(assert (documentation SO:0000710 "A gene encoding an mRNA that has the stop codon redefined as selenocysteine."))
(assert (= (name SO:0000710) "gene_with_stop_codon_redefined_as_selenocysteine"))

(defconcept SO:0000711)
(assert (subset-of SO:0000711 SO:0000693))
(assert (documentation SO:0000711 "A gene with mRNA recoded by translational bypass."))
(assert (= (name SO:0000711) "gene_with_mRNA_recoded_by_translational_bypass"))

(defconcept SO:0000712)
(assert (subset-of SO:0000712 SO:0000693))
(assert (documentation SO:0000712 "A gene encoding a transcript that has a translational frameshift."))
(assert (= (name SO:0000712) "gene_with_transcript_with_translational_frameshift"))

(defconcept SO:0000713)
(assert (subset-of SO:0000713 SO:0000714))
(assert (documentation SO:0000713 "A motif that is active in the DNA form of the sequence."))
(assert (= (name SO:0000713) "DNA_motif"))

(defconcept SO:0000714)
(assert (subset-of SO:0000714 SO:0001411))
(assert (documentation SO:0000714 "A region of nucleotide sequence corresponding to a known motif."))
(assert (= (name SO:0000714) "nucleotide_motif"))

(defconcept SO:0000715)
(assert (subset-of SO:0000715 SO:0000714))
(assert (documentation SO:0000715 "A motif that is active in RNA sequence."))
(assert (= (name SO:0000715) "RNA_motif"))

(defconcept SO:0000716)
(assert (subset-of SO:0000716 SO:0000634))
(assert (subset-of SO:0000716 SO:0000079))
(assert (documentation SO:0000716 "An mRNA that has the quality dicistronic."))
(assert (= (name SO:0000716) "dicistronic_mRNA"))

(defconcept SO:0000717)
(assert (subset-of SO:0000717 SO:0001410))
(assert (documentation SO:0000717 "A nucleic acid sequence that when read as sequential triplets, has the potential of encoding a sequential string of amino acids. It need not contain the start or stop codon."))
(assert (= (name SO:0000717) "reading_frame"))

(defconcept SO:0000718)
(assert (subset-of SO:0000718 SO:0000717))
(assert (documentation SO:0000718 "A reading_frame that is interrupted by one or more stop codons; usually identified through intergenomic sequence comparisons."))
(assert (= (name SO:0000718) "blocked_reading_frame"))

(defconcept SO:0000719)
(assert (subset-of SO:0000719 SO:0000353))
(assert (documentation SO:0000719 "An ordered and oriented set of scaffolds based on somewhat weaker sets of inferential evidence such as one set of mate pair reads together with supporting evidence from ESTs or location of markers from SNP or microsatellite maps, or cytogenetic localization of contained markers."))
(assert (= (name SO:0000719) "ultracontig"))

(defconcept SO:0000720)
(assert (subset-of SO:0000720 SO:0000101))
(assert (documentation SO:0000720 "A transposable element that is foreign."))
(assert (= (name SO:0000720) "foreign_transposable_element"))

(defconcept SO:0000721)
(assert (subset-of SO:0000721 SO:0000692))
(assert (documentation SO:0000721 "A gene that encodes a dicistronic primary transcript."))
(assert (= (name SO:0000721) "gene_with_dicistronic_primary_transcript"))

(defconcept SO:0000722)
(assert (subset-of SO:0000722 SO:0000692))
(assert (documentation SO:0000722 "A gene that encodes a polycistronic mRNA."))
(assert (= (name SO:0000722) "gene_with_dicistronic_mRNA"))

(defconcept SO:0000723)
(assert (subset-of SO:0000723 SO:0000298))
(assert (documentation SO:0000723 "Genomic sequence removed from the genome, as a normal event, by a process of recombination."))
(assert (= (name SO:0000723) "iDNA"))

(defconcept SO:0000724)
(assert (subset-of SO:0000724 SO:0000296))
(assert (documentation SO:0000724 "A region of a DNA molecule where transfer is initiated during the process of conjugation or mobilization."))
(assert (= (name SO:0000724) "oriT"))

(defconcept SO:0000725)
(assert (subset-of SO:0000725 SO:0001527))
(assert (documentation SO:0000725 "The transit_peptide is a short region at the N-terminus of the peptide that directs the protein to an organelle (chloroplast, mitochondrion, microbody or cyanelle)."))
(assert (= (name SO:0000725) "transit_peptide"))

(defconcept SO:0000726)
(assert (subset-of SO:0000726 SO:0001412))
(assert (documentation SO:0000726 "The simplest repeated component of a repeat region. A single repeat."))
(assert (= (name SO:0000726) "repeat_unit"))

(defconcept SO:0000727)
(assert (subset-of SO:0000727 SO:0001055))
(assert (documentation SO:0000727 "A regulatory_region where more than 1 TF_binding_site together are regulatorily active."))
(assert (= (name SO:0000727) "CRM"))

(defconcept SO:0000728)
(assert (subset-of SO:0000728 SO:0100011))
(assert (documentation SO:0000728 "A region of a peptide that is able to excise itself and rejoin the remaining portions with a peptide bond."))
(assert (= (name SO:0000728) "intein"))

(defconcept SO:0000729)
(assert (subset-of SO:0000729 SO:0000010))
(assert (documentation SO:0000729 "An attribute of protein-coding genes where the initial protein product contains an intein."))
(assert (= (name SO:0000729) "intein_containing"))

(defconcept SO:0000730)
(assert (part_of SO:0000730 SO:0000353))
(assert (subset-of SO:0000730 SO:0000143))
(assert (documentation SO:0000730 "A gap in the sequence of known length. The unknown bases are filled in with N's."))
(assert (= (name SO:0000730) "gap"))

(defconcept SO:0000731)
(assert (subset-of SO:0000731 SO:0000905))
(assert (documentation SO:0000731 "An attribute to describe a feature that is incomplete."))
(assert (= (name SO:0000731) "fragmentary"))

(defconcept SO:0000732)
(assert (subset-of SO:0000732 SO:0000905))
(assert (documentation SO:0000732 "An attribute describing an unverified region."))
(assert (= (name SO:0000732) "predicted"))

(defconcept SO:0000733)
(assert (subset-of SO:0000733 SO:0000400))
(assert (documentation SO:0000733 "An attribute describing a located_sequence_feature."))
(assert (= (name SO:0000733) "feature_attribute"))

(defconcept SO:0000734)
(assert (subset-of SO:0000734 SO:0000234))
(assert (documentation SO:0000734 "An exemplar is a representative cDNA sequence for each gene. The exemplar approach is a method that usually involves some initial clustering into gene groups and the subsequent selection of a representative from each gene group."))
(assert (= (name SO:0000734) "exemplar_mRNA"))

(defconcept SO:0000735)
(assert (subset-of SO:0000735 SO:0000400))
(assert (= (name SO:0000735) "sequence_location"))

(defconcept SO:0000736)
(assert (subset-of SO:0000736 SO:0000735))
(assert (= (name SO:0000736) "organelle_sequence"))

(defconcept SO:0000737)
(assert (subset-of SO:0000737 SO:0000736))
(assert (= (name SO:0000737) "mitochondrial_sequence"))

(defconcept SO:0000738)
(assert (subset-of SO:0000738 SO:0000736))
(assert (= (name SO:0000738) "nuclear_sequence"))

(defconcept SO:0000739)
(assert (subset-of SO:0000739 SO:0000736))
(assert (= (name SO:0000739) "nucleomorphic_sequence"))

(defconcept SO:0000740)
(assert (subset-of SO:0000740 SO:0000736))
(assert (= (name SO:0000740) "plastid_sequence"))

(defconcept SO:0000741)
(assert (subset-of SO:0000741 SO:0001260))
(assert (subset-of SO:0000741 SO:0001026))
(assert (documentation SO:0000741 "A kinetoplast is an interlocked network of thousands of minicircles and tens of maxi circles, located near the base of the flagellum of some protozoan species."))
(assert (= (name SO:0000741) "kinetoplast"))

(defconcept SO:0000742)
(assert (part_of SO:0000742 SO:0000741))
(assert (subset-of SO:0000742 SO:0001235))
(assert (documentation SO:0000742 "A maxicircle is a replicon, part of a kinetoplast, that contains open reading frames and replicates via a rolling circle method."))
(assert (= (name SO:0000742) "maxicircle"))

(defconcept SO:0000743)
(assert (subset-of SO:0000743 SO:0000740))
(assert (= (name SO:0000743) "apicoplast_sequence"))

(defconcept SO:0000744)
(assert (subset-of SO:0000744 SO:0000740))
(assert (= (name SO:0000744) "chromoplast_sequence"))

(defconcept SO:0000745)
(assert (subset-of SO:0000745 SO:0000740))
(assert (= (name SO:0000745) "chloroplast_sequence"))

(defconcept SO:0000746)
(assert (subset-of SO:0000746 SO:0000740))
(assert (= (name SO:0000746) "cyanelle_sequence"))

(defconcept SO:0000747)
(assert (subset-of SO:0000747 SO:0000740))
(assert (= (name SO:0000747) "leucoplast_sequence"))

(defconcept SO:0000748)
(assert (subset-of SO:0000748 SO:0000740))
(assert (= (name SO:0000748) "proplastid_sequence"))

(defconcept SO:0000749)
(assert (subset-of SO:0000749 SO:0000735))
(assert (= (name SO:0000749) "plasmid_location"))

(defconcept SO:0000750)
(assert (subset-of SO:0000750 SO:0000296))
(assert (documentation SO:0000750 "An origin_of_replication that is used for the amplification of a chromosomal nucleic acid sequence."))
(assert (= (name SO:0000750) "amplification_origin"))

(defconcept SO:0000751)
(assert (subset-of SO:0000751 SO:0000735))
(assert (= (name SO:0000751) "proviral_location"))

(defconcept SO:0000752)
(assert (member_of SO:0000752 SO:0005855))
(assert (subset-of SO:0000752 SO:0005836))
(assert (= (name SO:0000752) "gene_group_regulatory_region"))

(defconcept SO:0000753)
(assert (part_of SO:0000753 SO:0000151))
(assert (subset-of SO:0000753 SO:0000695))
(assert (documentation SO:0000753 "The region of sequence that has been inserted and is being propogated by the clone."))
(assert (= (name SO:0000753) "clone_insert"))

(defconcept SO:0000754)
(assert (subset-of SO:0000754 SO:0000440))
(assert (documentation SO:0000754 "The lambda bacteriophage is the vector for the linear lambda clone. The genes involved in the lysogenic pathway are removed from the from the viral DNA. Up to 25 kb of foreign DNA can then be inserted into the lambda genome."))
(assert (= (name SO:0000754) "lambda_vector"))

(defconcept SO:0000755)
(assert (subset-of SO:0000755 SO:0000440))
(assert (= (name SO:0000755) "plasmid_vector"))

(defconcept SO:0000756)
(assert (subset-of SO:0000756 SO:0000352))
(assert (documentation SO:0000756 "DNA synthesized by reverse transcriptase using RNA as a template."))
(assert (= (name SO:0000756) "cDNA"))

(defconcept SO:0000757)
(assert (subset-of SO:0000757 SO:0000756))
(assert (= (name SO:0000757) "single_stranded_cDNA"))

(defconcept SO:0000758)
(assert (subset-of SO:0000758 SO:0000756))
(assert (= (name SO:0000758) "double_stranded_cDNA"))

(defconcept SO:0000759)
(assert (= (name SO:0000759) "plasmid_clone"))

(defconcept SO:0000760)
(assert (= (name SO:0000760) "YAC_clone"))

(defconcept SO:0000761)
(assert (= (name SO:0000761) "phagemid_clone"))

(defconcept SO:0000762)
(assert (= (name SO:0000762) "PAC_clone"))

(defconcept SO:0000763)
(assert (= (name SO:0000763) "fosmid_clone"))

(defconcept SO:0000764)
(assert (= (name SO:0000764) "BAC_clone"))

(defconcept SO:0000765)
(assert (= (name SO:0000765) "cosmid_clone"))

(defconcept SO:0000766)
(assert (derives_from SO:0000766 SO:0001178))
(assert (subset-of SO:0000766 SO:0000253))
(assert (documentation SO:0000766 "A tRNA sequence that has a pyrrolysine anticodon, and a 3' pyrrolysine binding region."))
(assert (= (name SO:0000766) "pyrrolysyl_tRNA"))

(defconcept SO:0000767)
(assert (= (name SO:0000767) "clone_insert_start"))

(defconcept SO:0000768)
(assert (subset-of SO:0000768 SO:0000155))
(assert (documentation SO:0000768 "A plasmid that may integrate with a chromosome."))
(assert (= (name SO:0000768) "episome"))

(defconcept SO:0000769)
(assert (subset-of SO:0000769 SO:0000847))
(assert (documentation SO:0000769 "The region of a two-piece tmRNA that bears the reading frame encoding the proteolysis tag. The tmRNA gene undergoes circular permutation in some groups of bacteria. Processing of the transcripts from such a gene leaves the mature tmRNA in two pieces, base-paired together."))
(assert (= (name SO:0000769) "tmRNA_coding_piece"))

(defconcept SO:0000770)
(assert (subset-of SO:0000770 SO:0000847))
(assert (documentation SO:0000770 "The acceptor region of a two-piece tmRNA that when mature is charged at its 3' end with alanine. The tmRNA gene undergoes circular permutation in some groups of bacteria; processing of the transcripts from such a gene leaves the mature tmRNA in two pieces, base-paired together."))
(assert (= (name SO:0000770) "tmRNA_acceptor_piece"))

(defconcept SO:0000771)
(assert (subset-of SO:0000771 SO:0001411))
(assert (documentation SO:0000771 "A quantitative trait locus (QTL) is a polymorphic locus which contains alleles that differentially affect the expression of a continuously distributed phenotypic trait. Usually it is a marker described by statistical association to quantitative variation in the particular phenotypic trait that is thought to be controlled by the cumulative action of alleles at multiple loci."))
(assert (= (name SO:0000771) "QTL"))

(defconcept SO:0000772)
(assert (subset-of SO:0000772 SO:0001039))
(assert (documentation SO:0000772 "A genomic island is an integrated mobile genetic element, characterized by size (over 10 Kb). It that has features that suggest a foreign origin. These can include nucleotide distribution (oligonucleotides signature, CG content etc.) that differs from the bulk of the chromosome and/or genes suggesting DNA mobility."))
(assert (= (name SO:0000772) "genomic_island"))

(defconcept SO:0000773)
(assert (subset-of SO:0000773 SO:0000772))
(assert (documentation SO:0000773 "Mobile genetic elements that contribute to rapid changes in virulence potential. They are present on the genomes of pathogenic strains but absent from the genomes of non pathogenic members of the same or related species."))
(assert (= (name SO:0000773) "pathogenic_island"))

(defconcept SO:0000774)
(assert (subset-of SO:0000774 SO:0000772))
(assert (documentation SO:0000774 "A transmissible element containing genes involved in metabolism, analogous to the pathogenicity islands of gram negative bacteria."))
(assert (= (name SO:0000774) "metabolic_island"))

(defconcept SO:0000775)
(assert (subset-of SO:0000775 SO:0000772))
(assert (documentation SO:0000775 "An adaptive island is a genomic island that provides an adaptive advantage to the host."))
(assert (= (name SO:0000775) "adaptive_island"))

(defconcept SO:0000776)
(assert (subset-of SO:0000776 SO:0000772))
(assert (documentation SO:0000776 "A transmissible element containing genes involved in symbiosis, analogous to the pathogenicity islands of gram negative bacteria."))
(assert (= (name SO:0000776) "symbiosis_island"))

(defconcept SO:0000777)
(assert (subset-of SO:0000777 SO:0000462))
(assert (documentation SO:0000777 "A non functional descendent of an rRNA."))
(assert (= (name SO:0000777) "pseudogenic_rRNA"))

(defconcept SO:0000778)
(assert (subset-of SO:0000778 SO:0000462))
(assert (documentation SO:0000778 "A non functional descendent of a tRNA."))
(assert (= (name SO:0000778) "pseudogenic_tRNA"))

(defconcept SO:0000779)
(assert (subset-of SO:0000779 SO:0000768))
(assert (subset-of SO:0000779 SO:0000637))
(assert (documentation SO:0000779 "An episome that is engineered."))
(assert (= (name SO:0000779) "engineered_episome"))

(defconcept SO:0000780)
(assert (= (name SO:0000780) "transposable_element_attribute"))

(defconcept SO:0000781)
(assert (subset-of SO:0000781 SO:0000733))
(assert (documentation SO:0000781 "Attribute describing sequence that has been integrated with foreign sequence."))
(assert (= (name SO:0000781) "transgenic"))

(defconcept SO:0000782)
(assert (subset-of SO:0000782 SO:0000733))
(assert (documentation SO:0000782 "An attribute describing a feature that occurs in nature."))
(assert (= (name SO:0000782) "natural"))

(defconcept SO:0000783)
(assert (subset-of SO:0000783 SO:0000733))
(assert (documentation SO:0000783 "An attribute to describe a region that was modified in vitro."))
(assert (= (name SO:0000783) "engineered"))

(defconcept SO:0000784)
(assert (subset-of SO:0000784 SO:0000733))
(assert (documentation SO:0000784 "An attribute to describe a region from another species."))
(assert (= (name SO:0000784) "foreign"))

(defconcept SO:0000785)
(assert (part_of SO:0000785 SO:0000753))
(assert (subset-of SO:0000785 SO:0000695))
(assert (= (name SO:0000785) "cloned_region"))

(defconcept SO:0000786)
(assert (= (name SO:0000786) "reagent_attribute"))

(defconcept SO:0000787)
(assert (= (name SO:0000787) "clone_attribute"))

(defconcept SO:0000788)
(assert (= (name SO:0000788) "cloned"))

(defconcept SO:0000789)
(assert (subset-of SO:0000789 SO:0000905))
(assert (documentation SO:0000789 "An attribute to describe a feature that has been proven."))
(assert (= (name SO:0000789) "validated"))

(defconcept SO:0000790)
(assert (subset-of SO:0000790 SO:0000905))
(assert (documentation SO:0000790 "An attribute describing a feature that is invalidated."))
(assert (= (name SO:0000790) "invalidated"))

(defconcept SO:0000791)
(assert (= (name SO:0000791) "cloned_genomic"))

(defconcept SO:0000792)
(assert (= (name SO:0000792) "cloned_cDNA"))

(defconcept SO:0000793)
(assert (= (name SO:0000793) "engineered_DNA"))

(defconcept SO:0000794)
(assert (subset-of SO:0000794 SO:0000804))
(assert (subset-of SO:0000794 SO:0000411))
(assert (documentation SO:0000794 "A rescue region that is engineered."))
(assert (= (name SO:0000794) "engineered_rescue_region"))

(defconcept SO:0000795)
(assert (subset-of SO:0000795 SO:0000815))
(assert (documentation SO:0000795 "A mini_gene that rescues."))
(assert (= (name SO:0000795) "rescue_mini_gene"))

(defconcept SO:0000796)
(assert (subset-of SO:0000796 SO:0000101))
(assert (documentation SO:0000796 "TE that has been modified in vitro, including insertion of DNA derived from a source other than the originating TE."))
(assert (= (name SO:0000796) "transgenic_transposable_element"))

(defconcept SO:0000797)
(assert (subset-of SO:0000797 SO:0001038))
(assert (subset-of SO:0000797 SO:0000101))
(assert (documentation SO:0000797 "TE that exists (or existed) in nature."))
(assert (= (name SO:0000797) "natural_transposable_element"))

(defconcept SO:0000798)
(assert (subset-of SO:0000798 SO:0000804))
(assert (subset-of SO:0000798 SO:0000101))
(assert (documentation SO:0000798 "TE that has been modified by manipulations in vitro."))
(assert (= (name SO:0000798) "engineered_transposable_element"))

(defconcept SO:0000799)
(assert (subset-of SO:0000799 SO:0000805))
(assert (subset-of SO:0000799 SO:0000798))
(assert (subset-of SO:0000799 SO:0000720))
(assert (documentation SO:0000799 "A transposable_element that is engineered and foreign."))
(assert (= (name SO:0000799) "engineered_foreign_transposable_element"))

(defconcept SO:0000800)
(assert (subset-of SO:0000800 SO:0001504))
(assert (documentation SO:0000800 "A multi-chromosome duplication aberration generated by reassortment of other aberration components."))
(assert (= (name SO:0000800) "assortment_derived_duplication"))

(defconcept SO:0000801)
(assert (subset-of SO:0000801 SO:0001504))
(assert (documentation SO:0000801 "A multi-chromosome aberration generated by reassortment of other aberration components; presumed to have a deficiency and a duplication."))
(assert (= (name SO:0000801) "assortment_derived_deficiency_plus_duplication"))

(defconcept SO:0000802)
(assert (subset-of SO:0000802 SO:0001504))
(assert (documentation SO:0000802 "A multi-chromosome deficiency aberration generated by reassortment of other aberration components."))
(assert (= (name SO:0000802) "assortment_derived_deficiency"))

(defconcept SO:0000803)
(assert (subset-of SO:0000803 SO:0001504))
(assert (documentation SO:0000803 "A multi-chromosome aberration generated by reassortment of other aberration components; presumed to have a deficiency or a duplication."))
(assert (= (name SO:0000803) "assortment_derived_aneuploid"))

(defconcept SO:0000804)
(assert (subset-of SO:0000804 SO:0001409))
(assert (documentation SO:0000804 "A region that is engineered."))
(assert (= (name SO:0000804) "engineered_region"))

(defconcept SO:0000805)
(assert (subset-of SO:0000805 SO:0000804))
(assert (documentation SO:0000805 "A region that is engineered and foreign."))
(assert (= (name SO:0000805) "engineered_foreign_region"))

(defconcept SO:0000806)
(assert (subset-of SO:0000806 SO:0000733))
(assert (= (name SO:0000806) "fusion"))

(defconcept SO:0000807)
(assert (subset-of SO:0000807 SO:0000804))
(assert (subset-of SO:0000807 SO:0000324))
(assert (documentation SO:0000807 "A tag that is engineered."))
(assert (= (name SO:0000807) "engineered_tag"))

(defconcept SO:0000808)
(assert (subset-of SO:0000808 SO:0000317))
(assert (documentation SO:0000808 "A cDNA clone that has been validated."))
(assert (= (name SO:0000808) "validated_cDNA_clone"))

(defconcept SO:0000809)
(assert (subset-of SO:0000809 SO:0000317))
(assert (documentation SO:0000809 "A cDNA clone that is invalid."))
(assert (= (name SO:0000809) "invalidated_cDNA_clone"))

(defconcept SO:0000810)
(assert (subset-of SO:0000810 SO:0000809))
(assert (documentation SO:0000810 "A cDNA clone invalidated because it is chimeric."))
(assert (= (name SO:0000810) "chimeric_cDNA_clone"))

(defconcept SO:0000811)
(assert (subset-of SO:0000811 SO:0000809))
(assert (documentation SO:0000811 "A cDNA clone invalidated by genomic contamination."))
(assert (= (name SO:0000811) "genomically_contaminated_cDNA_clone"))

(defconcept SO:0000812)
(assert (subset-of SO:0000812 SO:0000809))
(assert (documentation SO:0000812 "A cDNA clone invalidated by polyA priming."))
(assert (= (name SO:0000812) "polyA_primed_cDNA_clone"))

(defconcept SO:0000813)
(assert (subset-of SO:0000813 SO:0000809))
(assert (documentation SO:0000813 "A cDNA invalidated clone by partial processing."))
(assert (= (name SO:0000813) "partially_processed_cDNA_clone"))

(defconcept SO:0000814)
(assert (subset-of SO:0000814 SO:0000733))
(assert (documentation SO:0000814 "An attribute describing a region's ability, when introduced to a mutant organism, to re-establish (rescue) a phenotype."))
(assert (= (name SO:0000814) "rescue"))

(defconcept SO:0000815)
(assert (subset-of SO:0000815 SO:0000236))
(assert (documentation SO:0000815 "By definition, minigenes are short open-reading frames (ORF), usually encoding approximately 9 to 20 amino acids, which are expressed in vivo (as distinct from being synthesized as peptide or protein ex vivo and subsequently injected). The in vivo synthesis confers a distinct advantage: the expressed sequences can enter both antigen presentation pathways, MHC I (inducing CD8+ T- cells, which are usually cytotoxic T-lymphocytes (CTL)) and MHC II (inducing CD4+ T-cells, usually 'T-helpers' (Th)); and can encounter B-cells, inducing antibody responses. Three main vector approaches have been used to deliver minigenes: viral vectors, bacterial vectors and plasmid DNA."))
(assert (= (name SO:0000815) "mini_gene"))

(defconcept SO:0000816)
(assert (subset-of SO:0000816 SO:0000704))
(assert (documentation SO:0000816 "A gene that rescues."))
(assert (= (name SO:0000816) "rescue_gene"))

(defconcept SO:0000817)
(assert (subset-of SO:0000817 SO:0000733))
(assert (documentation SO:0000817 "An attribute describing sequence with the genotype found in nature and/or standard laboratory stock."))
(assert (= (name SO:0000817) "wild_type"))

(defconcept SO:0000818)
(assert (subset-of SO:0000818 SO:0000816))
(assert (documentation SO:0000818 "A gene that rescues."))
(assert (= (name SO:0000818) "wild_type_rescue_gene"))

(defconcept SO:0000819)
(assert (subset-of SO:0000819 SO:0000340))
(assert (documentation SO:0000819 "A chromosome originating in a mitochondria."))
(assert (= (name SO:0000819) "mitochondrial_chromosome"))

(defconcept SO:0000820)
(assert (subset-of SO:0000820 SO:0000340))
(assert (documentation SO:0000820 "A chromosome originating in a chloroplast."))
(assert (= (name SO:0000820) "chloroplast_chromosome"))

(defconcept SO:0000821)
(assert (subset-of SO:0000821 SO:0000340))
(assert (documentation SO:0000821 "A chromosome originating in a chromoplast."))
(assert (= (name SO:0000821) "chromoplast_chromosome"))

(defconcept SO:0000822)
(assert (subset-of SO:0000822 SO:0000340))
(assert (documentation SO:0000822 "A chromosome originating in a cyanelle."))
(assert (= (name SO:0000822) "cyanelle_chromosome"))

(defconcept SO:0000823)
(assert (subset-of SO:0000823 SO:0000340))
(assert (documentation SO:0000823 "A chromosome with origin in a leucoplast."))
(assert (= (name SO:0000823) "leucoplast_chromosome"))

(defconcept SO:0000824)
(assert (subset-of SO:0000824 SO:0000340))
(assert (documentation SO:0000824 "A chromosome originating in a macronucleus."))
(assert (= (name SO:0000824) "macronuclear_chromosome"))

(defconcept SO:0000825)
(assert (subset-of SO:0000825 SO:0000340))
(assert (documentation SO:0000825 "A chromosome originating in a micronucleus."))
(assert (= (name SO:0000825) "micronuclear_chromosome"))

(defconcept SO:0000828)
(assert (subset-of SO:0000828 SO:0000340))
(assert (documentation SO:0000828 "A chromosome originating in a nucleus."))
(assert (= (name SO:0000828) "nuclear_chromosome"))

(defconcept SO:0000829)
(assert (subset-of SO:0000829 SO:0000340))
(assert (documentation SO:0000829 "A chromosome originating in a nucleomorph."))
(assert (= (name SO:0000829) "nucleomorphic_chromosome"))

(defconcept SO:0000830)
(assert (part_of SO:0000830 SO:0000340))
(assert (subset-of SO:0000830 SO:0001411))
(assert (documentation SO:0000830 "A region of a chromosome."))
(assert (= (name SO:0000830) "chromosome_part"))

(defconcept SO:0000831)
(assert (member_of SO:0000831 SO:0000704))
(assert (subset-of SO:0000831 SO:0001411))
(assert (documentation SO:0000831 "A region of a gene."))
(assert (= (name SO:0000831) "gene_member_region"))

(defconcept SO:0000832)
(assert (documentation SO:0000832 "A region of sequence which is part of a promoter."))
(assert (= (name SO:0000832) "promoter_region"))

(defconcept SO:0000833)
(assert (part_of SO:0000833 SO:0000673))
(assert (subset-of SO:0000833 SO:0001411))
(assert (documentation SO:0000833 "A region of a transcript."))
(assert (= (name SO:0000833) "transcript_region"))

(defconcept SO:0000834)
(assert (subset-of SO:0000834 SO:0000833))
(assert (documentation SO:0000834 "A region of a mature transcript."))
(assert (= (name SO:0000834) "mature_transcript_region"))

(defconcept SO:0000835)
(assert (part_of SO:0000835 SO:0000185))
(assert (subset-of SO:0000835 SO:0000833))
(assert (documentation SO:0000835 "A part of a primary transcript."))
(assert (= (name SO:0000835) "primary_transcript_region"))

(defconcept SO:0000836)
(assert (part_of SO:0000836 SO:0000234))
(assert (subset-of SO:0000836 SO:0000834))
(assert (documentation SO:0000836 "A region of an mRNA."))
(assert (= (name SO:0000836) "mRNA_region"))

(defconcept SO:0000837)
(assert (subset-of SO:0000837 SO:0000836))
(assert (documentation SO:0000837 "A region of UTR."))
(assert (= (name SO:0000837) "UTR_region"))

(defconcept SO:0000838)
(assert (part_of SO:0000838 SO:0000209))
(assert (subset-of SO:0000838 SO:0000835))
(assert (documentation SO:0000838 "A region of an rRNA primary transcript."))
(assert (= (name SO:0000838) "rRNA_primary_transcript_region"))

(defconcept SO:0000839)
(assert (part_of SO:0000839 SO:0000104))
(assert (subset-of SO:0000839 SO:0001411))
(assert (documentation SO:0000839 "Biological sequence region that can be assigned to a specific subsequence of a polypeptide."))
(assert (= (name SO:0000839) "polypeptide_region"))

(defconcept SO:0000840)
(assert (subset-of SO:0000840 SO:0001412))
(assert (documentation SO:0000840 "A region of a repeated sequence."))
(assert (= (name SO:0000840) "repeat_component"))

(defconcept SO:0000841)
(assert (part_of SO:0000841 SO:0000662))
(assert (subset-of SO:0000841 SO:0000835))
(assert (documentation SO:0000841 "A region within an intron."))
(assert (= (name SO:0000841) "spliceosomal_intron_region"))

(defconcept SO:0000842)
(assert (part_of SO:0000842 SO:0000704))
(assert (subset-of SO:0000842 SO:0001411))
(assert (= (name SO:0000842) "gene_component_region"))

(defconcept SO:0000843)
(assert (documentation SO:0000843 "A region which is part of a bacterial RNA polymerase promoter."))
(assert (= (name SO:0000843) "bacterial_RNApol_promoter_region"))

(defconcept SO:0000844)
(assert (documentation SO:0000844 "A region of sequence which is a promoter for RNA polymerase II."))
(assert (= (name SO:0000844) "RNApol_II_promoter_region"))

(defconcept SO:0000845)
(assert (documentation SO:0000845 "A region of sequence which is a promoter for RNA polymerase III type 1."))
(assert (= (name SO:0000845) "RNApol_III_promoter_type_1_region"))

(defconcept SO:0000846)
(assert (documentation SO:0000846 "A region of sequence which is a promoter for RNA polymerase III type 2."))
(assert (= (name SO:0000846) "RNApol_III_promoter_type_2_region"))

(defconcept SO:0000847)
(assert (part_of SO:0000847 SO:0000584))
(assert (subset-of SO:0000847 SO:0000834))
(assert (documentation SO:0000847 "A region of a tmRNA."))
(assert (= (name SO:0000847) "tmRNA_region"))

(defconcept SO:0000848)
(assert (part_of SO:0000848 SO:0000286))
(assert (subset-of SO:0000848 SO:0000840))
(assert (= (name SO:0000848) "LTR_component"))

(defconcept SO:0000849)
(assert (part_of SO:0000849 SO:0000426))
(assert (subset-of SO:0000849 SO:0000848))
(assert (= (name SO:0000849) "three_prime_LTR_component"))

(defconcept SO:0000850)
(assert (part_of SO:0000850 SO:0000425))
(assert (subset-of SO:0000850 SO:0000848))
(assert (= (name SO:0000850) "five_prime_LTR_component"))

(defconcept SO:0000851)
(assert (part_of SO:0000851 SO:0000316))
(assert (subset-of SO:0000851 SO:0000836))
(assert (documentation SO:0000851 "A region of a CDS."))
(assert (= (name SO:0000851) "CDS_region"))

(defconcept SO:0000852)
(assert (part_of SO:0000852 SO:0000147))
(assert (subset-of SO:0000852 SO:0000833))
(assert (documentation SO:0000852 "A region of an exon."))
(assert (= (name SO:0000852) "exon_region"))

(defconcept SO:0000853)
(assert (subset-of SO:0000853 SO:0000330))
(assert (documentation SO:0000853 "A region that is homologous to another region."))
(assert (= (name SO:0000853) "homologous_region"))

(defconcept SO:0000854)
(assert (subset-of SO:0000854 SO:0000853))
(assert (documentation SO:0000854 "A homologous_region that is paralogous to another region."))
(assert (= (name SO:0000854) "paralogous_region"))

(defconcept SO:0000855)
(assert (subset-of SO:0000855 SO:0000853))
(assert (documentation SO:0000855 "A homologous_region that is orthologous to another region."))
(assert (= (name SO:0000855) "orthologous_region"))

(defconcept SO:0000856)
(assert (subset-of SO:0000856 SO:0000733))
(assert (= (name SO:0000856) "conserved"))

(defconcept SO:0000857)
(assert (subset-of SO:0000857 SO:0000856))
(assert (documentation SO:0000857 "Similarity due to common ancestry."))
(assert (= (name SO:0000857) "homologous"))

(defconcept SO:0000858)
(assert (subset-of SO:0000858 SO:0000857))
(assert (documentation SO:0000858 "An attribute describing a kind of homology where divergence occured after a speciation event."))
(assert (= (name SO:0000858) "orthologous"))

(defconcept SO:0000859)
(assert (subset-of SO:0000859 SO:0000857))
(assert (documentation SO:0000859 "An attribute describing a kind of homology where divergence occurred after a duplication event."))
(assert (= (name SO:0000859) "paralogous"))

(defconcept SO:0000860)
(assert (subset-of SO:0000860 SO:0000856))
(assert (documentation SO:0000860 "Attribute describing sequence regions occurring in same order on chromosome of different species."))
(assert (= (name SO:0000860) "syntenic"))

(defconcept SO:0000861)
(assert (subset-of SO:0000861 SO:0000185))
(assert (documentation SO:0000861 "A primary transcript that is capped."))
(assert (= (name SO:0000861) "capped_primary_transcript"))

(defconcept SO:0000862)
(assert (subset-of SO:0000862 SO:0000234))
(assert (documentation SO:0000862 "An mRNA that is capped."))
(assert (= (name SO:0000862) "capped_mRNA"))

(defconcept SO:0000863)
(assert (subset-of SO:0000863 SO:0000237))
(assert (documentation SO:0000863 "An attribute describing an mRNA feature."))
(assert (= (name SO:0000863) "mRNA_attribute"))

(defconcept SO:0000864)
(assert (subset-of SO:0000864 SO:0000863))
(assert (documentation SO:0000864 "An attribute describing a sequence is representative of a class of similar sequences."))
(assert (= (name SO:0000864) "exemplar"))

(defconcept SO:0000865)
(assert (subset-of SO:0000865 SO:0000863))
(assert (documentation SO:0000865 "An attribute describing a sequence that contains a mutation involving the deletion or insertion of one or more bases, where this number is not divisible by 3."))
(assert (= (name SO:0000865) "frameshift"))

(defconcept SO:0000866)
(assert (subset-of SO:0000866 SO:0000865))
(assert (documentation SO:0000866 "A frameshift caused by deleting one base."))
(assert (= (name SO:0000866) "minus_1_frameshift"))

(defconcept SO:0000867)
(assert (subset-of SO:0000867 SO:0000865))
(assert (documentation SO:0000867 "A frameshift caused by deleting two bases."))
(assert (= (name SO:0000867) "minus_2_frameshift"))

(defconcept SO:0000868)
(assert (subset-of SO:0000868 SO:0000865))
(assert (documentation SO:0000868 "A frameshift caused by inserting one base."))
(assert (= (name SO:0000868) "plus_1_frameshift"))

(defconcept SO:0000869)
(assert (subset-of SO:0000869 SO:0000865))
(assert (documentation SO:0000869 "A frameshift caused by inserting two bases."))
(assert (= (name SO:0000869) "plus_2_framshift"))

(defconcept SO:0000870)
(assert (subset-of SO:0000870 SO:0000237))
(assert (documentation SO:0000870 "An attribute describing transcript sequence that is created by splicing exons from diferent genes."))
(assert (= (name SO:0000870) "trans_spliced"))

(defconcept SO:0000871)
(assert (subset-of SO:0000871 SO:0000234))
(assert (documentation SO:0000871 "An mRNA that is polyadenylated."))
(assert (= (name SO:0000871) "polyadenylated_mRNA"))

(defconcept SO:0000872)
(assert (subset-of SO:0000872 SO:0000479))
(assert (subset-of SO:0000872 SO:0000234))
(assert (documentation SO:0000872 "An mRNA that is trans-spliced."))
(assert (= (name SO:0000872) "trans_spliced_mRNA"))

(defconcept SO:0000873)
(assert (subset-of SO:0000873 SO:0000673))
(assert (documentation SO:0000873 "A transcript that is edited."))
(assert (= (name SO:0000873) "edited_transcript"))

(defconcept SO:0000874)
(assert (subset-of SO:0000874 SO:0000929))
(assert (subset-of SO:0000874 SO:0000873))
(assert (documentation SO:0000874 "A transcript that has been edited by A to I substitution."))
(assert (= (name SO:0000874) "edited_transcript_by_A_to_I_substitution"))

(defconcept SO:0000875)
(assert (subset-of SO:0000875 SO:0000277))
(assert (documentation SO:0000875 "An attribute describing a sequence that is bound by a protein."))
(assert (= (name SO:0000875) "bound_by_protein"))

(defconcept SO:0000876)
(assert (subset-of SO:0000876 SO:0000277))
(assert (documentation SO:0000876 "An attribute describing a sequence that is bound by a nucleic acid."))
(assert (= (name SO:0000876) "bound_by_nucleic_acid"))

(defconcept SO:0000877)
(assert (subset-of SO:0000877 SO:0000237))
(assert (documentation SO:0000877 "An attribute describing a situation where a gene may encode for more than 1 transcript."))
(assert (= (name SO:0000877) "alternatively_spliced"))

(defconcept SO:0000878)
(assert (subset-of SO:0000878 SO:0000237))
(assert (documentation SO:0000878 "An attribute describing a sequence that contains the code for one gene product."))
(assert (= (name SO:0000878) "monocistronic"))

(defconcept SO:0000879)
(assert (subset-of SO:0000879 SO:0000880))
(assert (documentation SO:0000879 "An attribute describing a sequence that contains the code for two gene products."))
(assert (= (name SO:0000879) "dicistronic"))

(defconcept SO:0000880)
(assert (subset-of SO:0000880 SO:0000237))
(assert (documentation SO:0000880 "An attribute describing a sequence that contains the code for more than one gene product."))
(assert (= (name SO:0000880) "polycistronic"))

(defconcept SO:0000881)
(assert (subset-of SO:0000881 SO:0000863))
(assert (documentation SO:0000881 "An attribute describing an mRNA sequence that has been reprogrammed at translation, causing localized alterations."))
(assert (= (name SO:0000881) "recoded"))

(defconcept SO:0000882)
(assert (subset-of SO:0000882 SO:0000881))
(assert (documentation SO:0000882 "An attribute describing the alteration of codon meaning."))
(assert (= (name SO:0000882) "codon_redefined"))

(defconcept SO:0000883)
(assert (subset-of SO:0000883 SO:0000145))
(assert (documentation SO:0000883 "A stop codon redefined to be a new amino acid."))
(assert (= (name SO:0000883) "stop_codon_read_through"))

(defconcept SO:0000884)
(assert (subset-of SO:0000884 SO:0000883))
(assert (documentation SO:0000884 "A stop codon redefined to be the new amino acid, pyrrolysine."))
(assert (= (name SO:0000884) "stop_codon_redefined_as_pyrrolysine"))

(defconcept SO:0000885)
(assert (subset-of SO:0000885 SO:0000883))
(assert (documentation SO:0000885 "A stop codon redefined to be the new amino acid, selenocysteine."))
(assert (= (name SO:0000885) "stop_codon_redefined_as_selenocysteine"))

(defconcept SO:0000886)
(assert (subset-of SO:0000886 SO:0000881))
(assert (documentation SO:0000886 "Recoded mRNA where a block of nucleotides is not translated."))
(assert (= (name SO:0000886) "recoded_by_translational_bypass"))

(defconcept SO:0000887)
(assert (subset-of SO:0000887 SO:0000881))
(assert (documentation SO:0000887 "Recoding by frameshifting a particular site."))
(assert (= (name SO:0000887) "translationally_frameshifted"))

(defconcept SO:0000888)
(assert (subset-of SO:0000888 SO:0000898))
(assert (documentation SO:0000888 "A gene that is maternally_imprinted."))
(assert (= (name SO:0000888) "maternally_imprinted_gene"))

(defconcept SO:0000889)
(assert (subset-of SO:0000889 SO:0000898))
(assert (documentation SO:0000889 "A gene that is paternally imprinted."))
(assert (= (name SO:0000889) "paternally_imprinted_gene"))

(defconcept SO:0000890)
(assert (subset-of SO:0000890 SO:0000704))
(assert (documentation SO:0000890 "A gene that is post translationally regulated."))
(assert (= (name SO:0000890) "post_translationally_regulated_gene"))

(defconcept SO:0000891)
(assert (subset-of SO:0000891 SO:0000704))
(assert (documentation SO:0000891 "A gene that is negatively autoreguated."))
(assert (= (name SO:0000891) "negatively_autoregulated_gene"))

(defconcept SO:0000892)
(assert (subset-of SO:0000892 SO:0000704))
(assert (documentation SO:0000892 "A gene that is positively autoregulated."))
(assert (= (name SO:0000892) "positively_autoregulated_gene"))

(defconcept SO:0000893)
(assert (subset-of SO:0000893 SO:0000126))
(assert (documentation SO:0000893 "An attribute describing an epigenetic process where a gene is inactivated at transcriptional or translational level."))
(assert (= (name SO:0000893) "silenced"))

(defconcept SO:0000894)
(assert (subset-of SO:0000894 SO:0000893))
(assert (documentation SO:0000894 "An attribute describing an epigenetic process where a gene is inactivated by DNA modifications, resulting in repression of transcription."))
(assert (= (name SO:0000894) "silenced_by_DNA_modification"))

(defconcept SO:0000895)
(assert (subset-of SO:0000895 SO:0000894))
(assert (documentation SO:0000895 "An attribute describing an epigenetic process where a gene is inactivated by DNA methylation, resulting in repression of transcription."))
(assert (= (name SO:0000895) "silenced_by_DNA_methylation"))

(defconcept SO:0000896)
(assert (subset-of SO:0000896 SO:0000704))
(assert (documentation SO:0000896 "A gene that is translationally regulated."))
(assert (= (name SO:0000896) "translationally_regulated_gene"))

(defconcept SO:0000897)
(assert (subset-of SO:0000897 SO:0000898))
(assert (documentation SO:0000897 "A gene that is allelically_excluded."))
(assert (= (name SO:0000897) "allelically_excluded_gene"))

(defconcept SO:0000898)
(assert (subset-of SO:0000898 SO:0001720))
(assert (subset-of SO:0000898 SO:0000704))
(assert (documentation SO:0000898 "A gene that is epigenetically modified."))
(assert (= (name SO:0000898) "epigenetically_modified_gene"))

(defconcept SO:0000899)
(assert (documentation SO:0000899 "An attribute describing a nuclear pseudogene of a mitochndrial gene."))
(assert (= (name SO:0000899) "nuclear_mitochondrial"))

(defconcept SO:0000900)
(assert (documentation SO:0000900 "An attribute describing a pseudogene where by an mRNA was retrotransposed. The mRNA sequence is transcribed back into the genome, lacking introns and promotors, but often including a polyA tail."))
(assert (= (name SO:0000900) "processed"))

(defconcept SO:0000901)
(assert (documentation SO:0000901 "An attribute describing a pseudogene that was created by tandem duplication and unequal crossing over during recombination."))
(assert (= (name SO:0000901) "unequally_crossed_over"))

(defconcept SO:0000902)
(assert (subset-of SO:0000902 SO:0000704))
(assert (documentation SO:0000902 "A transgene is a gene that has been transferred naturally or by any of a number of genetic engineering techniques from one organism to another."))
(assert (= (name SO:0000902) "transgene"))

(defconcept SO:0000903)
(assert (subset-of SO:0000903 SO:0000751))
(assert (= (name SO:0000903) "endogenous_retroviral_sequence"))

(defconcept SO:0000904)
(assert (subset-of SO:0000904 SO:0000133))
(assert (documentation SO:0000904 "An attribute to describe the sequence of a feature, where the DNA is rearranged."))
(assert (= (name SO:0000904) "rearranged_at_DNA_level"))

(defconcept SO:0000905)
(assert (subset-of SO:0000905 SO:0000733))
(assert (documentation SO:0000905 "An attribute describing the status of a feature, based on the available evidence."))
(assert (= (name SO:0000905) "status"))

(defconcept SO:0000906)
(assert (subset-of SO:0000906 SO:0000905))
(assert (documentation SO:0000906 "Attribute to describe a feature that is independently known - not predicted."))
(assert (= (name SO:0000906) "independently_known"))

(defconcept SO:0000907)
(assert (subset-of SO:0000907 SO:0000732))
(assert (documentation SO:0000907 "An attribute to describe a feature that has been predicted using sequence similarity techniques."))
(assert (= (name SO:0000907) "supported_by_sequence_similarity"))

(defconcept SO:0000908)
(assert (subset-of SO:0000908 SO:0000907))
(assert (documentation SO:0000908 "An attribute to describe a feature that has been predicted using sequence similarity of a known domain."))
(assert (= (name SO:0000908) "supported_by_domain_match"))

(defconcept SO:0000909)
(assert (subset-of SO:0000909 SO:0000907))
(assert (documentation SO:0000909 "An attribute to describe a feature that has been predicted using sequence similarity to EST or cDNA data."))
(assert (= (name SO:0000909) "supported_by_EST_or_cDNA"))

(defconcept SO:0000910)
(assert (subset-of SO:0000910 SO:0000732))
(assert (= (name SO:0000910) "orphan"))

(defconcept SO:0000911)
(assert (subset-of SO:0000911 SO:0000732))
(assert (documentation SO:0000911 "An attribute describing a feature that is predicted by a computer program that did not rely on sequence similarity."))
(assert (= (name SO:0000911) "predicted_by_ab_initio_computation"))

(defconcept SO:0000912)
(assert (subset-of SO:0000912 SO:0001128))
(assert (documentation SO:0000912 "A motif of three consecutive residues and one H-bond in which: residue(i) is Aspartate or Asparagine (Asx), the side-chain O of residue(i) is H-bonded to the main-chain NH of residue(i+2)."))
(assert (= (name SO:0000912) "asx_turn"))

(defconcept SO:0000913)
(assert (subset-of SO:0000913 SO:0000753))
(assert (documentation SO:0000913 "A clone insert made from cDNA."))
(assert (= (name SO:0000913) "cloned_cDNA_insert"))

(defconcept SO:0000914)
(assert (subset-of SO:0000914 SO:0000753))
(assert (documentation SO:0000914 "A clone insert made from genomic DNA."))
(assert (= (name SO:0000914) "cloned_genomic_insert"))

(defconcept SO:0000915)
(assert (subset-of SO:0000915 SO:0000804))
(assert (subset-of SO:0000915 SO:0000753))
(assert (documentation SO:0000915 "A clone insert that is engineered."))
(assert (= (name SO:0000915) "engineered_insert"))

(defconcept SO:0000916)
(assert (= (name SO:0000916) "edit_operation"))

(defconcept SO:0000917)
(assert (documentation SO:0000917 "An edit to insert a U."))
(assert (= (name SO:0000917) "insert_U"))

(defconcept SO:0000918)
(assert (documentation SO:0000918 "An edit to delete a uridine."))
(assert (= (name SO:0000918) "delete_U"))

(defconcept SO:0000919)
(assert (documentation SO:0000919 "An edit to substitute an I for an A."))
(assert (= (name SO:0000919) "substitute_A_to_I"))

(defconcept SO:0000920)
(assert (documentation SO:0000920 "An edit to insert a cytidine."))
(assert (= (name SO:0000920) "insert_C"))

(defconcept SO:0000921)
(assert (documentation SO:0000921 "An edit to insert a dinucleotide."))
(assert (= (name SO:0000921) "insert_dinucleotide"))

(defconcept SO:0000922)
(assert (documentation SO:0000922 "An edit to substitute an U for a C."))
(assert (= (name SO:0000922) "substitute_C_to_U"))

(defconcept SO:0000923)
(assert (documentation SO:0000923 "An edit to insert a G."))
(assert (= (name SO:0000923) "insert_G"))

(defconcept SO:0000924)
(assert (documentation SO:0000924 "An edit to insert a GC dinucleotide."))
(assert (= (name SO:0000924) "insert_GC"))

(defconcept SO:0000925)
(assert (documentation SO:0000925 "An edit to insert a GU dinucleotide."))
(assert (= (name SO:0000925) "insert_GU"))

(defconcept SO:0000926)
(assert (documentation SO:0000926 "An edit to insert a CU dinucleotide."))
(assert (= (name SO:0000926) "insert_CU"))

(defconcept SO:0000927)
(assert (documentation SO:0000927 "An edit to insert a AU dinucleotide."))
(assert (= (name SO:0000927) "insert_AU"))

(defconcept SO:0000928)
(assert (documentation SO:0000928 "An edit to insert a AA dinucleotide."))
(assert (= (name SO:0000928) "insert_AA"))

(defconcept SO:0000929)
(assert (subset-of SO:0000929 SO:0000873))
(assert (documentation SO:0000929 "An mRNA that is edited."))
(assert (= (name SO:0000929) "edited_mRNA"))

(defconcept SO:0000930)
(assert (part_of SO:0000930 SO:0000602))
(assert (subset-of SO:0000930 SO:0000834))
(assert (documentation SO:0000930 "A region of guide RNA."))
(assert (= (name SO:0000930) "guide_RNA_region"))

(defconcept SO:0000931)
(assert (subset-of SO:0000931 SO:0000930))
(assert (documentation SO:0000931 "A region of a guide_RNA that base-pairs to a target mRNA."))
(assert (= (name SO:0000931) "anchor_region"))

(defconcept SO:0000932)
(assert (subset-of SO:0000932 SO:0000120))
(assert (= (name SO:0000932) "pre_edited_mRNA"))

(defconcept SO:0000933)
(assert (subset-of SO:0000933 SO:0000733))
(assert (documentation SO:0000933 "An attribute to describe a feature between stages of processing."))
(assert (= (name SO:0000933) "intermediate"))

(defconcept SO:0000934)
(assert (subset-of SO:0000934 SO:0000409))
(assert (documentation SO:0000934 "A miRNA target site is a binding site where the molecule is a micro RNA."))
(assert (= (name SO:0000934) "miRNA_target_site"))

(defconcept SO:0000935)
(assert (subset-of SO:0000935 SO:0000316))
(assert (documentation SO:0000935 "A CDS that is edited."))
(assert (= (name SO:0000935) "edited_CDS"))

(defconcept SO:0000936)
(assert (subset-of SO:0000936 SO:0000301))
(assert (= (name SO:0000936) "vertebrate_immunoglobulin_T_cell_receptor_rearranged_segment"))

(defconcept SO:0000937)
(assert (= (name SO:0000937) "vertebrate_immune_system_feature"))

(defconcept SO:0000938)
(assert (subset-of SO:0000938 SO:0000301))
(assert (= (name SO:0000938) "vertebrate_immunoglobulin_T_cell_receptor_rearranged_gene_cluster"))

(defconcept SO:0000939)
(assert (subset-of SO:0000939 SO:0000301))
(assert (= (name SO:0000939) "vertebrate_immune_system_gene_recombination_signal_feature"))

(defconcept SO:0000940)
(assert (subset-of SO:0000940 SO:0000733))
(assert (= (name SO:0000940) "recombinationally_rearranged"))

(defconcept SO:0000941)
(assert (subset-of SO:0000941 SO:0000456))
(assert (documentation SO:0000941 "A recombinationally rearranged gene of the vertebrate immune system."))
(assert (= (name SO:0000941) "recombinationally_rearranged_vertebrate_immune_system_gene"))

(defconcept SO:0000942)
(assert (part_of SO:0000942 SO:0001042))
(assert (subset-of SO:0000942 SO:0000946))
(assert (documentation SO:0000942 "An integration/excision site of a phage chromosome at which a recombinase acts to insert the phage DNA at a cognate integration/excision site on a bacterial chromosome."))
(assert (= (name SO:0000942) "attP_site"))

(defconcept SO:0000943)
(assert (subset-of SO:0000943 SO:0000946))
(assert (documentation SO:0000943 "An integration/excision site of a bacterial chromosome at which a recombinase acts to insert foreign DNA containing a cognate integration/excision site."))
(assert (= (name SO:0000943) "attB_site"))

(defconcept SO:0000944)
(assert (subset-of SO:0000944 SO:0000946))
(assert (documentation SO:0000944 "A region that results from recombination between attP_site and attB_site, composed of the 5' portion of attB_site and the 3' portion of attP_site."))
(assert (= (name SO:0000944) "attL_site"))

(defconcept SO:0000945)
(assert (subset-of SO:0000945 SO:0000946))
(assert (documentation SO:0000945 "A region that results from recombination between attP_site and attB_site, composed of the 5' portion of attP_site and the 3' portion of attB_site."))
(assert (= (name SO:0000945) "attR_site"))

(defconcept SO:0000946)
(assert (subset-of SO:0000946 SO:0000342))
(assert (documentation SO:0000946 "A region specifically recognised by a recombinase, which inserts or removes another region marked by a distinct cognate integration/excision site."))
(assert (= (name SO:0000946) "integration_excision_site"))

(defconcept SO:0000947)
(assert (subset-of SO:0000947 SO:0000342))
(assert (documentation SO:0000947 "A region specifically recognised by a recombinase, which separates a physically contiguous circle of DNA into two physically separate circles."))
(assert (= (name SO:0000947) "resolution_site"))

(defconcept SO:0000948)
(assert (subset-of SO:0000948 SO:0000342))
(assert (documentation SO:0000948 "A region specifically recognised by a recombinase, which inverts the region flanked by a pair of sites."))
(assert (= (name SO:0000948) "inversion_site"))

(defconcept SO:0000949)
(assert (subset-of SO:0000949 SO:0000947))
(assert (documentation SO:0000949 "A site at which replicated bacterial circular chromosomes are decatenated by site specific resolvase."))
(assert (= (name SO:0000949) "dif_site"))

(defconcept SO:0000950)
(assert (part_of SO:0000950 SO:0000365))
(assert (subset-of SO:0000950 SO:0000946))
(assert (documentation SO:0000950 "An attC site is a sequence required for the integration of a DNA of an integron."))
(assert (= (name SO:0000950) "attC_site"))

(defconcept SO:0000951)
(assert (subset-of SO:0000951 SO:0000141))
(assert (= (name SO:0000951) "eukaryotic_terminator"))

(defconcept SO:0000952)
(assert (subset-of SO:0000952 SO:0000296))
(assert (documentation SO:0000952 "An origin of vegetative replication in plasmids and phages."))
(assert (= (name SO:0000952) "oriV"))

(defconcept SO:0000953)
(assert (subset-of SO:0000953 SO:0000296))
(assert (documentation SO:0000953 "An origin of bacterial chromosome replication."))
(assert (= (name SO:0000953) "oriC"))

(defconcept SO:0000954)
(assert (subset-of SO:0000954 SO:0000340))
(assert (documentation SO:0000954 "Structural unit composed of a self-replicating, DNA molecule."))
(assert (= (name SO:0000954) "DNA_chromosome"))

(defconcept SO:0000955)
(assert (subset-of SO:0000955 SO:0000954))
(assert (documentation SO:0000955 "Structural unit composed of a self-replicating, double-stranded DNA molecule."))
(assert (= (name SO:0000955) "double_stranded_DNA_chromosome"))

(defconcept SO:0000956)
(assert (subset-of SO:0000956 SO:0000954))
(assert (documentation SO:0000956 "Structural unit composed of a self-replicating, single-stranded DNA molecule."))
(assert (= (name SO:0000956) "single_stranded_DNA_chromosome"))

(defconcept SO:0000957)
(assert (subset-of SO:0000957 SO:0000955))
(assert (documentation SO:0000957 "Structural unit composed of a self-replicating, double-stranded, linear DNA molecule."))
(assert (= (name SO:0000957) "linear_double_stranded_DNA_chromosome"))

(defconcept SO:0000958)
(assert (subset-of SO:0000958 SO:0000955))
(assert (documentation SO:0000958 "Structural unit composed of a self-replicating, double-stranded, circular DNA molecule."))
(assert (= (name SO:0000958) "circular_double_stranded_DNA_chromosome"))

(defconcept SO:0000959)
(assert (subset-of SO:0000959 SO:0000956))
(assert (documentation SO:0000959 "Structural unit composed of a self-replicating, single-stranded, linear DNA molecule."))
(assert (= (name SO:0000959) "linear_single_stranded_DNA_chromosome"))

(defconcept SO:0000960)
(assert (subset-of SO:0000960 SO:0000956))
(assert (documentation SO:0000960 "Structural unit composed of a self-replicating, single-stranded, circular DNA molecule."))
(assert (= (name SO:0000960) "circular_single_stranded_DNA_chromosome"))

(defconcept SO:0000961)
(assert (subset-of SO:0000961 SO:0000340))
(assert (documentation SO:0000961 "Structural unit composed of a self-replicating, RNA molecule."))
(assert (= (name SO:0000961) "RNA_chromosome"))

(defconcept SO:0000962)
(assert (subset-of SO:0000962 SO:0000961))
(assert (documentation SO:0000962 "Structural unit composed of a self-replicating, single-stranded RNA molecule."))
(assert (= (name SO:0000962) "single_stranded_RNA_chromosome"))

(defconcept SO:0000963)
(assert (subset-of SO:0000963 SO:0000962))
(assert (documentation SO:0000963 "Structural unit composed of a self-replicating, single-stranded, linear RNA molecule."))
(assert (= (name SO:0000963) "linear_single_stranded_RNA_chromosome"))

(defconcept SO:0000964)
(assert (subset-of SO:0000964 SO:0000965))
(assert (documentation SO:0000964 "Structural unit composed of a self-replicating, double-stranded, linear RNA molecule."))
(assert (= (name SO:0000964) "linear_double_stranded_RNA_chromosome"))

(defconcept SO:0000965)
(assert (subset-of SO:0000965 SO:0000961))
(assert (documentation SO:0000965 "Structural unit composed of a self-replicating, double-stranded RNA molecule."))
(assert (= (name SO:0000965) "double_stranded_RNA_chromosome"))

(defconcept SO:0000966)
(assert (subset-of SO:0000966 SO:0000962))
(assert (documentation SO:0000966 "Structural unit composed of a self-replicating, single-stranded, circular DNA molecule."))
(assert (= (name SO:0000966) "circular_single_stranded_RNA_chromosome"))

(defconcept SO:0000967)
(assert (subset-of SO:0000967 SO:0000965))
(assert (documentation SO:0000967 "Structural unit composed of a self-replicating, double-stranded, circular RNA molecule."))
(assert (= (name SO:0000967) "circular_double_stranded_RNA_chromosome"))

(defconcept SO:0000968)
(assert (= (name SO:0000968) "sequence_replication_mode"))

(defconcept SO:0000969)
(assert (= (name SO:0000969) "rolling_circle"))

(defconcept SO:0000970)
(assert (= (name SO:0000970) "theta_replication"))

(defconcept SO:0000971)
(assert (= (name SO:0000971) "DNA_replication_mode"))

(defconcept SO:0000972)
(assert (= (name SO:0000972) "RNA_replication_mode"))

(defconcept SO:0000973)
(assert (subset-of SO:0000973 SO:0000208))
(assert (documentation SO:0000973 "A terminal_inverted_repeat_element that is bacterial and only encodes the functions required for its transposition between these inverted repeats."))
(assert (= (name SO:0000973) "insertion_sequence"))

(defconcept SO:0000975)
(assert (subset-of SO:0000975 SO:0000089))
(assert (= (name SO:0000975) "minicircle_gene"))

(defconcept SO:0000976)
(assert (subset-of SO:0000976 SO:0000733))
(assert (documentation SO:0000976 "A feature_attribute describing a feature that is not manifest under normal conditions."))
(assert (= (name SO:0000976) "cryptic"))

(defconcept SO:0000977)
(assert (subset-of SO:0000977 SO:0000833))
(assert (= (name SO:0000977) "anchor_binding_site"))

(defconcept SO:0000978)
(assert (subset-of SO:0000978 SO:0000930))
(assert (documentation SO:0000978 "A region of a guide_RNA that specifies the insertions and deletions of bases in the editing of a target mRNA."))
(assert (= (name SO:0000978) "template_region"))

(defconcept SO:0000979)
(assert (subset-of SO:0000979 SO:0000011))
(assert (documentation SO:0000979 "A non-protein_coding gene that encodes a guide_RNA."))
(assert (= (name SO:0000979) "gRNA_encoding"))

(defconcept SO:0000980)
(assert (part_of SO:0000980 SO:0000741))
(assert (subset-of SO:0000980 SO:0001235))
(assert (documentation SO:0000980 "A minicircle is a replicon, part of a kinetoplast, that encodes for guide RNAs."))
(assert (= (name SO:0000980) "minicircle"))

(defconcept SO:0000981)
(assert (subset-of SO:0000981 SO:0000614))
(assert (= (name SO:0000981) "rho_dependent_bacterial_terminator"))

(defconcept SO:0000982)
(assert (subset-of SO:0000982 SO:0000614))
(assert (= (name SO:0000982) "rho_independent_bacterial_terminator"))

(defconcept SO:0000983)
(assert (subset-of SO:0000983 SO:0000733))
(assert (= (name SO:0000983) "strand_attribute"))

(defconcept SO:0000984)
(assert (subset-of SO:0000984 SO:0000983))
(assert (= (name SO:0000984) "single"))

(defconcept SO:0000985)
(assert (subset-of SO:0000985 SO:0000983))
(assert (= (name SO:0000985) "double"))

(defconcept SO:0000986)
(assert (subset-of SO:0000986 SO:0000443))
(assert (= (name SO:0000986) "topology_attribute"))

(defconcept SO:0000987)
(assert (subset-of SO:0000987 SO:0000986))
(assert (documentation SO:0000987 "A quality of a nucleotide polymer that has a 3'-terminal residue and a 5'-terminal residue."))
(assert (= (name SO:0000987) "linear"))

(defconcept SO:0000988)
(assert (subset-of SO:0000988 SO:0000986))
(assert (documentation SO:0000988 "A quality of a nucleotide polymer that has no terminal nucleotide residues."))
(assert (= (name SO:0000988) "circular"))

(defconcept SO:0000989)
(assert (subset-of SO:0000989 SO:0000655))
(assert (documentation SO:0000989 "Small non-coding RNA (59-60 nt long) containing 5' and 3' ends that are predicted to come together to form a stem structure. Identified in the social amoeba Dictyostelium discoideum and localized in the cytoplasm."))
(assert (= (name SO:0000989) "class_II_RNA"))

(defconcept SO:0000990)
(assert (subset-of SO:0000990 SO:0000655))
(assert (documentation SO:0000990 "Small non-coding RNA (55-65 nt long) containing highly conserved 5' and 3' ends (16 and 8 nt, respectively) that are predicted to come together to form a stem structure. Identified in the social amoeba Dictyostelium discoideum and localized in the cytoplasm."))
(assert (= (name SO:0000990) "class_I_RNA"))

(defconcept SO:0000991)
(assert (subset-of SO:0000991 SO:0000352))
(assert (= (name SO:0000991) "genomic_DNA"))

(defconcept SO:0000992)
(assert (subset-of SO:0000992 SO:0000914))
(assert (= (name SO:0000992) "BAC_cloned_genomic_insert"))

(defconcept SO:0000993)
(assert (subset-of SO:0000993 SO:0000905))
(assert (= (name SO:0000993) "consensus"))

(defconcept SO:0000994)
(assert (subset-of SO:0000994 SO:0001410))
(assert (= (name SO:0000994) "consensus_region"))

(defconcept SO:0000995)
(assert (subset-of SO:0000995 SO:0000994))
(assert (subset-of SO:0000995 SO:0000234))
(assert (= (name SO:0000995) "consensus_mRNA"))

(defconcept SO:0000996)
(assert (subset-of SO:0000996 SO:0000704))
(assert (= (name SO:0000996) "predicted_gene"))

(defconcept SO:0000997)
(assert (subset-of SO:0000997 SO:0000842))
(assert (= (name SO:0000997) "gene_fragment"))

(defconcept SO:0000998)
(assert (subset-of SO:0000998 SO:0001419))
(assert (documentation SO:0000998 "A recursive splice site is a splice site which subdivides a large intron. Recursive splicing is a mechanism that splices large introns by sub dividing the intron at non exonic elements and alternate exons."))
(assert (= (name SO:0000998) "recursive_splice_site"))

(defconcept SO:0000999)
(assert (part_of SO:0000999 SO:0000153))
(assert (subset-of SO:0000999 SO:0000150))
(assert (documentation SO:0000999 "A region of sequence from the end of a BAC clone that may provide a highly specific marker."))
(assert (= (name SO:0000999) "BAC_end"))

(defconcept SO:0001000)
(assert (subset-of SO:0001000 SO:0000650))
(assert (documentation SO:0001000 "A large polynucleotide in Bacteria and Archaea, which functions as the small subunit of the ribosome."))
(assert (= (name SO:0001000) "rRNA_16S"))

(defconcept SO:0001001)
(assert (subset-of SO:0001001 SO:0000651))
(assert (documentation SO:0001001 "A large polynucleotide in Bacteria and Archaea, which functions as the large subunit of the ribosome."))
(assert (= (name SO:0001001) "rRNA_23S"))

(defconcept SO:0001002)
(assert (subset-of SO:0001002 SO:0000651))
(assert (documentation SO:0001002 "A large polynucleotide which functions as part of the large subunit of the ribosome in some eukaryotes."))
(assert (= (name SO:0001002) "rRNA_25S"))

(defconcept SO:0001003)
(assert (subset-of SO:0001003 SO:0000286))
(assert (documentation SO:0001003 "A recombination product between the 2 LTR of the same element."))
(assert (= (name SO:0001003) "solo_LTR"))

(defconcept SO:0001004)
(assert (subset-of SO:0001004 SO:0000905))
(assert (= (name SO:0001004) "low_complexity"))

(defconcept SO:0001005)
(assert (subset-of SO:0001005 SO:0001410))
(assert (= (name SO:0001005) "low_complexity_region"))

(defconcept SO:0001006)
(assert (subset-of SO:0001006 SO:0000113))
(assert (documentation SO:0001006 "A phage genome after it has established in the host genome in a latent/immune state either as a plasmid or as an integrated \\\"island\\\"."))
(assert (= (name SO:0001006) "prophage"))

(defconcept SO:0001007)
(assert (subset-of SO:0001007 SO:0000772))
(assert (documentation SO:0001007 "A remnant of an integrated prophage in the host genome or an \\\"island\\\" in the host genome that includes phage like-genes."))
(assert (= (name SO:0001007) "cryptic_prophage"))

(defconcept SO:0001008)
(assert (subset-of SO:0001008 SO:0000313))
(assert (documentation SO:0001008 "A base-paired stem with loop of 4 non-hydrogen bonded nucleotides."))
(assert (= (name SO:0001008) "tetraloop"))

(defconcept SO:0001009)
(assert (subset-of SO:0001009 SO:0000442))
(assert (documentation SO:0001009 "A double-stranded DNA used to control macromolecular structure and function."))
(assert (= (name SO:0001009) "DNA_constraint_sequence"))

(defconcept SO:0001010)
(assert (subset-of SO:0001010 SO:0000142))
(assert (documentation SO:0001010 "A cytosine rich domain whereby strands associate both inter- and intramolecularly at moderately acidic pH."))
(assert (= (name SO:0001010) "i_motif"))

(defconcept SO:0001011)
(assert (subset-of SO:0001011 SO:0001247))
(assert (documentation SO:0001011 "Peptide nucleic acid, is a chemical not known to occur naturally but is artificially synthesized and used in some biological research and medical treatments. The PNA backbone is composed of repeating N-(2-aminoethyl)-glycine units linked by peptide bonds. The purine and pyrimidine bases are linked to the backbone by methylene carbonyl bonds."))
(assert (= (name SO:0001011) "PNA_oligo"))

(defconcept SO:0001012)
(assert (subset-of SO:0001012 SO:0000696))
(assert (documentation SO:0001012 "A DNA sequence with catalytic activity."))
(assert (= (name SO:0001012) "DNAzyme"))

(defconcept SO:0001013)
(assert (subset-of SO:0001013 SO:1000002))
(assert (documentation SO:0001013 "A multiple nucleotide polymorphism with alleles of common length > 1, for example AAA/TTT."))
(assert (= (name SO:0001013) "MNP"))

(defconcept SO:0001014)
(assert (part_of SO:0001014 SO:0000188))
(assert (subset-of SO:0001014 SO:0000835))
(assert (= (name SO:0001014) "intron_domain"))

(defconcept SO:0001015)
(assert (subset-of SO:0001015 SO:0000028))
(assert (documentation SO:0001015 "A type of non-canonical base pairing, most commonly between G and U, which is important for the secondary structure of RNAs. It has similar thermodynamic stability to the Watson-Crick pairing. Wobble base pairs only have two hydrogen bonds. Other wobble base pair possibilities are I-A, I-U and I-C."))
(assert (= (name SO:0001015) "wobble_base_pair"))

(defconcept SO:0001016)
(assert (part_of SO:0001016 SO:0000587))
(assert (subset-of SO:0001016 SO:0001014))
(assert (documentation SO:0001016 "A purine-rich sequence in the group I introns which determines the locations of the splice sites in group I intron splicing and has catalytic activity."))
(assert (= (name SO:0001016) "internal_guide_sequence"))

(defconcept SO:0001017)
(assert (subset-of SO:0001017 SO:0001537))
(assert (documentation SO:0001017 "A sequence variant that does not affect protein function. Silent mutations may occur in genic ( CDS, UTR, intron etc) and intergenic regions. Silent mutations may have affects on processes such as splicing and regulation."))
(assert (= (name SO:0001017) "silent_mutation"))

(defconcept SO:0001018)
(assert (subset-of SO:0001018 SO:0000409))
(assert (documentation SO:0001018 "A region of a macromolecule that is recognized by the immune system."))
(assert (= (name SO:0001018) "epitope"))

(defconcept SO:0001019)
(assert (subset-of SO:0001019 SO:0001059))
(assert (documentation SO:0001019 "A variation that increases or decreases the copy number of a given region."))
(assert (= (name SO:0001019) "copy_number_variation"))

(defconcept SO:0001020)
(assert (subset-of SO:0001020 SO:1000132))
(assert (= (name SO:0001020) "sequence_variant_affecting_copy_number"))

(defconcept SO:0001021)
(assert (part_of SO:0001021 SO:0000340))
(assert (subset-of SO:0001021 SO:0000699))
(assert (= (name SO:0001021) "chromosome_breakpoint"))

(defconcept SO:0001022)
(assert (subset-of SO:0001022 SO:0001021))
(assert (documentation SO:0001022 "The point within a chromosome where an inversion begins or ends."))
(assert (= (name SO:0001022) "inversion_breakpoint"))

(defconcept SO:0001023)
(assert (variant_of SO:0001023 SO:0000704))
(assert (subset-of SO:0001023 SO:0001507))
(assert (documentation SO:0001023 "An allele is one of a set of coexisting sequence variants of a gene."))
(assert (= (name SO:0001023) "allele"))

(defconcept SO:0001024)
(assert (variant_of SO:0001024 SO:0000355))
(assert (subset-of SO:0001024 SO:0001507))
(assert (documentation SO:0001024 "A haplotype is one of a set of coexisting sequence variants of a haplotype block."))
(assert (= (name SO:0001024) "haplotype"))

(defconcept SO:0001025)
(assert (subset-of SO:0001025 SO:0001023))
(assert (documentation SO:0001025 "A sequence variant that is segregating in one or more natural populations of a species."))
(assert (= (name SO:0001025) "polymorphic_sequence_variant"))

(defconcept SO:0001026)
(assert (subset-of SO:0001026 SO:0001260))
(assert (documentation SO:0001026 "A genome is the sum of genetic material within a cell or virion."))
(assert (= (name SO:0001026) "genome"))

(defconcept SO:0001027)
(assert (variant_of SO:0001027 SO:0001026))
(assert (subset-of SO:0001027 SO:0001507))
(assert (documentation SO:0001027 "A genotype is a variant genome, complete or incomplete."))
(assert (= (name SO:0001027) "genotype"))

(defconcept SO:0001028)
(assert (subset-of SO:0001028 SO:0001507))
(assert (documentation SO:0001028 "A diplotype is a pair of haplotypes from a given individual. It is a genotype where the phase is known."))
(assert (= (name SO:0001028) "diplotype"))

(defconcept SO:0001029)
(assert (subset-of SO:0001029 SO:0000733))
(assert (= (name SO:0001029) "direction_attribute"))

(defconcept SO:0001030)
(assert (subset-of SO:0001030 SO:0001029))
(assert (documentation SO:0001030 "Forward is an attribute of the feature, where the feature is in the 5' to 3' direction."))
(assert (= (name SO:0001030) "forward"))

(defconcept SO:0001031)
(assert (subset-of SO:0001031 SO:0001029))
(assert (documentation SO:0001031 "Reverse is an attribute of the feature, where the feature is in the 3' to 5' direction. Again could be applied to primer."))
(assert (= (name SO:0001031) "reverse"))

(defconcept SO:0001032)
(assert (subset-of SO:0001032 SO:0000737))
(assert (= (name SO:0001032) "mitochondrial_DNA"))

(defconcept SO:0001033)
(assert (subset-of SO:0001033 SO:0000745))
(assert (= (name SO:0001033) "chloroplast_DNA"))

(defconcept SO:0001034)
(assert (subset-of SO:0001034 SO:0001014))
(assert (documentation SO:0001034 "A de-branched intron which mimics the structure of pre-miRNA and enters the miRNA processing pathway without Drosha mediated cleavage."))
(assert (= (name SO:0001034) "mirtron"))

(defconcept SO:0001035)
(assert (subset-of SO:0001035 SO:0000655))
(assert (documentation SO:0001035 "A small non coding RNA, part of a silencing system that prevents the spreading of selfish genetic elements."))
(assert (= (name SO:0001035) "piRNA"))

(defconcept SO:0001036)
(assert (derives_from SO:0001036 SO:0000212))
(assert (subset-of SO:0001036 SO:0000253))
(assert (documentation SO:0001036 "A tRNA sequence that has an arginine anticodon, and a 3' arginine binding region."))
(assert (= (name SO:0001036) "arginyl_tRNA"))

(defconcept SO:0001037)
(assert (subset-of SO:0001037 SO:0001411))
(assert (documentation SO:0001037 "A nucleotide region with either intra-genome or intracellular moblity, of varying length, which often carry the information necessary for transfer and recombination with the host genome."))
(assert (= (name SO:0001037) "mobile_genetic_element"))

(defconcept SO:0001038)
(assert (subset-of SO:0001038 SO:0001037))
(assert (documentation SO:0001038 "An MGE that is not integrated into the host chromosome."))
(assert (= (name SO:0001038) "extrachromosomal_mobile_genetic_element"))

(defconcept SO:0001039)
(assert (subset-of SO:0001039 SO:0001037))
(assert (documentation SO:0001039 "An MGE that is integrated into the host chromosome."))
(assert (= (name SO:0001039) "integrated_mobile_genetic_element"))

(defconcept SO:0001040)
(assert (subset-of SO:0001040 SO:0001039))
(assert (documentation SO:0001040 "A plasmid sequence that is integrated within the host chromosome."))
(assert (= (name SO:0001040) "integrated_plasmid"))

(defconcept SO:0001041)
(assert (subset-of SO:0001041 SO:0001235))
(assert (subset-of SO:0001041 SO:0001038))
(assert (documentation SO:0001041 "The region of nucleotide sequence of a virus, a submicroscopic particle that replicates by infecting a host cell."))
(assert (= (name SO:0001041) "viral_sequence"))

(defconcept SO:0001042)
(assert (subset-of SO:0001042 SO:0001041))
(assert (documentation SO:0001042 "The nucleotide sequence of a virus that infects bacteria."))
(assert (= (name SO:0001042) "phage_sequence"))

(defconcept SO:0001043)
(assert (part_of SO:0001043 SO:0000371))
(assert (subset-of SO:0001043 SO:0000946))
(assert (documentation SO:0001043 "An attachment site located on a conjugative transposon and used for site-specific integration of a conjugative transposon."))
(assert (= (name SO:0001043) "attCtn_site"))

(defconcept SO:0001044)
(assert (subset-of SO:0001044 SO:0000336))
(assert (documentation SO:0001044 "A nuclear pseudogene of a mitochndrial gene."))
(assert (= (name SO:0001044) "nuclear_mt_pseudogene"))

(defconcept SO:0001045)
(assert (subset-of SO:0001045 SO:0001039))
(assert (documentation SO:0001045 "A MGE region consisting of two fused plasmids resulting from a replicative transposition event."))
(assert (= (name SO:0001045) "cointegrated_plasmid"))

(defconcept SO:0001046)
(assert (part_of SO:0001046 SO:0000948))
(assert (subset-of SO:0001046 SO:0001048))
(assert (documentation SO:0001046 "Component of the inversion site located at the left of a region susceptible to site-specific inversion."))
(assert (= (name SO:0001046) "IRLinv_site"))

(defconcept SO:0001047)
(assert (part_of SO:0001047 SO:0000948))
(assert (subset-of SO:0001047 SO:0001048))
(assert (documentation SO:0001047 "Component of the inversion site located at the right of a region susceptible to site-specific inversion."))
(assert (= (name SO:0001047) "IRRinv_site"))

(defconcept SO:0001048)
(assert (subset-of SO:0001048 SO:0000342))
(assert (documentation SO:0001048 "A region located within an inversion site."))
(assert (= (name SO:0001048) "inversion_site_part"))

(defconcept SO:0001049)
(assert (subset-of SO:0001049 SO:0000772))
(assert (documentation SO:0001049 "An island that contains genes for integration/excision and the gene and site for the initiation of intercellular transfer by conjugation. It can be complemented for transfer by a conjugative transposon."))
(assert (= (name SO:0001049) "defective_conjugative_transposon"))

(defconcept SO:0001050)
(assert (subset-of SO:0001050 SO:0000840))
(assert (subset-of SO:0001050 SO:0000657))
(assert (documentation SO:0001050 "A portion of a repeat, interrupted by the insertion of another element."))
(assert (= (name SO:0001050) "repeat_fragment"))

(defconcept SO:0001051)
(assert (= (name SO:0001051) "nested_region"))

(defconcept SO:0001052)
(assert (= (name SO:0001052) "nested_repeat"))

(defconcept SO:0001053)
(assert (= (name SO:0001053) "nested_transposon"))

(defconcept SO:0001054)
(assert (subset-of SO:0001054 SO:0000101))
(assert (= (name SO:0001054) "transposon_fragment"))

(defconcept SO:0001055)
(assert (subset-of SO:0001055 SO:0005836))
(assert (documentation SO:0001055 "A regulatory_region that modulates the transcription of a gene or genes."))
(assert (= (name SO:0001055) "transcriptional_cis_regulatory_region"))

(defconcept SO:0001056)
(assert (subset-of SO:0001056 SO:0005836))
(assert (documentation SO:0001056 "A regulatory_region that modulates splicing."))
(assert (= (name SO:0001056) "splicing_regulatory_region"))

(defconcept SO:0001057)
(assert (= (name SO:0001057) "enhanceosome"))

(defconcept SO:0001058)
(assert (subset-of SO:0001058 SO:0001055))
(assert (documentation SO:0001058 "A transcriptional_cis_regulatory_region that restricts the activity of a CRM to a single promoter and which functions only when both itself and an insulator are located between the CRM and the promoter."))
(assert (= (name SO:0001058) "promoter_targeting_sequence"))

(defconcept SO:0001059)
(assert (subset-of SO:0001059 SO:0000110))
(assert (documentation SO:0001059 "A sequence_alteration is a sequence_feature whose extent is the deviation from another sequence."))
(assert (= (name SO:0001059) "sequence_alteration"))

(defconcept SO:0001060)
(assert (documentation SO:0001060 "A sequence_variant is a non exact copy of a sequence_feature or genome exhibiting one or more sequence_alteration."))
(assert (= (name SO:0001060) "sequence_variant"))

(defconcept SO:0001061)
(assert (part_of SO:0001061 SO:0001062))
(assert (subset-of SO:0001061 SO:0100011))
(assert (documentation SO:0001061 "The propeptide_cleavage_site is the arginine/lysine boundary on a propeptide where cleavage occurs."))
(assert (= (name SO:0001061) "propeptide_cleavage_site"))

(defconcept SO:0001062)
(assert (subset-of SO:0001062 SO:0100011))
(assert (documentation SO:0001062 "Part of a peptide chain which is cleaved off during the formation of the mature protein."))
(assert (= (name SO:0001062) "propeptide"))

(defconcept SO:0001063)
(assert (subset-of SO:0001063 SO:0000839))
(assert (documentation SO:0001063 "An immature_peptide_region is the extent of the peptide after it has been translated and before any processing occurs."))
(assert (= (name SO:0001063) "immature_peptide_region"))

(defconcept SO:0001064)
(assert (subset-of SO:0001064 SO:0000419))
(assert (documentation SO:0001064 "Active peptides are proteins which are biologically active, released from a precursor molecule."))
(assert (= (name SO:0001064) "active_peptide"))

(defconcept SO:0001066)
(assert (subset-of SO:0001066 SO:0000839))
(assert (documentation SO:0001066 "Polypeptide region that is rich in a particular amino acid or homopolymeric and greater than three residues in length."))
(assert (= (name SO:0001066) "compositionally_biased_region_of_peptide"))

(defconcept SO:0001067)
(assert (subset-of SO:0001067 SO:0100021))
(assert (documentation SO:0001067 "A sequence motif is a short (up to 20 amino acids) region of biological interest. Such motifs, although they are too short to constitute functional domains, share sequence similarities and are conserved in different proteins. They display a common function (protein-binding, subcellular location etc.)."))
(assert (= (name SO:0001067) "polypeptide_motif"))

(defconcept SO:0001068)
(assert (subset-of SO:0001068 SO:0100021))
(assert (documentation SO:0001068 "A polypeptide_repeat is a single copy of an internal sequence repetition."))
(assert (= (name SO:0001068) "polypeptide_repeat"))

(defconcept SO:0001070)
(assert (subset-of SO:0001070 SO:0000839))
(assert (documentation SO:0001070 "Region of polypeptide with a given structural property."))
(assert (= (name SO:0001070) "polypeptide_structural_region"))

(defconcept SO:0001071)
(assert (subset-of SO:0001071 SO:0001070))
(assert (documentation SO:0001071 "Arrangement of the polypeptide with respect to the lipid bilayer."))
(assert (= (name SO:0001071) "membrane_structure"))

(defconcept SO:0001072)
(assert (part_of SO:0001072 SO:0001071))
(assert (subset-of SO:0001072 SO:0001070))
(assert (documentation SO:0001072 "Polypeptide region that is localized outside of a lipid bilayer."))
(assert (= (name SO:0001072) "extramembrane_polypeptide_region"))

(defconcept SO:0001073)
(assert (subset-of SO:0001073 SO:0001072))
(assert (documentation SO:0001073 "Polypeptide region that is localized inside the cytoplasm."))
(assert (= (name SO:0001073) "cytoplasmic_polypeptide_region"))

(defconcept SO:0001074)
(assert (subset-of SO:0001074 SO:0001072))
(assert (documentation SO:0001074 "Polypeptide region that is localized outside of a lipid bilayer and outside of the cytoplasm."))
(assert (= (name SO:0001074) "non_cytoplasmic_polypeptide_region"))

(defconcept SO:0001075)
(assert (part_of SO:0001075 SO:0001071))
(assert (subset-of SO:0001075 SO:0001070))
(assert (documentation SO:0001075 "Polypeptide region present in the lipid bilayer."))
(assert (= (name SO:0001075) "intramembrane_polypeptide_region"))

(defconcept SO:0001076)
(assert (subset-of SO:0001076 SO:0001075))
(assert (documentation SO:0001076 "Polypeptide region localized within the lipid bilayer where both ends traverse the same membrane."))
(assert (= (name SO:0001076) "membrane_peptide_loop"))

(defconcept SO:0001077)
(assert (subset-of SO:0001077 SO:0001075))
(assert (documentation SO:0001077 "Polypeptide region traversing the lipid bilayer."))
(assert (= (name SO:0001077) "transmembrane_polypeptide_region"))

(defconcept SO:0001078)
(assert (subset-of SO:0001078 SO:0001070))
(assert (documentation SO:0001078 "A region of peptide with secondary structure has hydrogen bonding along the peptide chain that causes a defined conformation of the chain."))
(assert (= (name SO:0001078) "polypeptide_secondary_structure"))

(defconcept SO:0001079)
(assert (subset-of SO:0001079 SO:0001070))
(assert (documentation SO:0001079 "Motif is a three-dimensional structural element within the chain, which appears also in a variety of other molecules. Unlike a domain, a motif does not need to form a stable globular unit."))
(assert (= (name SO:0001079) "polypeptide_structural_motif"))

(defconcept SO:0001080)
(assert (subset-of SO:0001080 SO:0001079))
(assert (documentation SO:0001080 "A coiled coil is a structural motif in proteins, in which alpha-helices are coiled together like the strands of a rope."))
(assert (= (name SO:0001080) "coiled_coil"))

(defconcept SO:0001081)
(assert (has_part SO:0001081 SO:0001128))
(assert (has_part SO:0001081 SO:0001114))
(assert (subset-of SO:0001081 SO:0001079))
(assert (documentation SO:0001081 "A motif comprising two helices separated by a turn."))
(assert (= (name SO:0001081) "helix_turn_helix"))

(defconcept SO:0001082)
(assert (subset-of SO:0001082 SO:0000700))
(assert (documentation SO:0001082 "Incompatibility in the sequence due to some experimental problem."))
(assert (= (name SO:0001082) "polypeptide_sequencing_information"))

(defconcept SO:0001083)
(assert (subset-of SO:0001083 SO:0001082))
(assert (documentation SO:0001083 "Indicates that two consecutive residues in a fragment sequence are not consecutive in the full-length protein and that there are a number of unsequenced residues between them."))
(assert (= (name SO:0001083) "non_adjacent_residues"))

(defconcept SO:0001084)
(assert (subset-of SO:0001084 SO:0001082))
(assert (documentation SO:0001084 "The residue at an extremity of the sequence is not the terminal residue."))
(assert (= (name SO:0001084) "non_terminal_residue"))

(defconcept SO:0001085)
(assert (subset-of SO:0001085 SO:0001082))
(assert (documentation SO:0001085 "Different sources report differing sequences."))
(assert (= (name SO:0001085) "sequence_conflict"))

(defconcept SO:0001086)
(assert (subset-of SO:0001086 SO:0001082))
(assert (documentation SO:0001086 "Describes the positions in a sequence where the authors are unsure about the sequence assignment."))
(assert (= (name SO:0001086) "sequence_uncertainty"))

(defconcept SO:0001087)
(assert (documentation SO:0001087 "Posttranslationally formed amino acid bonds."))
(assert (= (name SO:0001087) "cross_link"))

(defconcept SO:0001088)
(assert (documentation SO:0001088 "The covalent bond between sulfur atoms that binds two peptide chains or different parts of one peptide chain and is a structural determinant in many protein molecules."))
(assert (= (name SO:0001088) "disulfide_bond"))

(defconcept SO:0001089)
(assert (subset-of SO:0001089 SO:0100001))
(assert (documentation SO:0001089 "A region where a transformation occurs in a protein after it has been synthesized. This which may regulate, stabilize, crosslink or introduce new chemical functionalities in the protein."))
(assert (= (name SO:0001089) "post_translationally_modified_region"))

(defconcept SO:0001090)
(assert (documentation SO:0001090 "Binding involving a covalent bond."))
(assert (= (name SO:0001090) "covalent_binding_site"))

(defconcept SO:0001091)
(assert (documentation SO:0001091 "Binding site for any chemical group (co-enzyme, prosthetic group, etc.)."))
(assert (= (name SO:0001091) "non_covalent_binding_site"))

(defconcept SO:0001092)
(assert (subset-of SO:0001092 SO:0100002))
(assert (subset-of SO:0001092 SO:0000409))
(assert (documentation SO:0001092 "Residue is part of a binding site for a metal ion."))
(assert (= (name SO:0001092) "polypeptide_metal_contact"))

(defconcept SO:0001093)
(assert (subset-of SO:0001093 SO:0100002))
(assert (subset-of SO:0001093 SO:0000409))
(assert (documentation SO:0001093 "Residues involved in protein-protein interactions."))
(assert (= (name SO:0001093) "protein_protein_contact"))

(defconcept SO:0001094)
(assert (subset-of SO:0001094 SO:0001092))
(assert (documentation SO:0001094 "Residue involved in contact with calcium."))
(assert (= (name SO:0001094) "polypeptide_calcium_ion_contact_site"))

(defconcept SO:0001095)
(assert (subset-of SO:0001095 SO:0001092))
(assert (documentation SO:0001095 "Residue involved in contact with cobalt."))
(assert (= (name SO:0001095) "polypeptide_cobalt_ion_contact_site"))

(defconcept SO:0001096)
(assert (subset-of SO:0001096 SO:0001092))
(assert (documentation SO:0001096 "Residue involved in contact with copper."))
(assert (= (name SO:0001096) "polypeptide_copper_ion_contact_site"))

(defconcept SO:0001097)
(assert (subset-of SO:0001097 SO:0001092))
(assert (documentation SO:0001097 "Residue involved in contact with iron."))
(assert (= (name SO:0001097) "polypeptide_iron_ion_contact_site"))

(defconcept SO:0001098)
(assert (subset-of SO:0001098 SO:0001092))
(assert (documentation SO:0001098 "Residue involved in contact with magnesium."))
(assert (= (name SO:0001098) "polypeptide_magnesium_ion_contact_site"))

(defconcept SO:0001099)
(assert (subset-of SO:0001099 SO:0001092))
(assert (documentation SO:0001099 "Residue involved in contact with manganese."))
(assert (= (name SO:0001099) "polypeptide_manganese_ion_contact_site"))

(defconcept SO:0001100)
(assert (subset-of SO:0001100 SO:0001092))
(assert (documentation SO:0001100 "Residue involved in contact with molybdenum."))
(assert (= (name SO:0001100) "polypeptide_molybdenum_ion_contact_site"))

(defconcept SO:0001101)
(assert (subset-of SO:0001101 SO:0001092))
(assert (documentation SO:0001101 "Residue involved in contact with nickel."))
(assert (= (name SO:0001101) "polypeptide_nickel_ion_contact_site"))

(defconcept SO:0001102)
(assert (subset-of SO:0001102 SO:0001092))
(assert (documentation SO:0001102 "Residue involved in contact with tungsten."))
(assert (= (name SO:0001102) "polypeptide_tungsten_ion_contact_site"))

(defconcept SO:0001103)
(assert (subset-of SO:0001103 SO:0001092))
(assert (documentation SO:0001103 "Residue involved in contact with zinc."))
(assert (= (name SO:0001103) "polypeptide_zinc_ion_contact_site"))

(defconcept SO:0001104)
(assert (part_of SO:0001104 SO:0100019))
(assert (subset-of SO:0001104 SO:0001237))
(assert (documentation SO:0001104 "Amino acid involved in the activity of an enzyme."))
(assert (= (name SO:0001104) "catalytic_residue"))

(defconcept SO:0001105)
(assert (subset-of SO:0001105 SO:0100002))
(assert (subset-of SO:0001105 SO:0000409))
(assert (documentation SO:0001105 "Residues which interact with a ligand."))
(assert (= (name SO:0001105) "polypeptide_ligand_contact"))

(defconcept SO:0001106)
(assert (subset-of SO:0001106 SO:0001078))
(assert (documentation SO:0001106 "A motif of five consecutive residues and two H-bonds in which: Residue(i) is Aspartate or Asparagine (Asx), side-chain O of residue(i) is H-bonded to the main-chain NH of residue(i+2) or (i+3), main-chain CO of residue(i) is H-bonded to the main-chain NH of residue(i+3) or (i+4)."))
(assert (= (name SO:0001106) "asx_motif"))

(defconcept SO:0001107)
(assert (subset-of SO:0001107 SO:0001078))
(assert (documentation SO:0001107 "A motif of three residues within a beta-sheet in which the main chains of two consecutive residues are H-bonded to that of the third, and in which the dihedral angles are as follows: Residue(i): -140 degrees < phi(l) -20 degrees , -90 degrees < psi(l) < 40 degrees. Residue (i+1): -180 degrees < phi < -25 degrees or +120 degrees < phi < +180 degrees, +40 degrees < psi < +180 degrees or -180 degrees < psi < -120 degrees."))
(assert (= (name SO:0001107) "beta_bulge"))

(defconcept SO:0001108)
(assert (subset-of SO:0001108 SO:0001078))
(assert (documentation SO:0001108 "A motif of three residues within a beta-sheet consisting of two H-bonds. Beta bulge loops often occur at the loop ends of beta-hairpins."))
(assert (= (name SO:0001108) "beta_bulge_loop"))

(defconcept SO:0001109)
(assert (subset-of SO:0001109 SO:0001108))
(assert (documentation SO:0001109 "A motif of three residues within a beta-sheet consisting of two H-bonds in which: the main-chain NH of residue(i) is H-bonded to the main-chain CO of residue(i+4), the main-chain CO of residue i is H-bonded to the main-chain NH of residue(i+3), these loops have an RL nest at residues i+2 and i+3."))
(assert (= (name SO:0001109) "beta_bulge_loop_five"))

(defconcept SO:0001110)
(assert (subset-of SO:0001110 SO:0001108))
(assert (documentation SO:0001110 "A motif of three residues within a beta-sheet consisting of two H-bonds in which: the main-chain NH of residue(i) is H-bonded to the main-chain CO of residue(i+5), the main-chain CO of residue i is H-bonded to the main-chain NH of residue(i+4), these loops have an RL nest at residues i+3 and i+4."))
(assert (= (name SO:0001110) "beta_bulge_loop_six"))

(defconcept SO:0001111)
(assert (subset-of SO:0001111 SO:0001078))
(assert (documentation SO:0001111 "A beta strand describes a single length of polypeptide chain that forms part of a beta sheet. A single continuous stretch of amino acids adopting an extended conformation of hydrogen bonds between the N-O and the C=O of another part of the peptide. This forms a secondary protein structure in which two or more extended polypeptide regions are hydrogen-bonded to one another in a planar array."))
(assert (= (name SO:0001111) "beta_strand"))

(defconcept SO:0001112)
(assert (subset-of SO:0001112 SO:0001111))
(assert (documentation SO:0001112 "A peptide region which hydrogen bonded to another region of peptide running in the oposite direction (one running N-terminal to C-terminal and one running C-terminal to N-terminal). Hydrogen bonding occurs between every other C=O from one strand to every other N-H on the adjacent strand. In this case, if two atoms C-alpha (i) and C-alpha (j) are adjacent in two hydrogen-bonded beta strands, then they form two mutual backbone hydrogen bonds to each other's flanking peptide groups; this is known as a close pair of hydrogen bonds. The peptide backbone dihedral angles (phi, psi) are about (-140 degrees, 135 degrees) in antiparallel sheets."))
(assert (= (name SO:0001112) "antiparallel_beta_strand"))

(defconcept SO:0001113)
(assert (subset-of SO:0001113 SO:0001111))
(assert (documentation SO:0001113 "A peptide region which hydrogen bonded to another region of peptide running in the oposite direction (both running N-terminal to C-terminal). This orientation is slightly less stable because it introduces nonplanarity in the inter-strand hydrogen bonding pattern. Hydrogen bonding occurs between every other C=O from one strand to every other N-H on the adjacent strand. In this case, if two atoms C-alpha (i)and C-alpha (j) are adjacent in two hydrogen-bonded beta strands, then they do not hydrogen bond to each other; rather, one residue forms hydrogen bonds to the residues that flank the other (but not vice versa). For example, residue i may form hydrogen bonds to residues j - 1 and j + 1; this is known as a wide pair of hydrogen bonds. By contrast, residue j may hydrogen-bond to different residues altogether, or to none at all. The dihedral angles (phi, psi) are about (-120 degrees, 115 degrees) in parallel sheets."))
(assert (= (name SO:0001113) "parallel_beta_strand"))

(defconcept SO:0001114)
(assert (subset-of SO:0001114 SO:0001078))
(assert (documentation SO:0001114 "A helix is a secondary_structure conformation where the peptide backbone forms a coil."))
(assert (= (name SO:0001114) "peptide_helix"))

(defconcept SO:0001115)
(assert (subset-of SO:0001115 SO:0001114))
(assert (documentation SO:0001115 "A left handed helix is a region of peptide where the coiled conformation turns in an anticlockwise, left handed screw."))
(assert (= (name SO:0001115) "left_handed_peptide_helix"))

(defconcept SO:0001116)
(assert (subset-of SO:0001116 SO:0001114))
(assert (documentation SO:0001116 "A right handed helix is a region of peptide where the coiled conformation turns in a clockwise, right handed screw."))
(assert (= (name SO:0001116) "right_handed_peptide_helix"))

(defconcept SO:0001117)
(assert (subset-of SO:0001117 SO:0001116))
(assert (documentation SO:0001117 "The helix has 3.6 residues per turn which corersponds to a translation of 1.5 angstroms (= 0.15 nm) along the helical axis. Every backbone N-H group donates a hydrogen bond to the backbone C=O group of the amino acid four residues earlier."))
(assert (= (name SO:0001117) "alpha_helix"))

(defconcept SO:0001118)
(assert (subset-of SO:0001118 SO:0001116))
(assert (documentation SO:0001118 "The pi helix has 4.1 residues per turn and a translation of 1.15  (=0.115 nm) along the helical axis. The N-H group of an amino acid forms a hydrogen bond with the C=O group of the amino acid five residues earlier."))
(assert (= (name SO:0001118) "pi_helix"))

(defconcept SO:0001119)
(assert (subset-of SO:0001119 SO:0001116))
(assert (documentation SO:0001119 "The 3-10 helix has 3 residues per turn with a translation of 2.0 angstroms (=0.2 nm) along the helical axis. The N-H group of an amino acid forms a hydrogen bond with the C=O group of the amino acid three residues earlier."))
(assert (= (name SO:0001119) "three_ten_helix"))

(defconcept SO:0001120)
(assert (subset-of SO:0001120 SO:0001078))
(assert (documentation SO:0001120 "A motif of two consecutive residues with dihedral angles. Nest should not have Proline as any residue. Nests frequently occur as parts of other motifs such as Schellman loops."))
(assert (= (name SO:0001120) "polypeptide_nest_motif"))

(defconcept SO:0001121)
(assert (subset-of SO:0001121 SO:0001120))
(assert (documentation SO:0001121 "A motif of two consecutive residues with dihedral angles: Residue(i): +20 degrees < phi < +140 degrees, -40 degrees < psi < +90 degrees. Residue(i+1): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees."))
(assert (= (name SO:0001121) "polypeptide_nest_left_right_motif"))

(defconcept SO:0001122)
(assert (subset-of SO:0001122 SO:0001120))
(assert (documentation SO:0001122 "A motif of two consecutive residues with dihedral angles: Residue(i): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees. Residue(i+1): +20 degrees < phi < +140 degrees, -40 degrees < psi < +90 degrees."))
(assert (= (name SO:0001122) "polypeptide_nest_right_left_motif"))

(defconcept SO:0001123)
(assert (subset-of SO:0001123 SO:0001078))
(assert (documentation SO:0001123 "A motif of six or seven consecutive residues that contains two H-bonds."))
(assert (= (name SO:0001123) "schellmann_loop"))

(defconcept SO:0001124)
(assert (subset-of SO:0001124 SO:0001123))
(assert (documentation SO:0001124 "Wild type: A motif of seven consecutive residues that contains two H-bonds in which: the main-chain CO of residue(i) is H-bonded to the main-chain NH of residue(i+6), the main-chain CO of residue(i+1) is H-bonded to the main-chain NH of residue(i+5)."))
(assert (= (name SO:0001124) "schellmann_loop_seven"))

(defconcept SO:0001125)
(assert (subset-of SO:0001125 SO:0001123))
(assert (documentation SO:0001125 "Common Type: A motif of six consecutive residues that contains two H-bonds in which: the main-chain CO of residue(i) is H-bonded to the main-chain NH of residue(i+5) the main-chain CO of residue(i+1) is H-bonded to the main-chain NH of residue(i+4)."))
(assert (= (name SO:0001125) "schellmann_loop_six"))

(defconcept SO:0001126)
(assert (subset-of SO:0001126 SO:0001078))
(assert (documentation SO:0001126 "A motif of five consecutive residues and two hydrogen bonds in which: residue(i) is Serine (S) or Threonine (T), the side-chain O of residue(i) is H-bonded to the main-chain NH of residue(i+2) or (i+3) , the main-chain CO group of residue(i) is H-bonded to the main-chain NH of residue(i+3) or (i+4)."))
(assert (= (name SO:0001126) "serine_threonine_motif"))

(defconcept SO:0001127)
(assert (subset-of SO:0001127 SO:0001078))
(assert (documentation SO:0001127 "A motif of four or five consecutive residues and one H-bond in which: residue(i) is Serine (S) or Threonine (T), the side-chain OH of residue(i) is H-bonded to the main-chain CO of residue(i3) or (i4), Phi angles of residues(i1), (i2) and (i3) are negative."))
(assert (= (name SO:0001127) "serine_threonine_staple_motif"))

(defconcept SO:0001128)
(assert (subset-of SO:0001128 SO:0001078))
(assert (documentation SO:0001128 "A reversal in the direction of the backbone of a protein that is stabilized by hydrogen bond between backbone NH and CO groups, involving no more than 4 amino acid residues."))
(assert (= (name SO:0001128) "polypeptide_turn_motif"))

(defconcept SO:0001129)
(assert (subset-of SO:0001129 SO:0000912))
(assert (documentation SO:0001129 "Left handed type I (dihedral angles):- Residue(i): -140 degrees < chi (1) -120 degrees < -20 degrees, -90 degrees < psi +120 degrees < +40 degrees. Residue(i+1): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees."))
(assert (= (name SO:0001129) "asx_turn_left_handed_type_one"))

(defconcept SO:0001130)
(assert (subset-of SO:0001130 SO:0000912))
(assert (documentation SO:0001130 "Left handed type II (dihedral angles):- Residue(i): -140 degrees < chi (1) -120 degrees < -20 degrees, +80 degrees < psi +120 degrees < +180 degrees. Residue(i+1): +20 degrees < phi < +140 degrees, -40 degrees < psi < +90 degrees."))
(assert (= (name SO:0001130) "asx_turn_left_handed_type_two"))

(defconcept SO:0001131)
(assert (subset-of SO:0001131 SO:0000912))
(assert (documentation SO:0001131 "Right handed type II (dihedral angles):- Residue(i): -140 degrees < chi (1) -120 degrees < -20 degrees, +80 degrees < psi +120 degrees < +180 degrees. Residue(i+1): +20 degrees < phi < +140 degrees, -40 degrees < psi < +90 degrees."))
(assert (= (name SO:0001131) "asx_turn_right_handed_type_two"))

(defconcept SO:0001132)
(assert (subset-of SO:0001132 SO:0000912))
(assert (documentation SO:0001132 "Right handed type I (dihedral angles):- Residue(i): -140 degrees < chi (1) -120 degrees < -20 degrees, -90 degrees < psi +120 degrees < +40 degrees. Residue(i+1): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees."))
(assert (= (name SO:0001132) "asx_turn_right_handed_type_one"))

(defconcept SO:0001133)
(assert (subset-of SO:0001133 SO:0001128))
(assert (documentation SO:0001133 "A motif of four consecutive residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth. It is characterized by the dihedral angles of the second and third residues, which are the basis for sub-categorization."))
(assert (= (name SO:0001133) "beta_turn"))

(defconcept SO:0001134)
(assert (subset-of SO:0001134 SO:0001133))
(assert (documentation SO:0001134 "Left handed type I:A motif of four consecutive residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth. It is characterized by the dihedral angles:- Residue(i+1): -140 degrees > phi > -20 degrees, -90 degrees > psi > +40 degrees. Residue(i+2): -140 degrees > phi > -20 degrees, -90 degrees > psi > +40 degrees."))
(assert (= (name SO:0001134) "beta_turn_left_handed_type_one"))

(defconcept SO:0001135)
(assert (subset-of SO:0001135 SO:0001133))
(assert (documentation SO:0001135 "Left handed type II: A motif of four consecutive residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth. It is characterized by the dihedral angles: Residue(i+1): -140 degrees > phi > -20 degrees, +80 degrees > psi > +180 degrees. Residue(i+2): +20 degrees > phi > +140 degrees, -40 degrees > psi > +90 degrees."))
(assert (= (name SO:0001135) "beta_turn_left_handed_type_two"))

(defconcept SO:0001136)
(assert (subset-of SO:0001136 SO:0001133))
(assert (documentation SO:0001136 "Right handed type I:A motif of four consecutive residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth. It is characterized by the dihedral angles: Residue(i+1): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees. Residue(i+2): -140 degrees < phi < -20 degrees, -90 degrees < psi < +40 degrees."))
(assert (= (name SO:0001136) "beta_turn_right_handed_type_one"))

(defconcept SO:0001137)
(assert (subset-of SO:0001137 SO:0001133))
(assert (documentation SO:0001137 "Right handed type II:A motif of four consecutive residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth. It is characterized by the dihedral angles: Residue(i+1): -140 degrees < phi < -20 degrees, +80 degrees < psi < +180 degrees. Residue(i+2): +20 degrees < phi < +140 degrees, -40 degrees < psi < +90 degrees."))
(assert (= (name SO:0001137) "beta_turn_right_handed_type_two"))

(defconcept SO:0001138)
(assert (subset-of SO:0001138 SO:0001128))
(assert (documentation SO:0001138 "Gamma turns, defined for 3 residues i,( i+1),( i+2) if a hydrogen bond exists between residues i and i+2 and the phi and psi angles of residue i+1 fall within 40 degrees."))
(assert (= (name SO:0001138) "gamma_turn"))

(defconcept SO:0001139)
(assert (subset-of SO:0001139 SO:0001138))
(assert (documentation SO:0001139 "Gamma turns, defined for 3 residues i, i+1, i+2 if a hydrogen bond exists between residues i and i+2 and the phi and psi angles of residue i+1 fall within 40 degrees: phi(i+1)=75.0 - psi(i+1)=-64.0."))
(assert (= (name SO:0001139) "gamma_turn_classic"))

(defconcept SO:0001140)
(assert (subset-of SO:0001140 SO:0001138))
(assert (documentation SO:0001140 "Gamma turns, defined for 3 residues i, i+1, i+2 if a hydrogen bond exists between residues i and i+2 and the phi and psi angles of residue i+1 fall within 40 degrees: phi(i+1)=-79.0 - psi(i+1)=69.0."))
(assert (= (name SO:0001140) "gamma_turn_inverse"))

(defconcept SO:0001141)
(assert (subset-of SO:0001141 SO:0001128))
(assert (documentation SO:0001141 "A motif of three consecutive residues and one H-bond in which: residue(i) is Serine (S) or Threonine (T), the side-chain O of residue(i) is H-bonded to the main-chain NH of residue(i+2)."))
(assert (= (name SO:0001141) "serine_threonine_turn"))

(defconcept SO:0001142)
(assert (subset-of SO:0001142 SO:0001141))
(assert (documentation SO:0001142 "The peptide twists in an anticlockwise, left handed manner. The dihedral angles for this turn are: Residue(i): -140 degrees < chi(1) -120 degrees < -20 degrees, -90 degrees psi +120 degrees < +40 degrees, residue(i+1): -140 degrees < phi < -20 degrees, -90 < psi < +40 degrees."))
(assert (= (name SO:0001142) "st_turn_left_handed_type_one"))

(defconcept SO:0001143)
(assert (subset-of SO:0001143 SO:0001141))
(assert (documentation SO:0001143 "The peptide twists in an anticlockwise, left handed manner. The dihedral angles for this turn are: Residue(i): -140 degrees < chi(1) -120 degrees < -20 degrees, +80 degrees psi +120 degrees < +180 degrees, residue(i+1): +20 degrees < phi < +140 degrees, -40 < psi < +90 degrees."))
(assert (= (name SO:0001143) "st_turn_left_handed_type_two"))

(defconcept SO:0001144)
(assert (subset-of SO:0001144 SO:0001141))
(assert (documentation SO:0001144 "The peptide twists in an clockwise, right handed manner. The dihedral angles for this turn are: Residue(i): -140 degrees < chi(1) -120 degrees < -20 degrees, -90 degrees psi +120 degrees < +40 degrees, residue(i+1): -140 degrees < phi < -20 degrees, -90 < psi < +40 degrees."))
(assert (= (name SO:0001144) "st_turn_right_handed_type_one"))

(defconcept SO:0001145)
(assert (subset-of SO:0001145 SO:0001141))
(assert (documentation SO:0001145 "The peptide twists in an clockwise, right handed manner. The dihedral angles for this turn are: Residue(i): -140 degrees < chi(1) -120 degrees < -20 degrees, +80 degrees psi +120 degrees < +180 degrees, residue(i+1): +20 degrees < phi < +140 degrees, -40 < psi < +90 degrees."))
(assert (= (name SO:0001145) "st_turn_right_handed_type_two"))

(defconcept SO:0001146)
(assert (subset-of SO:0001146 SO:0000839))
(assert (documentation SO:0001146 "A site of sequence variation (alteration). Alternative sequence due to naturally occuring events such as polymorphisms and altermatve splicing or experimental methods such as site directed mutagenesis."))
(assert (= (name SO:0001146) "polypeptide_variation_site"))

(defconcept SO:0001147)
(assert (subset-of SO:0001147 SO:0001146))
(assert (documentation SO:0001147 "Describes the natural sequence variants due to polymorphisms, disease-associated mutations, RNA editing and variations between strains, isolates or cultivars."))
(assert (= (name SO:0001147) "natural_variant_site"))

(defconcept SO:0001148)
(assert (subset-of SO:0001148 SO:0001146))
(assert (documentation SO:0001148 "Site which has been experimentally altered."))
(assert (= (name SO:0001148) "mutated_variant_site"))

(defconcept SO:0001149)
(assert (subset-of SO:0001149 SO:0001146))
(assert (documentation SO:0001149 "Description of sequence variants produced by alternative splicing, alternative promoter usage, alternative initiation and ribosomal frameshifting."))
(assert (= (name SO:0001149) "alternate_sequence_site"))

(defconcept SO:0001150)
(assert (subset-of SO:0001150 SO:0001133))
(assert (documentation SO:0001150 "A motif of four consecutive peptide resides of type VIa or type VIb and where the i+2 residue is cis-proline."))
(assert (= (name SO:0001150) "beta_turn_type_six"))

(defconcept SO:0001151)
(assert (subset-of SO:0001151 SO:0001150))
(assert (documentation SO:0001151 "A motif of four consecutive peptide residues, of which the i+2 residue is proline, and that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth and is characterized by the dihedral angles: Residue(i+1): phi ~ -60 degrees, psi ~ 120 degrees. Residue(i+2): phi ~ -90 degrees, psi ~ 0 degrees."))
(assert (= (name SO:0001151) "beta_turn_type_six_a"))

(defconcept SO:0001152)
(assert (subset-of SO:0001152 SO:0001151))
(assert (= (name SO:0001152) "beta_turn_type_six_a_one"))

(defconcept SO:0001153)
(assert (subset-of SO:0001153 SO:0001151))
(assert (= (name SO:0001153) "beta_turn_type_six_a_two"))

(defconcept SO:0001154)
(assert (subset-of SO:0001154 SO:0001150))
(assert (documentation SO:0001154 "A motif of four consecutive peptide residues, of which the i+2 residue is proline, and that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth and is characterized by the dihedral angles: Residue(i+1): phi ~ -120 degrees, psi ~ 120 degrees. Residue(i+2): phi ~ -60 degrees, psi ~ 0 degrees."))
(assert (= (name SO:0001154) "beta_turn_type_six_b"))

(defconcept SO:0001155)
(assert (subset-of SO:0001155 SO:0001133))
(assert (documentation SO:0001155 "A motif of four consecutive peptide residues that may contain one H-bond, which, if present, is between the main-chain CO of the first residue and the main-chain NH of the fourth and is characterized by the dihedral angles: Residue(i+1): phi ~ -60 degrees, psi ~ -30 degrees. Residue(i+2): phi ~ -120 degrees, psi ~ 120 degrees."))
(assert (= (name SO:0001155) "beta_turn_type_eight"))

(defconcept SO:0001156)
(assert (part_of SO:0001156 SO:0000170))
(assert (subset-of SO:0001156 SO:0000235))
(assert (documentation SO:0001156 "A sequence element characteristic of some RNA polymerase II promoters, usually located between -10 and -60 relative to the TSS. Consensus sequence is WATCGATW."))
(assert (= (name SO:0001156) "DRE_motif"))

(defconcept SO:0001157)
(assert (subset-of SO:0001157 SO:0000713))
(assert (documentation SO:0001157 "A sequence element characteristic of some RNA polymerase II promoters, located immediately upstream of some TATA box elements with respect to the TSS (+1). Consensus sequence is YGGTCACACTR. Marked spatial preference within core promoter; tend to occur near the TSS, although not as tightly as INR (SO:0000014)."))
(assert (= (name SO:0001157) "DMv4_motif"))

(defconcept SO:0001158)
(assert (part_of SO:0001158 SO:0000170))
(assert (subset-of SO:0001158 SO:0000235))
(assert (documentation SO:0001158 "A sequence element characteristic of some RNA polymerase II promoters, usually located between -60 and +1 relative to the TSS. Consensus sequence is AWCAGCTGWT. Tends to co-occur with DMv2 (SO:0001161). Tends to not occur with DPE motif (SO:0000015)."))
(assert (= (name SO:0001158) "E_box_motif"))

(defconcept SO:0001159)
(assert (part_of SO:0001159 SO:0000170))
(assert (subset-of SO:0001159 SO:0000713))
(assert (documentation SO:0001159 "A sequence element characteristic of some RNA polymerase II promoters, usually located between -50 and -10 relative to the TSS. Consensus sequence is KTYRGTATWTTT. Tends to co-occur with DMv4 (SO:0001157) . Tends to not occur with DPE motif (SO:0000015) or MTE (SO:0001162)."))
(assert (= (name SO:0001159) "DMv5_motif"))

(defconcept SO:0001160)
(assert (part_of SO:0001160 SO:0000170))
(assert (subset-of SO:0001160 SO:0000713))
(assert (documentation SO:0001160 "A sequence element characteristic of some RNA polymerase II promoters, usually located between -30 and +15 relative to the TSS. Consensus sequence is KNNCAKCNCTRNY. Tends to co-occur with DMv2 (SO:0001161). Tends to not occur with DPE motif (SO:0000015) or MTE (0001162)."))
(assert (= (name SO:0001160) "DMv3_motif"))

(defconcept SO:0001161)
(assert (part_of SO:0001161 SO:0000170))
(assert (subset-of SO:0001161 SO:0000713))
(assert (documentation SO:0001161 "A sequence element characteristic of some RNA polymerase II promoters, usually located between -60 and -45 relative to the TSS. Consensus sequence is MKSYGGCARCGSYSS. Tends to co-occur with DMv3 (SO:0001160). Tends to not occur with DPE motif (SO:0000015) or MTE (SO:0001162)."))
(assert (= (name SO:0001161) "DMv2_motif"))

(defconcept SO:0001162)
(assert (part_of SO:0001162 SO:0000170))
(assert (subset-of SO:0001162 SO:0000235))
(assert (documentation SO:0001162 "A sequence element characteristic of some RNA polymerase II promoters, usually located between +20 and +30 relative to the TSS. Consensus sequence is CSARCSSAACGS. Tends to co-occur with INR motif (SO:0000014). Tends to not occur with DPE motif (SO:0000015) or DMv5 (SO:0001159)."))
(assert (= (name SO:0001162) "MTE"))

(defconcept SO:0001163)
(assert (part_of SO:0001163 SO:0000170))
(assert (subset-of SO:0001163 SO:0000235))
(assert (documentation SO:0001163 "A promoter motif with consensus sequence TCATTCG."))
(assert (= (name SO:0001163) "INR1_motif"))

(defconcept SO:0001164)
(assert (part_of SO:0001164 SO:0000170))
(assert (subset-of SO:0001164 SO:0000713))
(assert (documentation SO:0001164 "A promoter motif with consensus sequence CGGACGT."))
(assert (= (name SO:0001164) "DPE1_motif"))

(defconcept SO:0001165)
(assert (part_of SO:0001165 SO:0000170))
(assert (subset-of SO:0001165 SO:0000713))
(assert (documentation SO:0001165 "A promoter motif with consensus sequence CARCCCT."))
(assert (= (name SO:0001165) "DMv1_motif"))

(defconcept SO:0001166)
(assert (part_of SO:0001166 SO:0000170))
(assert (subset-of SO:0001166 SO:0000235))
(assert (documentation SO:0001166 "A non directional promoter motif with consensus sequence GAGAGCG."))
(assert (= (name SO:0001166) "GAGA_motif"))

(defconcept SO:0001167)
(assert (part_of SO:0001167 SO:0000170))
(assert (subset-of SO:0001167 SO:0000713))
(assert (documentation SO:0001167 "A non directional promoter motif with consensus CGMYGYCR."))
(assert (= (name SO:0001167) "NDM2_motif"))

(defconcept SO:0001168)
(assert (part_of SO:0001168 SO:0000170))
(assert (subset-of SO:0001168 SO:0000713))
(assert (documentation SO:0001168 "A non directional promoter motif with consensus sequence GAAAGCT."))
(assert (= (name SO:0001168) "NDM3_motif"))

(defconcept SO:0001169)
(assert (subset-of SO:0001169 SO:0001041))
(assert (documentation SO:0001169 "A ds_RNA_viral_sequence is a viral_sequence that is the sequence of a virus that exists as double stranded RNA."))
(assert (= (name SO:0001169) "ds_RNA_viral_sequence"))

(defconcept SO:0001170)
(assert (subset-of SO:0001170 SO:0000208))
(assert (documentation SO:0001170 "A kind of DNA transposon that populates the genomes of protists, fungi, and animals, characterized by a unique set of proteins necessary for their transposition, including a protein-primed DNA polymerase B, retroviral integrase, cysteine protease, and ATPase. Polintons are characterized by 6-bp target site duplications, terminal-inverted repeats that are several hundred nucleotides long, and 5'-AG and TC-3' termini. Polintons exist as autonomous and nonautonomous elements."))
(assert (= (name SO:0001170) "polinton"))

(defconcept SO:0001171)
(assert (subset-of SO:0001171 SO:0000651))
(assert (documentation SO:0001171 "A component of the large ribosomal subunit in mitochondrial rRNA."))
(assert (= (name SO:0001171) "rRNA_21S"))

(defconcept SO:0001172)
(assert (part_of SO:0001172 SO:0000253))
(assert (subset-of SO:0001172 SO:0000834))
(assert (documentation SO:0001172 "A region of a tRNA."))
(assert (= (name SO:0001172) "tRNA_region"))

(defconcept SO:0001173)
(assert (subset-of SO:0001173 SO:0001172))
(assert (documentation SO:0001173 "A sequence of seven nucleotide bases in tRNA which contains the anticodon. It has the sequence 5'-pyrimidine-purine-anticodon-modified purine-any base-3."))
(assert (= (name SO:0001173) "anticodon_loop"))

(defconcept SO:0001174)
(assert (part_of SO:0001174 SO:0001173))
(assert (subset-of SO:0001174 SO:0001172))
(assert (documentation SO:0001174 "A sequence of three nucleotide bases in tRNA which recognizes a codon in mRNA."))
(assert (= (name SO:0001174) "anticodon"))

(defconcept SO:0001175)
(assert (subset-of SO:0001175 SO:0001172))
(assert (documentation SO:0001175 "Base sequence at the 3' end of a tRNA. The 3'-hydroxyl group on the terminal adenosine is the attachment point for the amino acid."))
(assert (= (name SO:0001175) "CCA_tail"))

(defconcept SO:0001176)
(assert (subset-of SO:0001176 SO:0001172))
(assert (documentation SO:0001176 "Non-base-paired sequence of nucleotide bases in tRNA. It contains several dihydrouracil residues."))
(assert (= (name SO:0001176) "DHU_loop"))

(defconcept SO:0001177)
(assert (subset-of SO:0001177 SO:0001172))
(assert (documentation SO:0001177 "Non-base-paired sequence of three nucleotide bases in tRNA. It has sequence T-Psi-C."))
(assert (= (name SO:0001177) "T_loop"))

(defconcept SO:0001178)
(assert (subset-of SO:0001178 SO:0000210))
(assert (documentation SO:0001178 "A primary transcript encoding pyrrolysyl tRNA (SO:0000766)."))
(assert (= (name SO:0001178) "pyrrolysine_tRNA_primary_transcript"))

(defconcept SO:0001179)
(assert (subset-of SO:0001179 SO:0000593))
(assert (documentation SO:0001179 "U3 snoRNA is a member of the box C/D class of small nucleolar RNAs. The U3 snoRNA secondary structure is characterised by a small 5' domain (with boxes A and A'), and a larger 3' domain (with boxes B, C, C', and D), the two domains being linked by a single-stranded hinge. Boxes B and C form the B/C motif, which appears to be exclusive to U3 snoRNAs, and boxes C' and D form the C'/D motif. The latter is functionally similar to the C/D motifs found in other snoRNAs. The 5' domain and the hinge region act as a pre-rRNA-binding domain. The 3' domain has conserved protein-binding sites. Both the box B/C and box C'/D motifs are sufficient for nuclear retention of U3 snoRNA. The box C'/D motif is also necessary for nucleolar localization, stability and hypermethylation of U3 snoRNA. Both box B/C and C'/D motifs are involved in specific protein interactions and are necessary for the rRNA processing functions of U3 snoRNA."))
(assert (= (name SO:0001179) "U3_snoRNA"))

(defconcept SO:0001180)
(assert (part_of SO:0001180 SO:0000205))
(assert (subset-of SO:0001180 SO:0000837))
(assert (documentation SO:0001180 "A cis-acting element found in the 3' UTR of some mRNA which is rich in AUUUA pentamers. Messenger RNAs bearing multiple AU-rich elements are often unstable."))
(assert (= (name SO:0001180) "AU_rich_element"))

(defconcept SO:0001181)
(assert (part_of SO:0001181 SO:0000205))
(assert (subset-of SO:0001181 SO:0000837))
(assert (documentation SO:0001181 "A cis-acting element found in the 3' UTR of some mRNA which is bound by the Drosophila Bruno protein and its homologs."))
(assert (= (name SO:0001181) "Bruno_response_element"))

(defconcept SO:0001182)
(assert (part_of SO:0001182 SO:0000203))
(assert (subset-of SO:0001182 SO:0000837))
(assert (documentation SO:0001182 "A regulatory sequence found in the 5' and 3' UTRs of many mRNAs which encode iron-binding proteins. It has a hairpin structure and is recognized by trans-acting proteins known as iron-regulatory proteins."))
(assert (= (name SO:0001182) "iron_responsive_element"))

(defconcept SO:0001183)
(assert (subset-of SO:0001183 SO:0000348))
(assert (documentation SO:0001183 "An attribute describing a sequence composed of nucleobases bound to a morpholino backbone. A morpholino backbone consists of morpholine (CHEBI:34856) rings connected by phosphorodiamidate linkages."))
(assert (= (name SO:0001183) "morpholino"))

(defconcept SO:0001184)
(assert (subset-of SO:0001184 SO:0000348))
(assert (documentation SO:0001184 "An attribute describing a sequence composed of peptide nucleic acid (CHEBI:48021), a chemical consisting of nucleobases bound to a backbone composed of repeating N-(2-aminoethyl)-glycine units linked by peptide bonds. The purine and pyrimidine bases are linked to the backbone by methylene carbonyl bonds."))
(assert (= (name SO:0001184) "PNA"))

(defconcept SO:0001185)
(assert (subset-of SO:0001185 SO:0000733))
(assert (documentation SO:0001185 "An attribute describing the sequence of a transcript that has catalytic activity with or without an associated ribonucleoprotein."))
(assert (= (name SO:0001185) "enzymatic"))

(defconcept SO:0001186)
(assert (subset-of SO:0001186 SO:0001185))
(assert (documentation SO:0001186 "An attribute describing the sequence of a transcript that has catalytic activity even without an associated ribonucleoprotein."))
(assert (= (name SO:0001186) "ribozymic"))

(defconcept SO:0001187)
(assert (subset-of SO:0001187 SO:0000594))
(assert (documentation SO:0001187 "A snoRNA that specifies the site of pseudouridylation in an RNA molecule by base pairing with a short sequence around the target residue."))
(assert (= (name SO:0001187) "pseudouridylation_guide_snoRNA"))

(defconcept SO:0001188)
(assert (subset-of SO:0001188 SO:0000348))
(assert (documentation SO:0001188 "An attribute describing a sequence consisting of nucleobases attached to a repeating unit made of 'locked' deoxyribose rings connected to a phosphate backbone. The deoxyribose unit's conformation is 'locked' by a 2'-C,4'-C-oxymethylene link."))
(assert (= (name SO:0001188) "LNA"))

(defconcept SO:0001189)
(assert (subset-of SO:0001189 SO:0001247))
(assert (documentation SO:0001189 "An oligo composed of LNA residues."))
(assert (= (name SO:0001189) "LNA_oligo"))

(defconcept SO:0001190)
(assert (subset-of SO:0001190 SO:0000348))
(assert (documentation SO:0001190 "An attribute describing a sequence consisting of nucleobases attached to a repeating unit made of threose rings connected to a phosphate backbone."))
(assert (= (name SO:0001190) "TNA"))

(defconcept SO:0001191)
(assert (subset-of SO:0001191 SO:0001247))
(assert (documentation SO:0001191 "An oligo composed of TNA residues."))
(assert (= (name SO:0001191) "TNA_oligo"))

(defconcept SO:0001192)
(assert (subset-of SO:0001192 SO:0000348))
(assert (documentation SO:0001192 "An attribute describing a sequence consisting of nucleobases attached to a repeating unit made of an acyclic three-carbon propylene glycol connected to a phosphate backbone. It has two enantiomeric forms, (R)-GNA and (S)-GNA."))
(assert (= (name SO:0001192) "GNA"))

(defconcept SO:0001193)
(assert (subset-of SO:0001193 SO:0001247))
(assert (documentation SO:0001193 "An oligo composed of GNA residues."))
(assert (= (name SO:0001193) "GNA_oligo"))

(defconcept SO:0001194)
(assert (subset-of SO:0001194 SO:0001192))
(assert (documentation SO:0001194 "An attribute describing a GNA sequence in the (R)-GNA enantiomer."))
(assert (= (name SO:0001194) "R_GNA"))

(defconcept SO:0001195)
(assert (subset-of SO:0001195 SO:0001193))
(assert (documentation SO:0001195 "An oligo composed of (R)-GNA residues."))
(assert (= (name SO:0001195) "R_GNA_oligo"))

(defconcept SO:0001196)
(assert (subset-of SO:0001196 SO:0001192))
(assert (documentation SO:0001196 "An attribute describing a GNA sequence in the (S)-GNA enantiomer."))
(assert (= (name SO:0001196) "S_GNA"))

(defconcept SO:0001197)
(assert (subset-of SO:0001197 SO:0001193))
(assert (documentation SO:0001197 "An oligo composed of (S)-GNA residues."))
(assert (= (name SO:0001197) "S_GNA_oligo"))

(defconcept SO:0001198)
(assert (subset-of SO:0001198 SO:0001041))
(assert (documentation SO:0001198 "A ds_DNA_viral_sequence is a viral_sequence that is the sequence of a virus that exists as double stranded DNA."))
(assert (= (name SO:0001198) "ds_DNA_viral_sequence"))

(defconcept SO:0001199)
(assert (subset-of SO:0001199 SO:0001041))
(assert (documentation SO:0001199 "A ss_RNA_viral_sequence is a viral_sequence that is the sequence of a virus that exists as single stranded RNA."))
(assert (= (name SO:0001199) "ss_RNA_viral_sequence"))

(defconcept SO:0001200)
(assert (subset-of SO:0001200 SO:0001199))
(assert (documentation SO:0001200 "A negative_sense_RNA_viral_sequence is a ss_RNA_viral_sequence that is the sequence of a single stranded RNA virus that is complementary to mRNA and must be converted to positive sense RNA by RNA polymerase before translation."))
(assert (= (name SO:0001200) "negative_sense_ssRNA_viral_sequence"))

(defconcept SO:0001201)
(assert (subset-of SO:0001201 SO:0001199))
(assert (documentation SO:0001201 "A positive_sense_RNA_viral_sequence is a ss_RNA_viral_sequence that is the sequence of a single stranded RNA virus that can be immediately translated by the host."))
(assert (= (name SO:0001201) "positive_sense_ssRNA_viral_sequence"))

(defconcept SO:0001202)
(assert (subset-of SO:0001202 SO:0001199))
(assert (documentation SO:0001202 "A ambisense_RNA_virus is a ss_RNA_viral_sequence that is the sequence of a single stranded RNA virus with both messenger and anti messenger polarity."))
(assert (= (name SO:0001202) "ambisense_ssRNA_viral_sequence"))

(defconcept SO:0001203)
(assert (subset-of SO:0001203 SO:0000167))
(assert (documentation SO:0001203 "A region (DNA) to which RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0001203) "RNA_polymerase_promoter"))

(defconcept SO:0001204)
(assert (subset-of SO:0001204 SO:0001203))
(assert (documentation SO:0001204 "A region (DNA) to which Bacteriophage RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0001204) "Phage_RNA_Polymerase_Promoter"))

(defconcept SO:0001205)
(assert (subset-of SO:0001205 SO:0001204))
(assert (documentation SO:0001205 "A region (DNA) to which the SP6 RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0001205) "SP6_RNA_Polymerase_Promoter"))

(defconcept SO:0001206)
(assert (subset-of SO:0001206 SO:0001204))
(assert (documentation SO:0001206 "A DNA sequence to which the T3 RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0001206) "T3_RNA_Polymerase_Promoter"))

(defconcept SO:0001207)
(assert (subset-of SO:0001207 SO:0001204))
(assert (documentation SO:0001207 "A region (DNA) to which the T7 RNA polymerase binds, to begin transcription."))
(assert (= (name SO:0001207) "T7_RNA_Polymerase_Promoter"))

(defconcept SO:0001208)
(assert (subset-of SO:0001208 SO:0000345))
(assert (documentation SO:0001208 "An EST read from the 5' end of a transcript that usually codes for a protein. These regions tend to be conserved across species and do not change much within a gene family."))
(assert (= (name SO:0001208) "five_prime_EST"))

(defconcept SO:0001209)
(assert (subset-of SO:0001209 SO:0000345))
(assert (documentation SO:0001209 "An EST read from the 3' end of a transcript. They are more likely to fall within non-coding, or untranslated regions(UTRs)."))
(assert (= (name SO:0001209) "three_prime_EST"))

(defconcept SO:0001210)
(assert (subset-of SO:0001210 SO:0000836))
(assert (documentation SO:0001210 "The region of mRNA (not divisible by 3 bases) that is skipped during the process of translational frameshifting (GO:0006452), causing the reading frame to be different."))
(assert (= (name SO:0001210) "translational_frameshift"))

(defconcept SO:0001211)
(assert (subset-of SO:0001211 SO:0001210))
(assert (documentation SO:0001211 "The region of mRNA 1 base long that is skipped during the process of translational frameshifting (GO:0006452), causing the reading frame to be different."))
(assert (= (name SO:0001211) "plus_1_translational_frameshift"))

(defconcept SO:0001212)
(assert (subset-of SO:0001212 SO:0001210))
(assert (documentation SO:0001212 "The region of mRNA 2 bases long that is skipped during the process of translational frameshifting (GO:0006452), causing the reading frame to be different."))
(assert (= (name SO:0001212) "plus_2_translational_frameshift"))

(defconcept SO:0001213)
(assert (subset-of SO:0001213 SO:0000588))
(assert (documentation SO:0001213 "Group III introns are introns found in the mRNA of the plastids of euglenoid protists. They are spliced by a two step transesterification with bulged adenosine as initiating nucleophile."))
(assert (= (name SO:0001213) "group_III_intron"))

(defconcept SO:0001214)
(assert (subset-of SO:0001214 SO:0000852))
(assert (documentation SO:0001214 "The maximal intersection of exon and UTR."))
(assert (= (name SO:0001214) "noncoding_region_of_exon"))

(defconcept SO:0001215)
(assert (subset-of SO:0001215 SO:0000852))
(assert (documentation SO:0001215 "The region of an exon that encodes for protein sequence."))
(assert (= (name SO:0001215) "coding_region_of_exon"))

(defconcept SO:0001216)
(assert (subset-of SO:0001216 SO:0000188))
(assert (documentation SO:0001216 "An intron that spliced via endonucleolytic cleavage and ligation rather than transesterification."))
(assert (= (name SO:0001216) "endonuclease_spliced_intron"))

(defconcept SO:0001217)
(assert (subset-of SO:0001217 SO:0000704))
(assert (= (name SO:0001217) "protein_coding_gene"))

(defconcept SO:0001218)
(assert (subset-of SO:0001218 SO:0000667))
(assert (documentation SO:0001218 "An insertion that derives from another organism, via the use of recombinant DNA technology."))
(assert (= (name SO:0001218) "transgenic_insertion"))

(defconcept SO:0001219)
(assert (subset-of SO:0001219 SO:0000704))
(assert (= (name SO:0001219) "retrogene"))

(defconcept SO:0001220)
(assert (subset-of SO:0001220 SO:0000893))
(assert (documentation SO:0001220 "An attribute describing an epigenetic process where a gene is inactivated by RNA interference."))
(assert (= (name SO:0001220) "silenced_by_RNA_interference"))

(defconcept SO:0001221)
(assert (subset-of SO:0001221 SO:0000893))
(assert (documentation SO:0001221 "An attribute describing an epigenetic process where a gene is inactivated by histone modification."))
(assert (= (name SO:0001221) "silenced_by_histone_modification"))

(defconcept SO:0001222)
(assert (subset-of SO:0001222 SO:0001221))
(assert (documentation SO:0001222 "An attribute describing an epigenetic process where a gene is inactivated by histone methylation."))
(assert (= (name SO:0001222) "silenced_by_histone_methylation"))

(defconcept SO:0001223)
(assert (subset-of SO:0001223 SO:0001221))
(assert (documentation SO:0001223 "An attribute describing an epigenetic process where a gene is inactivated by histone deacetylation."))
(assert (= (name SO:0001223) "silenced_by_histone_deacetylation"))

(defconcept SO:0001224)
(assert (subset-of SO:0001224 SO:0000127))
(assert (documentation SO:0001224 "A gene that is silenced by RNA interference."))
(assert (= (name SO:0001224) "gene_silenced_by_RNA_interference"))

(defconcept SO:0001225)
(assert (subset-of SO:0001225 SO:0000127))
(assert (documentation SO:0001225 "A gene that is silenced by histone modification."))
(assert (= (name SO:0001225) "gene_silenced_by_histone_modification"))

(defconcept SO:0001226)
(assert (subset-of SO:0001226 SO:0001225))
(assert (documentation SO:0001226 "A gene that is silenced by histone methylation."))
(assert (= (name SO:0001226) "gene_silenced_by_histone_methylation"))

(defconcept SO:0001227)
(assert (subset-of SO:0001227 SO:0001225))
(assert (documentation SO:0001227 "A gene that is silenced by histone deacetylation."))
(assert (= (name SO:0001227) "gene_silenced_by_histone_deacetylation"))

(defconcept SO:0001228)
(assert (subset-of SO:0001228 SO:0001277))
(assert (documentation SO:0001228 "A modified RNA base in which the 5,6-dihydrouracil is bound to the ribose ring."))
(assert (= (name SO:0001228) "dihydrouridine"))

(defconcept SO:0001229)
(assert (subset-of SO:0001229 SO:0001277))
(assert (documentation SO:0001229 "A modified RNA base in which the 5- position of the uracil is bound to the ribose ring instead of the 4- position."))
(assert (= (name SO:0001229) "pseudouridine"))

(defconcept SO:0001230)
(assert (subset-of SO:0001230 SO:0000250))
(assert (documentation SO:0001230 "A modified RNA base in which hypoxanthine is bound to the ribose ring."))
(assert (= (name SO:0001230) "inosine"))

(defconcept SO:0001231)
(assert (subset-of SO:0001231 SO:0000250))
(assert (documentation SO:0001231 "A modified RNA base in which guanine is methylated at the 7- position."))
(assert (= (name SO:0001231) "seven_methylguanine"))

(defconcept SO:0001232)
(assert (subset-of SO:0001232 SO:0000250))
(assert (documentation SO:0001232 "A modified RNA base in which thymine is bound to the ribose ring."))
(assert (= (name SO:0001232) "ribothymidine"))

(defconcept SO:0001233)
(assert (subset-of SO:0001233 SO:0001274))
(assert (documentation SO:0001233 "A modified RNA base in which methylhypoxanthine is bound to the ribose ring."))
(assert (= (name SO:0001233) "methylinosine"))

(defconcept SO:0001234)
(assert (subset-of SO:0001234 SO:0000733))
(assert (documentation SO:0001234 "An attribute describing a feature that has either intra-genome or intracellular mobility."))
(assert (= (name SO:0001234) "mobile"))

(defconcept SO:0001235)
(assert (subset-of SO:0001235 SO:0001411))
(assert (documentation SO:0001235 "A region containing at least one unique origin of replication and a unique termination site."))
(assert (= (name SO:0001235) "replicon"))

(defconcept SO:0001236)
(assert (subset-of SO:0001236 SO:0001411))
(assert (documentation SO:0001236 "A base is a sequence feature that corresponds to a single unit of a nucleotide polymer."))
(assert (= (name SO:0001236) "base"))

(defconcept SO:0001237)
(assert (part_of SO:0001237 SO:0000104))
(assert (subset-of SO:0001237 SO:0001411))
(assert (documentation SO:0001237 "A sequence feature that corresponds to a single amino acid residue in a polypeptide."))
(assert (= (name SO:0001237) "amino_acid"))

(defconcept SO:0001238)
(assert (subset-of SO:0001238 SO:0000315))
(assert (= (name SO:0001238) "major_TSS"))

(defconcept SO:0001239)
(assert (subset-of SO:0001239 SO:0000315))
(assert (= (name SO:0001239) "minor_TSS"))

(defconcept SO:0001240)
(assert (has_part SO:0001240 SO:0000315))
(assert (subset-of SO:0001240 SO:0000842))
(assert (documentation SO:0001240 "The region of a gene from the 5' most TSS to the 3' TSS."))
(assert (= (name SO:0001240) "TSS_region"))

(defconcept SO:0001241)
(assert (subset-of SO:0001241 SO:0000401))
(assert (= (name SO:0001241) "encodes_alternate_transcription_start_sites"))

(defconcept SO:0001243)
(assert (subset-of SO:0001243 SO:0000835))
(assert (documentation SO:0001243 "A part of an miRNA primary_transcript."))
(assert (= (name SO:0001243) "miRNA_primary_transcript_region"))

(defconcept SO:0001244)
(assert (part_of SO:0001244 SO:0000647))
(assert (subset-of SO:0001244 SO:0001243))
(assert (documentation SO:0001244 "The 60-70 nucleotide region remain after Drosha processing of the primary transcript, that folds back upon itself to form a hairpin sructure."))
(assert (= (name SO:0001244) "pre_miRNA"))

(defconcept SO:0001245)
(assert (part_of SO:0001245 SO:0001244))
(assert (subset-of SO:0001245 SO:0001243))
(assert (documentation SO:0001245 "The stem of the hairpin loop formed by folding of the pre-miRNA."))
(assert (= (name SO:0001245) "miRNA_stem"))

(defconcept SO:0001246)
(assert (part_of SO:0001246 SO:0001244))
(assert (subset-of SO:0001246 SO:0001243))
(assert (documentation SO:0001246 "The loop of the hairpin loop formed by folding of the pre-miRNA."))
(assert (= (name SO:0001246) "miRNA_loop"))

(defconcept SO:0001247)
(assert (subset-of SO:0001247 SO:0000696))
(assert (documentation SO:0001247 "An oligo composed of synthetic nucleotides."))
(assert (= (name SO:0001247) "synthetic_oligo"))

(defconcept SO:0001248)
(assert (subset-of SO:0001248 SO:0001410))
(assert (documentation SO:0001248 "A region of the genome of known length that is composed by ordering and aligning two or more different regions."))
(assert (= (name SO:0001248) "assembly"))

(defconcept SO:0001249)
(assert (subset-of SO:0001249 SO:0001248))
(assert (documentation SO:0001249 "A fragment assembly is a genome assembly that orders overlapping fragments of the genome based on landmark sequences. The base pair distance between the landmarks is known allowing additivity of lengths."))
(assert (= (name SO:0001249) "fragment_assembly"))

(defconcept SO:0001250)
(assert (has_part SO:0001250 SO:0000412))
(assert (subset-of SO:0001250 SO:0001249))
(assert (documentation SO:0001250 "A fingerprint_map is a physical map composed of restriction fragments."))
(assert (= (name SO:0001250) "fingerprint_map"))

(defconcept SO:0001251)
(assert (has_part SO:0001251 SO:0000331))
(assert (subset-of SO:0001251 SO:0001249))
(assert (documentation SO:0001251 "An STS map is a physical map organized by the unique STS landmarks."))
(assert (= (name SO:0001251) "STS_map"))

(defconcept SO:0001252)
(assert (has_part SO:0001252 SO:0000331))
(assert (subset-of SO:0001252 SO:0001249))
(assert (documentation SO:0001252 "A radiation hybrid map is a physical map."))
(assert (= (name SO:0001252) "RH_map"))

(defconcept SO:0001253)
(assert (subset-of SO:0001253 SO:0000143))
(assert (documentation SO:0001253 "A DNA fragment generated by sonication. Sonication is a technique used to sheer DNA into smaller fragments."))
(assert (= (name SO:0001253) "sonicate_fragment"))

(defconcept SO:0001254)
(assert (subset-of SO:0001254 SO:1000182))
(assert (documentation SO:0001254 "A kind of chromosome variation where the chromosome complement is an exact multiple of the haploid number and is greater than the diploid number."))
(assert (= (name SO:0001254) "polyploid"))

(defconcept SO:0001255)
(assert (subset-of SO:0001255 SO:0001254))
(assert (documentation SO:0001255 "A polyploid where the multiple chromosome set was derived from the same organism."))
(assert (= (name SO:0001255) "autopolyploid"))

(defconcept SO:0001256)
(assert (subset-of SO:0001256 SO:0001254))
(assert (documentation SO:0001256 "A polyploid where the multiple chromosome set was derived from a different organism."))
(assert (= (name SO:0001256) "allopolyploid"))

(defconcept SO:0001257)
(assert (subset-of SO:0001257 SO:0000059))
(assert (documentation SO:0001257 "The binding site (recognition site) of a homing endonuclease. The binding site is typically large."))
(assert (= (name SO:0001257) "homing_endonuclease_binding_site"))

(defconcept SO:0001258)
(assert (part_of SO:0001258 SO:0000170))
(assert (subset-of SO:0001258 SO:0000235))
(assert (documentation SO:0001258 "A sequence element characteristic of some RNA polymerase II promoters with sequence ATTGCAT that binds Pou-domain transcription factors."))
(assert (= (name SO:0001258) "octamer_motif"))

(defconcept SO:0001259)
(assert (subset-of SO:0001259 SO:0000340))
(assert (documentation SO:0001259 "A chromosome originating in an apicoplast."))
(assert (= (name SO:0001259) "apicoplast_chromosome"))

(defconcept SO:0001260)
(assert (documentation SO:0001260 "A collection of discontinuous sequences."))
(assert (= (name SO:0001260) "sequence_collection"))

(defconcept SO:0001261)
(assert (subset-of SO:0001261 SO:0000703))
(assert (documentation SO:0001261 "A continuous region of sequence composed of the overlapping of multiple sequence_features, which ultimately provides evidence for another sequence_feature."))
(assert (= (name SO:0001261) "overlapping_feature_set"))

(defconcept SO:0001262)
(assert (has_part SO:0001262 SO:0000345))
(assert (subset-of SO:0001262 SO:0001261))
(assert (documentation SO:0001262 "A continous experimental result region extending the length of multiple overlapping EST's."))
(assert (= (name SO:0001262) "overlapping_EST_set"))

(defconcept SO:0001263)
(assert (subset-of SO:0001263 SO:0000704))
(assert (= (name SO:0001263) "ncRNA_gene"))

(defconcept SO:0001264)
(assert (subset-of SO:0001264 SO:0001263))
(assert (= (name SO:0001264) "gRNA_gene"))

(defconcept SO:0001265)
(assert (subset-of SO:0001265 SO:0001263))
(assert (= (name SO:0001265) "miRNA_gene"))

(defconcept SO:0001266)
(assert (subset-of SO:0001266 SO:0001263))
(assert (= (name SO:0001266) "scRNA_gene"))

(defconcept SO:0001267)
(assert (subset-of SO:0001267 SO:0001263))
(assert (= (name SO:0001267) "snoRNA_gene"))

(defconcept SO:0001268)
(assert (subset-of SO:0001268 SO:0001263))
(assert (= (name SO:0001268) "snRNA_gene"))

(defconcept SO:0001269)
(assert (subset-of SO:0001269 SO:0001263))
(assert (= (name SO:0001269) "SRP_RNA_gene"))

(defconcept SO:0001270)
(assert (subset-of SO:0001270 SO:0001263))
(assert (= (name SO:0001270) "stRNA_gene"))

(defconcept SO:0001271)
(assert (subset-of SO:0001271 SO:0001263))
(assert (= (name SO:0001271) "tmRNA_gene"))

(defconcept SO:0001272)
(assert (subset-of SO:0001272 SO:0001263))
(assert (= (name SO:0001272) "tRNA_gene"))

(defconcept SO:0001273)
(assert (subset-of SO:0001273 SO:0000250))
(assert (documentation SO:0001273 "A modified adenine is an adenine base feature that has been altered."))
(assert (= (name SO:0001273) "modified_adenosine"))

(defconcept SO:0001274)
(assert (subset-of SO:0001274 SO:0001230))
(assert (documentation SO:0001274 "A modified inosine is an inosine base feature that has been altered."))
(assert (= (name SO:0001274) "modified_inosine"))

(defconcept SO:0001275)
(assert (subset-of SO:0001275 SO:0000250))
(assert (documentation SO:0001275 "A modified cytidine is a cytidine base feature which has been altered."))
(assert (= (name SO:0001275) "modified_cytidine"))

(defconcept SO:0001276)
(assert (subset-of SO:0001276 SO:0000250))
(assert (= (name SO:0001276) "modified_guanosine"))

(defconcept SO:0001277)
(assert (subset-of SO:0001277 SO:0000250))
(assert (= (name SO:0001277) "modified_uridine"))

(defconcept SO:0001278)
(assert (subset-of SO:0001278 SO:0001274))
(assert (documentation SO:0001278 "1-methylinosine is a modified insosine."))
(assert (= (name SO:0001278) "one_methylinosine"))

(defconcept SO:0001279)
(assert (subset-of SO:0001279 SO:0001274))
(assert (documentation SO:0001279 "1,2'-O-dimethylinosine is a modified inosine."))
(assert (= (name SO:0001279) "one_two_prime_O_dimethylinosine"))

(defconcept SO:0001280)
(assert (subset-of SO:0001280 SO:0001274))
(assert (documentation SO:0001280 "2'-O-methylinosine is a modified inosine."))
(assert (= (name SO:0001280) "two_prime_O_methylinosine"))

(defconcept SO:0001281)
(assert (subset-of SO:0001281 SO:0001275))
(assert (documentation SO:0001281 "3-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001281) "three_methylcytidine"))

(defconcept SO:0001282)
(assert (subset-of SO:0001282 SO:0001275))
(assert (documentation SO:0001282 "5-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001282) "five_methylcytidine"))

(defconcept SO:0001283)
(assert (subset-of SO:0001283 SO:0001275))
(assert (documentation SO:0001283 "2'-O-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001283) "two_prime_O_methylcytidine"))

(defconcept SO:0001284)
(assert (subset-of SO:0001284 SO:0001275))
(assert (documentation SO:0001284 "2-thiocytidine is a modified cytidine."))
(assert (= (name SO:0001284) "two_thiocytidine"))

(defconcept SO:0001285)
(assert (subset-of SO:0001285 SO:0001275))
(assert (documentation SO:0001285 "N4-acetylcytidine is a modified cytidine."))
(assert (= (name SO:0001285) "N4_acetylcytidine"))

(defconcept SO:0001286)
(assert (subset-of SO:0001286 SO:0001275))
(assert (documentation SO:0001286 "5-formylcytidine is a modified cytidine."))
(assert (= (name SO:0001286) "five_formylcytidine"))

(defconcept SO:0001287)
(assert (subset-of SO:0001287 SO:0001275))
(assert (documentation SO:0001287 "5,2'-O-dimethylcytidine is a modified cytidine."))
(assert (= (name SO:0001287) "five_two_prime_O_dimethylcytidine"))

(defconcept SO:0001288)
(assert (subset-of SO:0001288 SO:0001275))
(assert (documentation SO:0001288 "N4-acetyl-2'-O-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001288) "N4_acetyl_2_prime_O_methylcytidine"))

(defconcept SO:0001289)
(assert (subset-of SO:0001289 SO:0001275))
(assert (documentation SO:0001289 "Lysidine is a modified cytidine."))
(assert (= (name SO:0001289) "lysidine"))

(defconcept SO:0001290)
(assert (subset-of SO:0001290 SO:0001275))
(assert (documentation SO:0001290 "N4-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001290) "N4_methylcytidine"))

(defconcept SO:0001291)
(assert (subset-of SO:0001291 SO:0001275))
(assert (documentation SO:0001291 "N4,2'-O-dimethylcytidine is a modified cytidine."))
(assert (= (name SO:0001291) "N4_2_prime_O_dimethylcytidine"))

(defconcept SO:0001292)
(assert (subset-of SO:0001292 SO:0001275))
(assert (documentation SO:0001292 "5-hydroxymethylcytidine is a modified cytidine."))
(assert (= (name SO:0001292) "five_hydroxymethylcytidine"))

(defconcept SO:0001293)
(assert (subset-of SO:0001293 SO:0001275))
(assert (documentation SO:0001293 "5-formyl-2'-O-methylcytidine is a modified cytidine."))
(assert (= (name SO:0001293) "five_formyl_two_prime_O_methylcytidine"))

(defconcept SO:0001294)
(assert (subset-of SO:0001294 SO:0001275))
(assert (documentation SO:0001294 "N4_N4_2_prime_O_trimethylcytidine is a modified cytidine."))
(assert (= (name SO:0001294) "N4_N4_2_prime_O_trimethylcytidine"))

(defconcept SO:0001295)
(assert (subset-of SO:0001295 SO:0001273))
(assert (documentation SO:0001295 "1_methyladenosine is a modified adenosine."))
(assert (= (name SO:0001295) "one_methyladenosine"))

(defconcept SO:0001296)
(assert (subset-of SO:0001296 SO:0001273))
(assert (documentation SO:0001296 "2_methyladenosine is a modified adenosine."))
(assert (= (name SO:0001296) "two_methyladenosine"))

(defconcept SO:0001297)
(assert (subset-of SO:0001297 SO:0001273))
(assert (documentation SO:0001297 "N6_methyladenosine is a modified adenosine."))
(assert (= (name SO:0001297) "N6_methyladenosine"))

(defconcept SO:0001298)
(assert (subset-of SO:0001298 SO:0001273))
(assert (documentation SO:0001298 "2prime_O_methyladenosine is a modified adenosine."))
(assert (= (name SO:0001298) "two_prime_O_methyladenosine"))

(defconcept SO:0001299)
(assert (subset-of SO:0001299 SO:0001273))
(assert (documentation SO:0001299 "2_methylthio_N6_methyladenosine is a modified adenosine."))
(assert (= (name SO:0001299) "two_methylthio_N6_methyladenosine"))

(defconcept SO:0001300)
(assert (subset-of SO:0001300 SO:0001273))
(assert (documentation SO:0001300 "N6_isopentenyladenosine is a modified adenosine."))
(assert (= (name SO:0001300) "N6_isopentenyladenosine"))

(defconcept SO:0001301)
(assert (subset-of SO:0001301 SO:0001273))
(assert (documentation SO:0001301 "2_methylthio_N6_isopentenyladenosine is a modified adenosine."))
(assert (= (name SO:0001301) "two_methylthio_N6_isopentenyladenosine"))

(defconcept SO:0001302)
(assert (subset-of SO:0001302 SO:0001273))
(assert (documentation SO:0001302 "N6_cis_hydroxyisopentenyl_adenosine is a modified adenosine."))
(assert (= (name SO:0001302) "N6_cis_hydroxyisopentenyl_adenosine"))

(defconcept SO:0001303)
(assert (subset-of SO:0001303 SO:0001273))
(assert (documentation SO:0001303 "2_methylthio_N6_cis_hydroxyisopentenyl_adenosine is a modified adenosine."))
(assert (= (name SO:0001303) "two_methylthio_N6_cis_hydroxyisopentenyl_adenosine"))

(defconcept SO:0001304)
(assert (subset-of SO:0001304 SO:0001273))
(assert (documentation SO:0001304 "N6_glycinylcarbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001304) "N6_glycinylcarbamoyladenosine"))

(defconcept SO:0001305)
(assert (subset-of SO:0001305 SO:0001273))
(assert (documentation SO:0001305 "N6_threonylcarbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001305) "N6_threonylcarbamoyladenosine"))

(defconcept SO:0001306)
(assert (subset-of SO:0001306 SO:0001273))
(assert (documentation SO:0001306 "2_methylthio_N6_threonyl_carbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001306) "two_methylthio_N6_threonyl_carbamoyladenosine"))

(defconcept SO:0001307)
(assert (subset-of SO:0001307 SO:0001273))
(assert (documentation SO:0001307 "N6_methyl_N6_threonylcarbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001307) "N6_methyl_N6_threonylcarbamoyladenosine"))

(defconcept SO:0001308)
(assert (subset-of SO:0001308 SO:0001273))
(assert (documentation SO:0001308 "N6_hydroxynorvalylcarbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001308) "N6_hydroxynorvalylcarbamoyladenosine"))

(defconcept SO:0001309)
(assert (subset-of SO:0001309 SO:0001273))
(assert (documentation SO:0001309 "2_methylthio_N6_hydroxynorvalyl_carbamoyladenosine is a modified adenosine."))
(assert (= (name SO:0001309) "two_methylthio_N6_hydroxynorvalyl_carbamoyladenosine"))

(defconcept SO:0001310)
(assert (subset-of SO:0001310 SO:0001273))
(assert (documentation SO:0001310 "2prime_O_ribosyladenosine_phosphate is a modified adenosine."))
(assert (= (name SO:0001310) "two_prime_O_ribosyladenosine_phosphate"))

(defconcept SO:0001311)
(assert (subset-of SO:0001311 SO:0001273))
(assert (documentation SO:0001311 "N6_N6_dimethyladenosine is a modified adenosine."))
(assert (= (name SO:0001311) "N6_N6_dimethyladenosine"))

(defconcept SO:0001312)
(assert (subset-of SO:0001312 SO:0001273))
(assert (documentation SO:0001312 "N6_2prime_O_dimethyladenosine is a modified adenosine."))
(assert (= (name SO:0001312) "N6_2_prime_O_dimethyladenosine"))

(defconcept SO:0001313)
(assert (subset-of SO:0001313 SO:0001273))
(assert (documentation SO:0001313 "N6_N6_2prime_O_trimethyladenosine is a modified adenosine."))
(assert (= (name SO:0001313) "N6_N6_2_prime_O_trimethyladenosine"))

(defconcept SO:0001314)
(assert (subset-of SO:0001314 SO:0001273))
(assert (documentation SO:0001314 "1,2'-O-dimethyladenosine is a modified adenosine."))
(assert (= (name SO:0001314) "one_two_prime_O_dimethyladenosine"))

(defconcept SO:0001315)
(assert (subset-of SO:0001315 SO:0001273))
(assert (documentation SO:0001315 "N6_acetyladenosine is a modified adenosine."))
(assert (= (name SO:0001315) "N6_acetyladenosine"))

(defconcept SO:0001316)
(assert (subset-of SO:0001316 SO:0001276))
(assert (documentation SO:0001316 "7-deazaguanosine is a moddified guanosine."))
(assert (= (name SO:0001316) "seven_deazaguanosine"))

(defconcept SO:0001317)
(assert (subset-of SO:0001317 SO:0001316))
(assert (documentation SO:0001317 "Queuosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001317) "queuosine"))

(defconcept SO:0001318)
(assert (subset-of SO:0001318 SO:0001316))
(assert (documentation SO:0001318 "Epoxyqueuosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001318) "epoxyqueuosine"))

(defconcept SO:0001319)
(assert (subset-of SO:0001319 SO:0001316))
(assert (documentation SO:0001319 "Galactosyl_queuosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001319) "galactosyl_queuosine"))

(defconcept SO:0001320)
(assert (subset-of SO:0001320 SO:0001316))
(assert (documentation SO:0001320 "Mannosyl_queuosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001320) "mannosyl_queuosine"))

(defconcept SO:0001321)
(assert (subset-of SO:0001321 SO:0001316))
(assert (documentation SO:0001321 "7_cyano_7_deazaguanosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001321) "seven_cyano_seven_deazaguanosine"))

(defconcept SO:0001322)
(assert (subset-of SO:0001322 SO:0001316))
(assert (documentation SO:0001322 "7_aminomethyl_7_deazaguanosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001322) "seven_aminomethyl_seven_deazaguanosine"))

(defconcept SO:0001323)
(assert (subset-of SO:0001323 SO:0001316))
(assert (documentation SO:0001323 "Archaeosine is a modified 7-deazoguanosine."))
(assert (= (name SO:0001323) "archaeosine"))

(defconcept SO:0001324)
(assert (subset-of SO:0001324 SO:0001276))
(assert (documentation SO:0001324 "1_methylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001324) "one_methylguanosine"))

(defconcept SO:0001325)
(assert (subset-of SO:0001325 SO:0001276))
(assert (documentation SO:0001325 "N2_methylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001325) "N2_methylguanosine"))

(defconcept SO:0001326)
(assert (subset-of SO:0001326 SO:0001276))
(assert (documentation SO:0001326 "7_methylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001326) "seven_methylguanosine"))

(defconcept SO:0001327)
(assert (subset-of SO:0001327 SO:0001276))
(assert (documentation SO:0001327 "2prime_O_methylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001327) "two_prime_O_methylguanosine"))

(defconcept SO:0001328)
(assert (subset-of SO:0001328 SO:0001276))
(assert (documentation SO:0001328 "N2_N2_dimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001328) "N2_N2_dimethylguanosine"))

(defconcept SO:0001329)
(assert (subset-of SO:0001329 SO:0001276))
(assert (documentation SO:0001329 "N2_2prime_O_dimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001329) "N2_2_prime_O_dimethylguanosine"))

(defconcept SO:0001330)
(assert (subset-of SO:0001330 SO:0001276))
(assert (documentation SO:0001330 "N2_N2_2prime_O_trimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001330) "N2_N2_2_prime_O_trimethylguanosine"))

(defconcept SO:0001331)
(assert (subset-of SO:0001331 SO:0001276))
(assert (documentation SO:0001331 "2prime_O_ribosylguanosine_phosphate is a modified guanosine base feature."))
(assert (= (name SO:0001331) "two_prime_O_ribosylguanosine_phosphate"))

(defconcept SO:0001332)
(assert (subset-of SO:0001332 SO:0001276))
(assert (documentation SO:0001332 "Wybutosine is a modified guanosine base feature."))
(assert (= (name SO:0001332) "wybutosine"))

(defconcept SO:0001333)
(assert (subset-of SO:0001333 SO:0001276))
(assert (documentation SO:0001333 "Peroxywybutosine is a modified guanosine base feature."))
(assert (= (name SO:0001333) "peroxywybutosine"))

(defconcept SO:0001334)
(assert (subset-of SO:0001334 SO:0001276))
(assert (documentation SO:0001334 "Hydroxywybutosine is a modified guanosine base feature."))
(assert (= (name SO:0001334) "hydroxywybutosine"))

(defconcept SO:0001335)
(assert (subset-of SO:0001335 SO:0001276))
(assert (documentation SO:0001335 "Undermodified_hydroxywybutosine is a modified guanosine base feature."))
(assert (= (name SO:0001335) "undermodified_hydroxywybutosine"))

(defconcept SO:0001336)
(assert (subset-of SO:0001336 SO:0001276))
(assert (documentation SO:0001336 "Wyosine is a modified guanosine base feature."))
(assert (= (name SO:0001336) "wyosine"))

(defconcept SO:0001337)
(assert (subset-of SO:0001337 SO:0001276))
(assert (documentation SO:0001337 "Methylwyosine is a modified guanosine base feature."))
(assert (= (name SO:0001337) "methylwyosine"))

(defconcept SO:0001338)
(assert (subset-of SO:0001338 SO:0001276))
(assert (documentation SO:0001338 "N2_7_dimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001338) "N2_7_dimethylguanosine"))

(defconcept SO:0001339)
(assert (subset-of SO:0001339 SO:0001276))
(assert (documentation SO:0001339 "N2_N2_7_trimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001339) "N2_N2_7_trimethylguanosine"))

(defconcept SO:0001340)
(assert (subset-of SO:0001340 SO:0001276))
(assert (documentation SO:0001340 "1_2prime_O_dimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001340) "one_two_prime_O_dimethylguanosine"))

(defconcept SO:0001341)
(assert (subset-of SO:0001341 SO:0001276))
(assert (documentation SO:0001341 "4_demethylwyosine is a modified guanosine base feature."))
(assert (= (name SO:0001341) "four_demethylwyosine"))

(defconcept SO:0001342)
(assert (subset-of SO:0001342 SO:0001276))
(assert (documentation SO:0001342 "Isowyosine is a modified guanosine base feature."))
(assert (= (name SO:0001342) "isowyosine"))

(defconcept SO:0001343)
(assert (subset-of SO:0001343 SO:0001276))
(assert (documentation SO:0001343 "N2_7_2prirme_O_trimethylguanosine is a modified guanosine base feature."))
(assert (= (name SO:0001343) "N2_7_2prirme_O_trimethylguanosine"))

(defconcept SO:0001344)
(assert (subset-of SO:0001344 SO:0001277))
(assert (documentation SO:0001344 "5_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001344) "five_methyluridine"))

(defconcept SO:0001345)
(assert (subset-of SO:0001345 SO:0001277))
(assert (documentation SO:0001345 "2prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001345) "two_prime_O_methyluridine"))

(defconcept SO:0001346)
(assert (subset-of SO:0001346 SO:0001277))
(assert (documentation SO:0001346 "5_2_prime_O_dimethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001346) "five_two_prime_O_dimethyluridine"))

(defconcept SO:0001347)
(assert (subset-of SO:0001347 SO:0001277))
(assert (documentation SO:0001347 "1_methylpseudouridine is a modified uridine base feature."))
(assert (= (name SO:0001347) "one_methylpseudouridine"))

(defconcept SO:0001348)
(assert (subset-of SO:0001348 SO:0001277))
(assert (documentation SO:0001348 "2prime_O_methylpseudouridine is a modified uridine base feature."))
(assert (= (name SO:0001348) "two_prime_O_methylpseudouridine"))

(defconcept SO:0001349)
(assert (subset-of SO:0001349 SO:0001277))
(assert (documentation SO:0001349 "2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001349) "two_thiouridine"))

(defconcept SO:0001350)
(assert (subset-of SO:0001350 SO:0001277))
(assert (documentation SO:0001350 "4_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001350) "four_thiouridine"))

(defconcept SO:0001351)
(assert (subset-of SO:0001351 SO:0001277))
(assert (documentation SO:0001351 "5_methyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001351) "five_methyl_2_thiouridine"))

(defconcept SO:0001352)
(assert (subset-of SO:0001352 SO:0001277))
(assert (documentation SO:0001352 "2_thio_2prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001352) "two_thio_two_prime_O_methyluridine"))

(defconcept SO:0001353)
(assert (subset-of SO:0001353 SO:0001277))
(assert (documentation SO:0001353 "3_3_amino_3_carboxypropyl_uridine is a modified uridine base feature."))
(assert (= (name SO:0001353) "three_three_amino_three_carboxypropyl_uridine"))

(defconcept SO:0001354)
(assert (subset-of SO:0001354 SO:0001277))
(assert (documentation SO:0001354 "5_hydroxyuridine is a modified uridine base feature."))
(assert (= (name SO:0001354) "five_hydroxyuridine"))

(defconcept SO:0001355)
(assert (subset-of SO:0001355 SO:0001277))
(assert (documentation SO:0001355 "5_methoxyuridine is a modified uridine base feature."))
(assert (= (name SO:0001355) "five_methoxyuridine"))

(defconcept SO:0001356)
(assert (subset-of SO:0001356 SO:0001277))
(assert (documentation SO:0001356 "Uridine_5_oxyacetic_acid is a modified uridine base feature."))
(assert (= (name SO:0001356) "uridine_five_oxyacetic_acid"))

(defconcept SO:0001357)
(assert (subset-of SO:0001357 SO:0001277))
(assert (documentation SO:0001357 "Uridine_5_oxyacetic_acid_methyl_ester is a modified uridine base feature."))
(assert (= (name SO:0001357) "uridine_five_oxyacetic_acid_methyl_ester"))

(defconcept SO:0001358)
(assert (subset-of SO:0001358 SO:0001277))
(assert (documentation SO:0001358 "5_carboxyhydroxymethyl_uridine is a modified uridine base feature."))
(assert (= (name SO:0001358) "five_carboxyhydroxymethyl_uridine"))

(defconcept SO:0001359)
(assert (subset-of SO:0001359 SO:0001277))
(assert (documentation SO:0001359 "5_carboxyhydroxymethyl_uridine_methyl_ester is a modified uridine base feature."))
(assert (= (name SO:0001359) "five_carboxyhydroxymethyl_uridine_methyl_ester"))

(defconcept SO:0001360)
(assert (subset-of SO:0001360 SO:0001277))
(assert (documentation SO:0001360 "Five_methoxycarbonylmethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001360) "five_methoxycarbonylmethyluridine"))

(defconcept SO:0001361)
(assert (subset-of SO:0001361 SO:0001277))
(assert (documentation SO:0001361 "Five_methoxycarbonylmethyl_2_prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001361) "five_methoxycarbonylmethyl_two_prime_O_methyluridine"))

(defconcept SO:0001362)
(assert (subset-of SO:0001362 SO:0001277))
(assert (documentation SO:0001362 "5_methoxycarbonylmethyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001362) "five_methoxycarbonylmethyl_two_thiouridine"))

(defconcept SO:0001363)
(assert (subset-of SO:0001363 SO:0001277))
(assert (documentation SO:0001363 "5_aminomethyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001363) "five_aminomethyl_two_thiouridine"))

(defconcept SO:0001364)
(assert (subset-of SO:0001364 SO:0001277))
(assert (documentation SO:0001364 "5_methylaminomethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001364) "five_methylaminomethyluridine"))

(defconcept SO:0001365)
(assert (subset-of SO:0001365 SO:0001277))
(assert (documentation SO:0001365 "5_methylaminomethyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001365) "five_methylaminomethyl_two_thiouridine"))

(defconcept SO:0001366)
(assert (subset-of SO:0001366 SO:0001277))
(assert (documentation SO:0001366 "5_methylaminomethyl_2_selenouridine is a modified uridine base feature."))
(assert (= (name SO:0001366) "five_methylaminomethyl_two_selenouridine"))

(defconcept SO:0001367)
(assert (subset-of SO:0001367 SO:0001277))
(assert (documentation SO:0001367 "5_carbamoylmethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001367) "five_carbamoylmethyluridine"))

(defconcept SO:0001368)
(assert (subset-of SO:0001368 SO:0001277))
(assert (documentation SO:0001368 "5_carbamoylmethyl_2_prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001368) "five_carbamoylmethyl_two_prime_O_methyluridine"))

(defconcept SO:0001369)
(assert (subset-of SO:0001369 SO:0001277))
(assert (documentation SO:0001369 "5_carboxymethylaminomethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001369) "five_carboxymethylaminomethyluridine"))

(defconcept SO:0001370)
(assert (subset-of SO:0001370 SO:0001277))
(assert (documentation SO:0001370 "5_carboxymethylaminomethyl_2_prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001370) "five_carboxymethylaminomethyl_two_prime_O_methyluridine"))

(defconcept SO:0001371)
(assert (subset-of SO:0001371 SO:0001277))
(assert (documentation SO:0001371 "5_carboxymethylaminomethyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001371) "five_carboxymethylaminomethyl_two_thiouridine"))

(defconcept SO:0001372)
(assert (subset-of SO:0001372 SO:0001277))
(assert (documentation SO:0001372 "3_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001372) "three_methyluridine"))

(defconcept SO:0001373)
(assert (subset-of SO:0001373 SO:0001277))
(assert (documentation SO:0001373 "1_methyl_3_3_amino_3_carboxypropyl_pseudouridine is a modified uridine base feature."))
(assert (= (name SO:0001373) "one_methyl_three_three_amino_three_carboxypropyl_pseudouridine"))

(defconcept SO:0001374)
(assert (subset-of SO:0001374 SO:0001277))
(assert (documentation SO:0001374 "5_carboxymethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001374) "five_carboxymethyluridine"))

(defconcept SO:0001375)
(assert (subset-of SO:0001375 SO:0001277))
(assert (documentation SO:0001375 "3_2prime_O_dimethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001375) "three_two_prime_O_dimethyluridine"))

(defconcept SO:0001376)
(assert (subset-of SO:0001376 SO:0001277))
(assert (documentation SO:0001376 "5_methyldihydrouridine is a modified uridine base feature."))
(assert (= (name SO:0001376) "five_methyldihydrouridine"))

(defconcept SO:0001377)
(assert (subset-of SO:0001377 SO:0001277))
(assert (documentation SO:0001377 "3_methylpseudouridine is a modified uridine base feature."))
(assert (= (name SO:0001377) "three_methylpseudouridine"))

(defconcept SO:0001378)
(assert (subset-of SO:0001378 SO:0001277))
(assert (documentation SO:0001378 "5_taurinomethyluridine is a modified uridine base feature."))
(assert (= (name SO:0001378) "five_taurinomethyluridine"))

(defconcept SO:0001379)
(assert (subset-of SO:0001379 SO:0001277))
(assert (documentation SO:0001379 "5_taurinomethyl_2_thiouridineis a modified uridine base feature."))
(assert (= (name SO:0001379) "five_taurinomethyl_two_thiouridine"))

(defconcept SO:0001380)
(assert (subset-of SO:0001380 SO:0001277))
(assert (documentation SO:0001380 "5_isopentenylaminomethyl_uridine is a modified uridine base feature."))
(assert (= (name SO:0001380) "five_isopentenylaminomethyl_uridine"))

(defconcept SO:0001381)
(assert (subset-of SO:0001381 SO:0001277))
(assert (documentation SO:0001381 "5_isopentenylaminomethyl_2_thiouridine is a modified uridine base feature."))
(assert (= (name SO:0001381) "five_isopentenylaminomethyl_two_thiouridine"))

(defconcept SO:0001382)
(assert (subset-of SO:0001382 SO:0001277))
(assert (documentation SO:0001382 "5_isopentenylaminomethyl_2prime_O_methyluridine is a modified uridine base feature."))
(assert (= (name SO:0001382) "five_isopentenylaminomethyl_two_prime_O_methyluridine"))

(defconcept SO:0001383)
(assert (subset-of SO:0001383 SO:0000410))
(assert (documentation SO:0001383 "A region of a DNA molecule that is bound by a histone."))
(assert (= (name SO:0001383) "histone_binding_site"))

(defconcept SO:0001384)
(assert (subset-of SO:0001384 SO:0000316))
(assert (= (name SO:0001384) "CDS_fragment"))

(defconcept SO:0001385)
(assert (subset-of SO:0001385 SO:0001237))
(assert (documentation SO:0001385 "A post translationally modified amino acid feature."))
(assert (= (name SO:0001385) "modified_amino_acid_feature"))

(defconcept SO:0001386)
(assert (subset-of SO:0001386 SO:0001385))
(assert (documentation SO:0001386 "A post translationally modified glycine amino acid feature."))
(assert (= (name SO:0001386) "modified_glycine"))

(defconcept SO:0001387)
(assert (subset-of SO:0001387 SO:0001385))
(assert (documentation SO:0001387 "A post translationally modified alanine amino acid feature."))
(assert (= (name SO:0001387) "modified_L_alanine"))

(defconcept SO:0001388)
(assert (subset-of SO:0001388 SO:0001385))
(assert (documentation SO:0001388 "A post translationally modified asparagine amino acid feature."))
(assert (= (name SO:0001388) "modified_L_asparagine"))

(defconcept SO:0001389)
(assert (subset-of SO:0001389 SO:0001385))
(assert (documentation SO:0001389 "A post translationally modified aspartic acid amino acid feature."))
(assert (= (name SO:0001389) "modified_L_aspartic_acid"))

(defconcept SO:0001390)
(assert (subset-of SO:0001390 SO:0001385))
(assert (documentation SO:0001390 "A post translationally modified cysteine amino acid feature."))
(assert (= (name SO:0001390) "modified_L_cysteine"))

(defconcept SO:0001391)
(assert (subset-of SO:0001391 SO:0001385))
(assert (= (name SO:0001391) "modified_L_glutamic_acid"))

(defconcept SO:0001392)
(assert (subset-of SO:0001392 SO:0001385))
(assert (documentation SO:0001392 "A post translationally modified threonine amino acid feature."))
(assert (= (name SO:0001392) "modified_L_threonine"))

(defconcept SO:0001393)
(assert (subset-of SO:0001393 SO:0001385))
(assert (documentation SO:0001393 "A post translationally modified tryptophan amino acid feature."))
(assert (= (name SO:0001393) "modified_L_tryptophan"))

(defconcept SO:0001394)
(assert (subset-of SO:0001394 SO:0001385))
(assert (documentation SO:0001394 "A post translationally modified glutamine amino acid feature."))
(assert (= (name SO:0001394) "modified_L_glutamine"))

(defconcept SO:0001395)
(assert (subset-of SO:0001395 SO:0001385))
(assert (documentation SO:0001395 "A post translationally modified methionine amino acid feature."))
(assert (= (name SO:0001395) "modified_L_methionine"))

(defconcept SO:0001396)
(assert (subset-of SO:0001396 SO:0001385))
(assert (documentation SO:0001396 "A post translationally modified isoleucine amino acid feature."))
(assert (= (name SO:0001396) "modified_L_isoleucine"))

(defconcept SO:0001397)
(assert (subset-of SO:0001397 SO:0001385))
(assert (documentation SO:0001397 "A post translationally modified phenylalanine amino acid feature."))
(assert (= (name SO:0001397) "modified_L_phenylalanine"))

(defconcept SO:0001398)
(assert (subset-of SO:0001398 SO:0001385))
(assert (documentation SO:0001398 "A post translationally modified histidie amino acid feature."))
(assert (= (name SO:0001398) "modified_L_histidine"))

(defconcept SO:0001399)
(assert (subset-of SO:0001399 SO:0001385))
(assert (documentation SO:0001399 "A post translationally modified serine amino acid feature."))
(assert (= (name SO:0001399) "modified_L_serine"))

(defconcept SO:0001400)
(assert (subset-of SO:0001400 SO:0001385))
(assert (documentation SO:0001400 "A post translationally modified lysine amino acid feature."))
(assert (= (name SO:0001400) "modified_L_lysine"))

(defconcept SO:0001401)
(assert (subset-of SO:0001401 SO:0001385))
(assert (documentation SO:0001401 "A post translationally modified leucine amino acid feature."))
(assert (= (name SO:0001401) "modified_L_leucine"))

(defconcept SO:0001402)
(assert (subset-of SO:0001402 SO:0001385))
(assert (documentation SO:0001402 "A post translationally modified selenocysteine amino acid feature."))
(assert (= (name SO:0001402) "modified_L_selenocysteine"))

(defconcept SO:0001403)
(assert (subset-of SO:0001403 SO:0001385))
(assert (documentation SO:0001403 "A post translationally modified valine amino acid feature."))
(assert (= (name SO:0001403) "modified_L_valine"))

(defconcept SO:0001404)
(assert (subset-of SO:0001404 SO:0001385))
(assert (documentation SO:0001404 "A post translationally modified proline amino acid feature."))
(assert (= (name SO:0001404) "modified_L_proline"))

(defconcept SO:0001405)
(assert (subset-of SO:0001405 SO:0001385))
(assert (documentation SO:0001405 "A post translationally modified tyrosine amino acid feature."))
(assert (= (name SO:0001405) "modified_L_tyrosine"))

(defconcept SO:0001406)
(assert (subset-of SO:0001406 SO:0001385))
(assert (documentation SO:0001406 "A post translationally modified arginine amino acid feature."))
(assert (= (name SO:0001406) "modified_L_arginine"))

(defconcept SO:0001407)
(assert (subset-of SO:0001407 SO:0000443))
(assert (documentation SO:0001407 "An attribute describing the nature of a proteinaceous polymer, where by the amino acid units are joined by peptide bonds."))
(assert (= (name SO:0001407) "peptidyl"))

(defconcept SO:0001408)
(assert (subset-of SO:0001408 SO:0100011))
(assert (documentation SO:0001408 "The C-terminal residues of a polypeptide which are exchanged for a GPI-anchor."))
(assert (= (name SO:0001408) "cleaved_for_gpi_anchor_region"))

(defconcept SO:0001409)
(assert (subset-of SO:0001409 SO:0000001))
(assert (documentation SO:0001409 "A region which is intended for use in an experiment."))
(assert (= (name SO:0001409) "biomaterial_region"))

(defconcept SO:0001410)
(assert (subset-of SO:0001410 SO:0000001))
(assert (documentation SO:0001410 "A region which is the result of some arbitrary experimental procedure. The procedure may be carried out with biological material or inside a computer."))
(assert (= (name SO:0001410) "experimental_feature"))

(defconcept SO:0001411)
(assert (subset-of SO:0001411 SO:0000001))
(assert (documentation SO:0001411 "A region defined by its disposition to be involved in a biological process."))
(assert (= (name SO:0001411) "biological_region"))

(defconcept SO:0001412)
(assert (subset-of SO:0001412 SO:0000001))
(assert (documentation SO:0001412 "A region that is defined according to its relations with other regions within the same sequence."))
(assert (= (name SO:0001412) "topologically_defined_region"))

(defconcept SO:0001413)
(assert (subset-of SO:0001413 SO:0001021))
(assert (documentation SO:0001413 "The point within a chromosome where a translocation begins or ends."))
(assert (= (name SO:0001413) "translocation_breakpoint"))

(defconcept SO:0001414)
(assert (subset-of SO:0001414 SO:0001021))
(assert (documentation SO:0001414 "The point within a chromosome where a insertion begins or ends."))
(assert (= (name SO:0001414) "insertion_breakpoint"))

(defconcept SO:0001415)
(assert (subset-of SO:0001415 SO:0001021))
(assert (documentation SO:0001415 "The point within a chromosome where a deletion begins or ends."))
(assert (= (name SO:0001415) "deletion_breakpoint"))

(defconcept SO:0001416)
(assert (subset-of SO:0001416 SO:0000239))
(assert (documentation SO:0001416 "A flanking region located five prime of a specific region."))
(assert (= (name SO:0001416) "five_prime_flanking_region"))

(defconcept SO:0001417)
(assert (subset-of SO:0001417 SO:0000239))
(assert (documentation SO:0001417 "A flanking region located three prime of a specific region."))
(assert (= (name SO:0001417) "three_prime_flanking_region"))

(defconcept SO:0001418)
(assert (subset-of SO:0001418 SO:0001410))
(assert (documentation SO:0001418 "An experimental region, defined by a tiling array experiment to be transcribed at some level."))
(assert (= (name SO:0001418) "transcribed_fragment"))

(defconcept SO:0001419)
(assert (subset-of SO:0001419 SO:0000162))
(assert (documentation SO:0001419 "Intronic 2 bp region bordering exon. A splice_site that adjacent_to exon and overlaps intron."))
(assert (= (name SO:0001419) "cis_splice_site"))

(defconcept SO:0001420)
(assert (subset-of SO:0001420 SO:0000162))
(assert (documentation SO:0001420 "Primary transcript region bordering trans-splice junction."))
(assert (= (name SO:0001420) "trans_splice_site"))

(defconcept SO:0001421)
(assert (subset-of SO:0001421 SO:0000699))
(assert (documentation SO:0001421 "The boundary between an intron and an exon."))
(assert (= (name SO:0001421) "splice_junction"))

(defconcept SO:0001422)
(assert (subset-of SO:0001422 SO:0100001))
(assert (documentation SO:0001422 "A region of a polypeptide, involved in the transition from one conformational state to another."))
(assert (= (name SO:0001422) "conformational_switch"))

(defconcept SO:0001423)
(assert (subset-of SO:0001423 SO:0000150))
(assert (documentation SO:0001423 "A read produced by the dye terminator method of sequencing."))
(assert (= (name SO:0001423) "dye_terminator_read"))

(defconcept SO:0001424)
(assert (subset-of SO:0001424 SO:0000150))
(assert (documentation SO:0001424 "A read produced by pyrosequencing technology."))
(assert (= (name SO:0001424) "pyrosequenced_read"))

(defconcept SO:0001425)
(assert (subset-of SO:0001425 SO:0000150))
(assert (documentation SO:0001425 "A read produced by ligation based sequencing technologies."))
(assert (= (name SO:0001425) "ligation_based_read"))

(defconcept SO:0001426)
(assert (subset-of SO:0001426 SO:0000150))
(assert (documentation SO:0001426 "A read produced by the polymerase based sequence by synthesis method."))
(assert (= (name SO:0001426) "polymerase_synthesis_read"))

(defconcept SO:0001427)
(assert (subset-of SO:0001427 SO:0005836))
(assert (documentation SO:0001427 "A structural region in an RNA molecule which promotes ribosomal frameshifting of cis coding sequence."))
(assert (= (name SO:0001427) "cis_regulatory_frameshift_element"))

(defconcept SO:0001428)
(assert (subset-of SO:0001428 SO:0000353))
(assert (documentation SO:0001428 "A sequence assembly derived from expressed sequences."))
(assert (= (name SO:0001428) "expressed_sequence_assembly"))

(defconcept SO:0001429)
(assert (subset-of SO:0001429 SO:0000409))
(assert (documentation SO:0001429 "A region of a molecule that binds to DNA."))
(assert (= (name SO:0001429) "DNA_binding_site"))

(defconcept SO:0001430)
(assert (subset-of SO:0001430 SO:0000699))
(assert (documentation SO:0001430 "The boundary between the UTR and the polyA sequence."))
(assert (= (name SO:0001430) "polyA_junction"))

(defconcept SO:0001431)
(assert (subset-of SO:0001431 SO:0000704))
(assert (documentation SO:0001431 "A gene that is not transcribed under normal conditions and is not critical to normal cellular functioning."))
(assert (= (name SO:0001431) "cryptic_gene"))

(defconcept SO:0001432)
(assert (subset-of SO:0001432 SO:1000070))
(assert (= (name SO:0001432) "sequence_variant_affecting_polyadenylation"))

(defconcept SO:0001433)
(assert (subset-of SO:0001433 SO:0000317))
(assert (documentation SO:0001433 "A three prime RACE (Rapid Amplification of cDNA Ends) clone is a cDNA clone copied from the 3' end of an mRNA (using a poly-dT primer to capture the polyA tail and a gene-specific or randomly primed 5' primer), and spliced into a vector for propagation in a suitable host."))
(assert (= (name SO:0001433) "three_prime_RACE_clone"))

(defconcept SO:0001434)
(assert (subset-of SO:0001434 SO:0000336))
(assert (documentation SO:0001434 "A cassette pseudogene is a kind of gene in an inactive form which may recombine at a telomeric locus to form a functional copy."))
(assert (= (name SO:0001434) "cassette_pseudogene"))

(defconcept SO:0001435)
(assert (subset-of SO:0001435 SO:0001237))
(assert (= (name SO:0001435) "alanine"))

(defconcept SO:0001436)
(assert (subset-of SO:0001436 SO:0001237))
(assert (= (name SO:0001436) "valine"))

(defconcept SO:0001437)
(assert (subset-of SO:0001437 SO:0001237))
(assert (= (name SO:0001437) "leucine"))

(defconcept SO:0001438)
(assert (subset-of SO:0001438 SO:0001237))
(assert (= (name SO:0001438) "isoleucine"))

(defconcept SO:0001439)
(assert (subset-of SO:0001439 SO:0001237))
(assert (= (name SO:0001439) "proline"))

(defconcept SO:0001440)
(assert (subset-of SO:0001440 SO:0001237))
(assert (= (name SO:0001440) "tryptophan"))

(defconcept SO:0001441)
(assert (subset-of SO:0001441 SO:0001237))
(assert (= (name SO:0001441) "phenylalanine"))

(defconcept SO:0001442)
(assert (subset-of SO:0001442 SO:0001237))
(assert (= (name SO:0001442) "methionine"))

(defconcept SO:0001443)
(assert (subset-of SO:0001443 SO:0001237))
(assert (= (name SO:0001443) "glycine"))

(defconcept SO:0001444)
(assert (subset-of SO:0001444 SO:0001237))
(assert (= (name SO:0001444) "serine"))

(defconcept SO:0001445)
(assert (subset-of SO:0001445 SO:0001237))
(assert (= (name SO:0001445) "threonine"))

(defconcept SO:0001446)
(assert (subset-of SO:0001446 SO:0001237))
(assert (= (name SO:0001446) "tyrosine"))

(defconcept SO:0001447)
(assert (subset-of SO:0001447 SO:0001237))
(assert (= (name SO:0001447) "cysteine"))

(defconcept SO:0001448)
(assert (subset-of SO:0001448 SO:0001237))
(assert (= (name SO:0001448) "glutamine"))

(defconcept SO:0001449)
(assert (subset-of SO:0001449 SO:0001237))
(assert (= (name SO:0001449) "asparagine"))

(defconcept SO:0001450)
(assert (subset-of SO:0001450 SO:0001237))
(assert (= (name SO:0001450) "lysine"))

(defconcept SO:0001451)
(assert (subset-of SO:0001451 SO:0001237))
(assert (= (name SO:0001451) "arginine"))

(defconcept SO:0001452)
(assert (subset-of SO:0001452 SO:0001237))
(assert (= (name SO:0001452) "histidine"))

(defconcept SO:0001453)
(assert (subset-of SO:0001453 SO:0001237))
(assert (= (name SO:0001453) "aspartic_acid"))

(defconcept SO:0001454)
(assert (subset-of SO:0001454 SO:0001237))
(assert (= (name SO:0001454) "glutamic_acid"))

(defconcept SO:0001455)
(assert (subset-of SO:0001455 SO:0001237))
(assert (= (name SO:0001455) "selenocysteine"))

(defconcept SO:0001456)
(assert (subset-of SO:0001456 SO:0001237))
(assert (= (name SO:0001456) "pyrrolysine"))

(defconcept SO:0001457)
(assert (has_part SO:0001457 SO:0000695))
(assert (subset-of SO:0001457 SO:0001410))
(assert (documentation SO:0001457 "A region defined by a set of transcribed sequences from the same gene or expressed pseudogene."))
(assert (= (name SO:0001457) "transcribed_cluster"))

(defconcept SO:0001458)
(assert (subset-of SO:0001458 SO:0001457))
(assert (documentation SO:0001458 "A kind of transcribed_cluster defined by a set of transcribed sequences from the a unique gene."))
(assert (= (name SO:0001458) "unigene_cluster"))

(defconcept SO:0001459)
(assert (subset-of SO:0001459 SO:0000314))
(assert (documentation SO:0001459 "Clustered Palindromic Repeats interspersed with bacteriophage derived spacer sequences."))
(assert (= (name SO:0001459) "CRISPR"))

(defconcept SO:0001460)
(assert (part_of SO:0001460 SO:0000627))
(assert (subset-of SO:0001460 SO:0000410))
(assert (documentation SO:0001460 "A protein_binding_site located within an insulator."))
(assert (= (name SO:0001460) "insulator_binding_site"))

(defconcept SO:0001461)
(assert (part_of SO:0001461 SO:0000165))
(assert (subset-of SO:0001461 SO:0000410))
(assert (documentation SO:0001461 "A protein_binding_site located within an enhancer."))
(assert (= (name SO:0001461) "enhancer_binding_site"))

(defconcept SO:0001462)
(assert (subset-of SO:0001462 SO:0001260))
(assert (subset-of SO:0001462 SO:0001085))
(assert (documentation SO:0001462 "A collection of contigs."))
(assert (= (name SO:0001462) "contig_collection"))

(defconcept SO:0001463)
(assert (subset-of SO:0001463 SO:0000655))
(assert (documentation SO:0001463 "A multiexonic non-coding RNA transcribed by RNA polymerase II."))
(assert (= (name SO:0001463) "lincRNA"))

(defconcept SO:0001464)
(assert (subset-of SO:0001464 SO:0000345))
(assert (documentation SO:0001464 "An EST spanning part or all of the untranslated regions of a protein-coding transcript."))
(assert (= (name SO:0001464) "UST"))

(defconcept SO:0001465)
(assert (subset-of SO:0001465 SO:0001464))
(assert (documentation SO:0001465 "A UST located in the 3'UTR of a protein-coding transcript."))
(assert (= (name SO:0001465) "three_prime_UST"))

(defconcept SO:0001466)
(assert (subset-of SO:0001466 SO:0001464))
(assert (documentation SO:0001466 "An UST located in the 5'UTR of a protein-coding transcript."))
(assert (= (name SO:0001466) "five_prime_UST"))

(defconcept SO:0001467)
(assert (subset-of SO:0001467 SO:0000345))
(assert (documentation SO:0001467 "A tag produced from a single sequencing read from a RACE product; typically a few hundred base pairs long."))
(assert (= (name SO:0001467) "RST"))

(defconcept SO:0001468)
(assert (subset-of SO:0001468 SO:0001467))
(assert (documentation SO:0001468 "A tag produced from a single sequencing read from a 3'-RACE product; typically a few hundred base pairs long."))
(assert (= (name SO:0001468) "three_prime_RST"))

(defconcept SO:0001469)
(assert (subset-of SO:0001469 SO:0001467))
(assert (documentation SO:0001469 "A tag produced from a single sequencing read from a 5'-RACE product; typically a few hundred base pairs long."))
(assert (= (name SO:0001469) "five_prime_RST"))

(defconcept SO:0001470)
(assert (subset-of SO:0001470 SO:0000102))
(assert (documentation SO:0001470 "A match against an UST sequence."))
(assert (= (name SO:0001470) "UST_match"))

(defconcept SO:0001471)
(assert (subset-of SO:0001471 SO:0000102))
(assert (documentation SO:0001471 "A match against an RST sequence."))
(assert (= (name SO:0001471) "RST_match"))

(defconcept SO:0001472)
(assert (subset-of SO:0001472 SO:0000347))
(assert (documentation SO:0001472 "A nucleotide match to a primer sequence."))
(assert (= (name SO:0001472) "primer_match"))

(defconcept SO:0001473)
(assert (subset-of SO:0001473 SO:0001243))
(assert (documentation SO:0001473 "A region of the pri miRNA that basepairs with the guide to form the hairpin."))
(assert (= (name SO:0001473) "miRNA_antiguide"))

(defconcept SO:0001474)
(assert (subset-of SO:0001474 SO:0000699))
(assert (documentation SO:0001474 "The boundary between the spliced leader and the first exon of the mRNA."))
(assert (= (name SO:0001474) "trans_splice_junction"))

(defconcept SO:0001475)
(assert (subset-of SO:0001475 SO:0000835))
(assert (documentation SO:0001475 "A region of a primary transcript, that is removed via trans splicing."))
(assert (= (name SO:0001475) "outron"))

(defconcept SO:0001476)
(assert (subset-of SO:0001476 SO:0001038))
(assert (subset-of SO:0001476 SO:0000155))
(assert (documentation SO:0001476 "A plasmid that occurs naturally."))
(assert (= (name SO:0001476) "natural_plasmid"))

(defconcept SO:0001477)
(assert (subset-of SO:0001477 SO:0000637))
(assert (documentation SO:0001477 "A gene trap construct is a type of engineered plasmid which is designed to integrate into a genome and produce a fusion transcript between exons of the gene into which it inserts and a reporter element in the construct. Gene traps contain a splice acceptor, do not contain promoter elements for the reporter, and are mutagenic. Gene traps may be bicistronic with the second cassette containing a promoter driving an a selectable marker."))
(assert (= (name SO:0001477) "gene_trap_construct"))

(defconcept SO:0001478)
(assert (subset-of SO:0001478 SO:0000637))
(assert (documentation SO:0001478 "A promoter trap construct is a type of engineered plasmid which is designed to integrate into a genome and express a reporter when inserted in close proximity to a promoter element. Promoter traps typically do not contain promoter elements and are mutagenic."))
(assert (= (name SO:0001478) "promoter_trap_construct"))

(defconcept SO:0001479)
(assert (subset-of SO:0001479 SO:0000637))
(assert (documentation SO:0001479 "An enhancer trap construct is a type of engineered plasmid which is designed to integrate into a genome and express a reporter when the expression from a basic minimal promoter is enhanced by genomic enhancer elements. Enhancer traps contain promoter elements and are not usually mutagenic."))
(assert (= (name SO:0001479) "enhancer_trap_construct"))

(defconcept SO:0001480)
(assert (part_of SO:0001480 SO:0000154))
(assert (subset-of SO:0001480 SO:0000150))
(assert (documentation SO:0001480 "A region of sequence from the end of a PAC clone that may provide a highly specific marker."))
(assert (= (name SO:0001480) "PAC_end"))

(defconcept SO:0001481)
(assert (subset-of SO:0001481 SO:0000006))
(assert (documentation SO:0001481 "RAPD is a 'PCR product' where a sequence variant is identified through the use of PCR with random primers."))
(assert (= (name SO:0001481) "RAPD"))

(defconcept SO:0001482)
(assert (subset-of SO:0001482 SO:0000165))
(assert (= (name SO:0001482) "shadow_enhancer"))

(defconcept SO:0001483)
(assert (subset-of SO:0001483 SO:1000002))
(assert (documentation SO:0001483 "SNVs are single base pair positions in genomic DNA at which different sequence alternatives exist."))
(assert (= (name SO:0001483) "SNV"))

(defconcept SO:0001484)
(assert (part_of SO:0001484 SO:0000624))
(assert (subset-of SO:0001484 SO:0000657))
(assert (documentation SO:0001484 "An X element combinatorial repeat is a repeat region located between the X element and the telomere or adjacent Y' element."))
(assert (= (name SO:0001484) "X_element_combinatorial_repeat"))

(defconcept SO:0001485)
(assert (part_of SO:0001485 SO:0000624))
(assert (subset-of SO:0001485 SO:0000657))
(assert (documentation SO:0001485 "A Y' element is a repeat region (SO:0000657) located adjacent to telomeric repeats or X element combinatorial repeats, either as a single copy or tandem repeat of two to four copies."))
(assert (= (name SO:0001485) "Y_prime_ element"))

(defconcept SO:0001486)
(assert (subset-of SO:0001486 SO:0001499))
(assert (documentation SO:0001486 "The status of a whole genome sequence, where the data is minimally filtered or un-filtered, from any number of sequencing platforms, and is assembled into contigs. Genome sequence of this quality may harbour regions of poor quality and can be relatively incomplete."))
(assert (= (name SO:0001486) "standard_draft"))

(defconcept SO:0001487)
(assert (subset-of SO:0001487 SO:0001499))
(assert (documentation SO:0001487 "The status of a whole genome sequence, where overall coverage represents at least 90 percent of the genome."))
(assert (= (name SO:0001487) "high_quality_draft"))

(defconcept SO:0001488)
(assert (subset-of SO:0001488 SO:0001499))
(assert (documentation SO:0001488 "The status of a whole genome sequence, where additional work has been performed, using either manual or automated methods, such as gap resolution."))
(assert (= (name SO:0001488) "improved_high_quality_draft"))

(defconcept SO:0001489)
(assert (subset-of SO:0001489 SO:0001499))
(assert (documentation SO:0001489 "The status of a whole genome sequence,where annotation, and verification of coding regions has occurred."))
(assert (= (name SO:0001489) "annotation_directed_improved_draft"))

(defconcept SO:0001490)
(assert (subset-of SO:0001490 SO:0001499))
(assert (documentation SO:0001490 "The status of a whole genome sequence, where the assembly is high quality, closure approaches have been successful for most gaps, misassemblies and low quality regions."))
(assert (= (name SO:0001490) "noncontiguous_finished"))

(defconcept SO:0001491)
(assert (subset-of SO:0001491 SO:0001499))
(assert (documentation SO:0001491 "The status of a whole genome sequence, with less than 1 error per 100,000 base pairs."))
(assert (= (name SO:0001491) "finished_genome"))

(defconcept SO:0001492)
(assert (part_of SO:0001492 SO:0000188))
(assert (subset-of SO:0001492 SO:0005836))
(assert (documentation SO:0001492 "A regulatory region that is part of an intron."))
(assert (= (name SO:0001492) "intronic_regulatory_region"))

(defconcept SO:0001493)
(assert (part_of SO:0001493 SO:0000577))
(assert (subset-of SO:0001493 SO:0000330))
(assert (documentation SO:0001493 "A centromere DNA Element I (CDEI) is a conserved region, part of the centromere, consisting of a consensus region composed of 8-11bp which enables binding by the centromere binding factor 1(Cbf1p)."))
(assert (= (name SO:0001493) "centromere_DNA_Element_I"))

(defconcept SO:0001494)
(assert (part_of SO:0001494 SO:0000577))
(assert (subset-of SO:0001494 SO:0000330))
(assert (documentation SO:0001494 "A centromere DNA Element II (CDEII) is part a conserved region of the centromere, consisting of a consensus region that is AT-rich and ~ 75-100 bp in length."))
(assert (= (name SO:0001494) "centromere_DNA_Element_II"))

(defconcept SO:0001495)
(assert (part_of SO:0001495 SO:0000577))
(assert (subset-of SO:0001495 SO:0000330))
(assert (documentation SO:0001495 "A centromere DNA Element I (CDEI) is a conserved region, part of the centromere, consisting of a consensus region that consists of a 25-bp which enables binding by the centromere DNA binding factor 3 (CBF3) complex."))
(assert (= (name SO:0001495) "centromere_DNA_Element_III"))

(defconcept SO:0001496)
(assert (part_of SO:0001496 SO:0000624))
(assert (subset-of SO:0001496 SO:0000657))
(assert (documentation SO:0001496 "The telomeric repeat is a repeat region, part of the chromosome, which in yeast, is a G-rich terminal sequence of the form (TG(1-3))n or more precisely ((TG)(1-6)TG(2-3))n."))
(assert (= (name SO:0001496) "telomeric_repeat"))

(defconcept SO:0001497)
(assert (part_of SO:0001497 SO:0000624))
(assert (subset-of SO:0001497 SO:0000330))
(assert (documentation SO:0001497 "The X element is a conserved region, of the telomere, of ~475 bp that contains an ARS sequence and in most cases an Abf1p binding site."))
(assert (= (name SO:0001497) "X_element"))

(defconcept SO:0001498)
(assert (part_of SO:0001498 SO:0000152))
(assert (subset-of SO:0001498 SO:0000150))
(assert (documentation SO:0001498 "A region of sequence from the end of a YAC clone that may provide a highly specific marker."))
(assert (= (name SO:0001498) "YAC_end"))

(defconcept SO:0001499)
(assert (subset-of SO:0001499 SO:0000905))
(assert (documentation SO:0001499 "The status of whole genome sequence."))
(assert (= (name SO:0001499) "whole_genome_sequence_status"))

(defconcept SO:0001500)
(assert (subset-of SO:0001500 SO:0001645))
(assert (documentation SO:0001500 "A biological_region characterized as a single heritable trait in a phenotype screen. The heritable phenotype may be mapped to a chromosome but generally has not been characterized to a specific gene locus."))
(assert (= (name SO:0001500) "heritable_phenotypic_marker"))

(defconcept SO:0001501)
(assert (subset-of SO:0001501 SO:0001260))
(assert (documentation SO:0001501 "A collection of peptide sequences."))
(assert (= (name SO:0001501) "peptide_collection"))

(defconcept SO:0001502)
(assert (subset-of SO:0001502 SO:0001410))
(assert (documentation SO:0001502 "An experimental feature with high sequence identity to another sequence."))
(assert (= (name SO:0001502) "high_identity_region"))

(defconcept SO:0001503)
(assert (subset-of SO:0001503 SO:0000673))
(assert (documentation SO:0001503 "A transcript for which no open reading frame has been identified and for which no other function has been determined."))
(assert (= (name SO:0001503) "processed_transcript"))

(defconcept SO:0001504)
(assert (subset-of SO:0001504 SO:0000240))
(assert (documentation SO:0001504 "A chromosome variation derived from an event during meiosis."))
(assert (= (name SO:0001504) "assortment_derived_variation"))

(defconcept SO:0001505)
(assert (subset-of SO:0001505 SO:0001026))
(assert (documentation SO:0001505 "A collection of sequences (often chromosomes) taken as the standard for a given organism and genome assembly."))
(assert (= (name SO:0001505) "reference_genome"))

(defconcept SO:0001506)
(assert (subset-of SO:0001506 SO:0001026))
(assert (documentation SO:0001506 "A collection of sequences (often chromosomes) of an individual."))
(assert (= (name SO:0001506) "variant_genome"))

(defconcept SO:0001507)
(assert (subset-of SO:0001507 SO:0001260))
(assert (documentation SO:0001507 "A collection of one or more sequences of an individual."))
(assert (= (name SO:0001507) "variant_collection"))

(defconcept SO:0001508)
(assert (subset-of SO:0001508 SO:0000733))
(assert (= (name SO:0001508) "alteration_attribute"))

(defconcept SO:0001509)
(assert (subset-of SO:0001509 SO:0001508))
(assert (= (name SO:0001509) "chromosomal_variation_attribute"))

(defconcept SO:0001510)
(assert (subset-of SO:0001510 SO:0001509))
(assert (= (name SO:0001510) "intrachromosomal"))

(defconcept SO:0001511)
(assert (subset-of SO:0001511 SO:0001509))
(assert (= (name SO:0001511) "interchromosomal"))

(defconcept SO:0001512)
(assert (subset-of SO:0001512 SO:0001508))
(assert (documentation SO:0001512 "A quality of a chromosomal insertion,."))
(assert (= (name SO:0001512) "insertion_attribute"))

(defconcept SO:0001513)
(assert (subset-of SO:0001513 SO:0001512))
(assert (= (name SO:0001513) "tandem"))

(defconcept SO:0001514)
(assert (subset-of SO:0001514 SO:0001512))
(assert (documentation SO:0001514 "A quality of an insertion where the insert is not in a cytologically inverted orientation."))
(assert (= (name SO:0001514) "direct"))

(defconcept SO:0001515)
(assert (subset-of SO:0001515 SO:0001512))
(assert (documentation SO:0001515 "A quality of an insertion where the insert is in a cytologically inverted orientation."))
(assert (= (name SO:0001515) "inverted"))

(defconcept SO:0001516)
(assert (subset-of SO:0001516 SO:0001523))
(assert (documentation SO:0001516 "The quality of a duplication where the new region exists independently of the original."))
(assert (= (name SO:0001516) "free"))

(defconcept SO:0001517)
(assert (subset-of SO:0001517 SO:0001508))
(assert (= (name SO:0001517) "inversion_attribute"))

(defconcept SO:0001518)
(assert (subset-of SO:0001518 SO:0001517))
(assert (= (name SO:0001518) "pericentric"))

(defconcept SO:0001519)
(assert (subset-of SO:0001519 SO:0001517))
(assert (= (name SO:0001519) "paracentric"))

(defconcept SO:0001520)
(assert (subset-of SO:0001520 SO:0001508))
(assert (= (name SO:0001520) "translocaton_attribute"))

(defconcept SO:0001521)
(assert (subset-of SO:0001521 SO:0001520))
(assert (= (name SO:0001521) "reciprocal"))

(defconcept SO:0001522)
(assert (subset-of SO:0001522 SO:0001520))
(assert (= (name SO:0001522) "insertional"))

(defconcept SO:0001523)
(assert (subset-of SO:0001523 SO:0001508))
(assert (= (name SO:0001523) "duplication_attribute"))

(defconcept SO:0001524)
(assert (subset-of SO:0001524 SO:0001506))
(assert (= (name SO:0001524) "chromosomally_aberrant_genome"))

(defconcept SO:0001525)
(assert (subset-of SO:0001525 SO:0000413))
(assert (documentation SO:0001525 "A region of sequence where the final nucleotide assignment differs from the original assembly due to an improvement that replaces a mistake."))
(assert (= (name SO:0001525) "assembly_error_correction"))

(defconcept SO:0001526)
(assert (subset-of SO:0001526 SO:0000413))
(assert (documentation SO:0001526 "A region of sequence where the final nucleotide assignment is different from that given by the base caller due to an improvement that replaces a mistake."))
(assert (= (name SO:0001526) "base_call_error_correction"))

(defconcept SO:0001527)
(assert (subset-of SO:0001527 SO:0000839))
(assert (documentation SO:0001527 "A region of peptide sequence used to target the polypeptide molecule to a specific organelle."))
(assert (= (name SO:0001527) "peptide_localization_signal"))

(defconcept SO:0001528)
(assert (subset-of SO:0001528 SO:0001527))
(assert (documentation SO:0001528 "A polypeptide region that targets a polypeptide to the nucleus."))
(assert (= (name SO:0001528) "nuclear_localization_signal"))

(defconcept SO:0001529)
(assert (subset-of SO:0001529 SO:0001527))
(assert (documentation SO:0001529 "A polypeptide region that targets a polypeptide to the endosome."))
(assert (= (name SO:0001529) "endosomal_localization_signal"))

(defconcept SO:0001530)
(assert (subset-of SO:0001530 SO:0001527))
(assert (documentation SO:0001530 "A polypeptide region that targets a polypeptide to the lysosome."))
(assert (= (name SO:0001530) "lysosomal_localization_signal"))

(defconcept SO:0001531)
(assert (subset-of SO:0001531 SO:0001527))
(assert (documentation SO:0001531 "A polypeptide region that targets a polypeptide to he cytoplasm."))
(assert (= (name SO:0001531) "nuclear_export_signal"))

(defconcept SO:0001532)
(assert (subset-of SO:0001532 SO:0000299))
(assert (documentation SO:0001532 "A region recognized by a recombinase."))
(assert (= (name SO:0001532) "recombination_signal_sequence"))

(defconcept SO:0001533)
(assert (subset-of SO:0001533 SO:0000162))
(assert (documentation SO:0001533 "A splice site that is in part of the transcript not normally spliced. They occur via mutation or transcriptional error."))
(assert (= (name SO:0001533) "cryptic_splice_site"))

(defconcept SO:0001534)
(assert (subset-of SO:0001534 SO:0001527))
(assert (documentation SO:0001534 "A polypeptide region that targets a polypeptide to the nuclear rim."))
(assert (= (name SO:0001534) "nuclear_rim_localization_signal"))

(defconcept SO:0001535)
(assert (subset-of SO:0001535 SO:0000182))
(assert (documentation SO:0001535 "A P_element is a DNA transposon responsible for hybrid dysgenesis."))
(assert (= (name SO:0001535) "p_element"))

(defconcept SO:0001536)
(assert (subset-of SO:0001536 SO:0001060))
(assert (documentation SO:0001536 "A sequence variant which alters a biological process or function."))
(assert (= (name SO:0001536) "functional_variant"))

(defconcept SO:0001537)
(assert (subset-of SO:0001537 SO:0001060))
(assert (documentation SO:0001537 "A sequence variant that changes one or more sequence features."))
(assert (= (name SO:0001537) "structural_variant"))

(defconcept SO:0001538)
(assert (subset-of SO:0001538 SO:0001536))
(assert (documentation SO:0001538 "A sequence variant which alters the functioning of a transcript."))
(assert (= (name SO:0001538) "transcript_function_variant"))

(defconcept SO:0001539)
(assert (subset-of SO:0001539 SO:0001536))
(assert (documentation SO:0001539 "A sequence variant that affects the functioning of a translational product."))
(assert (= (name SO:0001539) "translational_product_function_variant"))

(defconcept SO:0001540)
(assert (subset-of SO:0001540 SO:0001538))
(assert (documentation SO:0001540 "A sequence variant which alters the level of a transcript."))
(assert (= (name SO:0001540) "level_of_transcript_variant"))

(defconcept SO:0001541)
(assert (subset-of SO:0001541 SO:0001540))
(assert (documentation SO:0001541 "A sequence variant that increases the level of mature, spliced and processed RNA."))
(assert (= (name SO:0001541) "decreased_transcript_level"))

(defconcept SO:0001542)
(assert (subset-of SO:0001542 SO:0001540))
(assert (documentation SO:0001542 "A sequence variant that increases the level of mature, spliced and processed RNA."))
(assert (= (name SO:0001542) "increased_transcript_level"))

(defconcept SO:0001543)
(assert (subset-of SO:0001543 SO:0001538))
(assert (documentation SO:0001543 "A sequence variant that affects the post transcriptional processing of a transcript."))
(assert (= (name SO:0001543) "transcript_processing_variant"))

(defconcept SO:0001544)
(assert (subset-of SO:0001544 SO:0001543))
(assert (documentation SO:0001544 "A variant that changes editing of a transcript."))
(assert (= (name SO:0001544) "editing_variant"))

(defconcept SO:0001545)
(assert (subset-of SO:0001545 SO:0001543))
(assert (documentation SO:0001545 "A sequence variant that changes polyadenylation."))
(assert (= (name SO:0001545) "polyadenylation_variant"))

(defconcept SO:0001546)
(assert (subset-of SO:0001546 SO:0001538))
(assert (documentation SO:0001546 "A variant that changes the stability of a transcript."))
(assert (= (name SO:0001546) "transcript_stability_variant"))

(defconcept SO:0001547)
(assert (subset-of SO:0001547 SO:0001546))
(assert (documentation SO:0001547 "A sequence variant that decreases transcript stability."))
(assert (= (name SO:0001547) "decrease_transcript_stability"))

(defconcept SO:0001548)
(assert (subset-of SO:0001548 SO:0001546))
(assert (documentation SO:0001548 "A sequence variant that increases transcript stability."))
(assert (= (name SO:0001548) "increase_transcript_stability"))

(defconcept SO:0001549)
(assert (subset-of SO:0001549 SO:0001538))
(assert (documentation SO:0001549 "A variant that changes alters the transcription of a transcript."))
(assert (= (name SO:0001549) "transcription_variant"))

(defconcept SO:0001550)
(assert (subset-of SO:0001550 SO:0001549))
(assert (documentation SO:0001550 "A sequence variant that changes the rate of transcription."))
(assert (= (name SO:0001550) "rate_of_transcription_variant"))

(defconcept SO:0001551)
(assert (subset-of SO:0001551 SO:0001550))
(assert (documentation SO:0001551 "A sequence variant that increases the rate of transcription."))
(assert (= (name SO:0001551) "increase_transcription_rate"))

(defconcept SO:0001552)
(assert (subset-of SO:0001552 SO:0001550))
(assert (documentation SO:0001552 "A sequence variant that decreases the rate of transcription."))
(assert (= (name SO:0001552) "decrease_transcription_rate"))

(defconcept SO:0001553)
(assert (subset-of SO:0001553 SO:0001539))
(assert (= (name SO:0001553) "translational_product_level_variant"))

(defconcept SO:0001554)
(assert (subset-of SO:0001554 SO:0001539))
(assert (documentation SO:0001554 "A sequence variant which changes polypeptide functioning."))
(assert (= (name SO:0001554) "polypeptide_function_variant"))

(defconcept SO:0001555)
(assert (subset-of SO:0001555 SO:0001553))
(assert (documentation SO:0001555 "A sequence variant which decreases the translational product level."))
(assert (= (name SO:0001555) "decreased_translational_product_level"))

(defconcept SO:0001556)
(assert (subset-of SO:0001556 SO:0001553))
(assert (documentation SO:0001556 "A sequence variant which increases the translational product level."))
(assert (= (name SO:0001556) "increased_translational_product_level"))

(defconcept SO:0001557)
(assert (subset-of SO:0001557 SO:0001554))
(assert (documentation SO:0001557 "A sequence variant which causes gain of polypeptide function."))
(assert (= (name SO:0001557) "polypeptide_gain_of_function"))

(defconcept SO:0001558)
(assert (subset-of SO:0001558 SO:0001554))
(assert (documentation SO:0001558 "A sequence variant which changes the localization of a polypeptide."))
(assert (= (name SO:0001558) "polypeptide_localization_variant"))

(defconcept SO:0001559)
(assert (subset-of SO:0001559 SO:0001554))
(assert (documentation SO:0001559 "A sequence variant that causes the loss of a polypeptide function."))
(assert (= (name SO:0001559) "polypeptide_loss_of_function"))

(defconcept SO:0001560)
(assert (subset-of SO:0001560 SO:0001559))
(assert (documentation SO:0001560 "A sequence variant that causes the inactivation of a ligand binding site."))
(assert (= (name SO:0001560) "inactive_ligand_binding_site"))

(defconcept SO:0001561)
(assert (subset-of SO:0001561 SO:0001559))
(assert (documentation SO:0001561 "A sequence variant that causes some but not all loss of polypeptide function."))
(assert (= (name SO:0001561) "polypeptide_partial_loss_of_function"))

(defconcept SO:0001562)
(assert (subset-of SO:0001562 SO:0001554))
(assert (documentation SO:0001562 "A sequence variant that causes a change in post translational processing of the peptide."))
(assert (= (name SO:0001562) "polypeptide_post_translational_processing_variant"))

(defconcept SO:0001563)
(assert (subset-of SO:0001563 SO:0001537))
(assert (documentation SO:0001563 "A sequence variant where copies of a feature (CNV) are either increased or decreased."))
(assert (= (name SO:0001563) "copy_number_change"))

(defconcept SO:0001564)
(assert (subset-of SO:0001564 SO:0001537))
(assert (documentation SO:0001564 "A sequence variant where the structure of the gene is changed."))
(assert (= (name SO:0001564) "gene_structure_variant"))

(defconcept SO:0001565)
(assert (subset-of SO:0001565 SO:0001564))
(assert (documentation SO:0001565 "A sequence variant whereby a two genes have become joined."))
(assert (= (name SO:0001565) "gene_fusion"))

(defconcept SO:0001566)
(assert (subset-of SO:0001566 SO:0001537))
(assert (documentation SO:0001566 "A sequence variant located with a regulatory region such as a promoter."))
(assert (= (name SO:0001566) "regulatory_region_variant"))

(defconcept SO:0001567)
(assert (subset-of SO:0001567 SO:0001590))
(assert (documentation SO:0001567 "A sequence variant where at least one base in the terminator codon is changed, but the terminator remains."))
(assert (= (name SO:0001567) "stop_retained_variant"))

(defconcept SO:0001568)
(assert (subset-of SO:0001568 SO:0001537))
(assert (documentation SO:0001568 "A sequence variant that changes the process of splicing."))
(assert (= (name SO:0001568) "splicing_variant"))

(defconcept SO:0001569)
(assert (subset-of SO:0001569 SO:0001568))
(assert (documentation SO:0001569 "A sequence variant causing a new (functional) splice site."))
(assert (= (name SO:0001569) "cryptic_splice_site_variant"))

(defconcept SO:0001570)
(assert (subset-of SO:0001570 SO:0001569))
(assert (documentation SO:0001570 "A sequence variant whereby a new splice site is created due to the activation of a new acceptor."))
(assert (= (name SO:0001570) "cryptic_splice_acceptor"))

(defconcept SO:0001571)
(assert (subset-of SO:0001571 SO:0001569))
(assert (documentation SO:0001571 "A sequence variant whereby a new splice site is created due to the activation of a new donor."))
(assert (= (name SO:0001571) "cryptic_splice_donor"))

(defconcept SO:0001572)
(assert (subset-of SO:0001572 SO:0001568))
(assert (documentation SO:0001572 "A sequence variant whereby an exon is lost from the transcript."))
(assert (= (name SO:0001572) "exon_loss"))

(defconcept SO:0001573)
(assert (subset-of SO:0001573 SO:0001568))
(assert (documentation SO:0001573 "A sequence variant whereby an intron is gained by the processed transcript; usually a result of an alteration of the donor or acceptor."))
(assert (= (name SO:0001573) "intron_gain"))

(defconcept SO:0001574)
(assert (subset-of SO:0001574 SO:0001629))
(assert (documentation SO:0001574 "A splice variant that changes the2 base region at the 3' end of an intron."))
(assert (= (name SO:0001574) "splice_acceptor_variant"))

(defconcept SO:0001575)
(assert (subset-of SO:0001575 SO:0001629))
(assert (documentation SO:0001575 "A splice variant that changes the2 base region at the 5' end of an intron."))
(assert (= (name SO:0001575) "splice_donor_variant"))

(defconcept SO:0001576)
(assert (subset-of SO:0001576 SO:0001537))
(assert (documentation SO:0001576 "A sequence variant that changes the structure of the transcript."))
(assert (= (name SO:0001576) "transcript_variant"))

(defconcept SO:0001577)
(assert (subset-of SO:0001577 SO:0001576))
(assert (documentation SO:0001577 "A transcript variant with a complex INDEL- Insertion or deletion that spans an exon/intron border or a coding sequence/UTR border."))
(assert (= (name SO:0001577) "complex_change_in_transcript"))

(defconcept SO:0001578)
(assert (subset-of SO:0001578 SO:0001590))
(assert (documentation SO:0001578 "A sequence variant where at least one base of the terminator codon (stop) is changed, resulting in an elongated transcript."))
(assert (= (name SO:0001578) "stop_lost"))

(defconcept SO:0001579)
(assert (= (name SO:0001579) "transcript_sequence_variant"))

(defconcept SO:0001580)
(assert (subset-of SO:0001580 SO:0001576))
(assert (documentation SO:0001580 "A sequence variant that changes the coding sequence."))
(assert (= (name SO:0001580) "coding_sequence_variant"))

(defconcept SO:0001581)
(assert (subset-of SO:0001581 SO:0001580))
(assert (documentation SO:0001581 "A sequence variant that changes at least one base in a codon."))
(assert (= (name SO:0001581) "codon_variant"))

(defconcept SO:0001582)
(assert (subset-of SO:0001582 SO:0001581))
(assert (documentation SO:0001582 "A codon variant that changes at least one base of the first codon of a transcript."))
(assert (= (name SO:0001582) "initiator_codon_change"))

(defconcept SO:0001583)
(assert (subset-of SO:0001583 SO:0001581))
(assert (documentation SO:0001583 "A sequence variant whereby at least one base of a codon is changed resulting in a codon that encodes for a different amino acid."))
(assert (= (name SO:0001583) "non_synonymous_codon"))

(defconcept SO:0001585)
(assert (subset-of SO:0001585 SO:0001583))
(assert (documentation SO:0001585 "A sequence variant whereby at least one base of a codon is changed resulting in a codon that encodes for a different but similar amino acid. These variants may or may not be deleterious."))
(assert (= (name SO:0001585) "conservative_missense_codon"))

(defconcept SO:0001586)
(assert (subset-of SO:0001586 SO:0001583))
(assert (documentation SO:0001586 "A sequence variant whereby at least one base of a codon is changed resulting in a codon that encodes for an amino acid with different biochemical properties."))
(assert (= (name SO:0001586) "non_conservative_missense_codon"))

(defconcept SO:0001587)
(assert (subset-of SO:0001587 SO:0001583))
(assert (documentation SO:0001587 "A sequence variant whereby at least one base of a codon is changed, resulting in a premature stop codon, leading to a shortened transcript."))
(assert (= (name SO:0001587) "stop_gained"))

(defconcept SO:0001588)
(assert (subset-of SO:0001588 SO:1000132))
(assert (subset-of SO:0001588 SO:0001581))
(assert (documentation SO:0001588 "A sequence variant whereby a base of a codon is changed, but there is no resulting change to the encoded amino acid."))
(assert (= (name SO:0001588) "synonymous_codon"))

(defconcept SO:0001589)
(assert (subset-of SO:0001589 SO:0001580))
(assert (documentation SO:0001589 "A sequence variant which causes a disruption of the translational reading frame, because the number of nucleotides inserted or deleted is not a multiple of three."))
(assert (= (name SO:0001589) "frameshift_variant"))

(defconcept SO:0001590)
(assert (subset-of SO:0001590 SO:0001625))
(assert (documentation SO:0001590 "A sequence variant whereby at least one of the bases in the terminator codon is changed."))
(assert (= (name SO:0001590) "terminator_codon_variant"))

(defconcept SO:0001591)
(assert (subset-of SO:0001591 SO:0001589))
(assert (documentation SO:0001591 "A sequence variant that reverts the sequence of a previous frameshift mutation back to the initial frame."))
(assert (= (name SO:0001591) "frame_restoring_variant"))

(defconcept SO:0001592)
(assert (subset-of SO:0001592 SO:0001589))
(assert (documentation SO:0001592 "A sequence variant which causes a disruption of the translational reading frame, by shifting one base ahead."))
(assert (= (name SO:0001592) "minus_1_frameshift_variant"))

(defconcept SO:0001593)
(assert (subset-of SO:0001593 SO:0001589))
(assert (= (name SO:0001593) "minus_2_frameshift_variant"))

(defconcept SO:0001594)
(assert (subset-of SO:0001594 SO:0001589))
(assert (documentation SO:0001594 "A sequence variant which causes a disruption of the translational reading frame, by shifting one base backward."))
(assert (= (name SO:0001594) "plus_1_frameshift_variant"))

(defconcept SO:0001595)
(assert (subset-of SO:0001595 SO:0001589))
(assert (= (name SO:0001595) "plus_2_frameshift variant"))

(defconcept SO:0001596)
(assert (subset-of SO:0001596 SO:0001576))
(assert (documentation SO:0001596 "A sequence variant within a transcript that changes the secondary structure of the RNA product."))
(assert (= (name SO:0001596) "transcript_secondary_structure_variant"))

(defconcept SO:0001597)
(assert (subset-of SO:0001597 SO:0001596))
(assert (documentation SO:0001597 "A secondary structure variant that compensate for the change made by a previous variant."))
(assert (= (name SO:0001597) "compensatory_transcript_secondary_structure_variant"))

(defconcept SO:0001598)
(assert (subset-of SO:0001598 SO:0001537))
(assert (documentation SO:0001598 "A sequence variant within the transcript that changes the structure of the translational product."))
(assert (= (name SO:0001598) "translational_product_structure_variant"))

(defconcept SO:0001599)
(assert (subset-of SO:0001599 SO:0001598))
(assert (documentation SO:0001599 "A sequence variant that changes the resulting polypeptide structure."))
(assert (= (name SO:0001599) "3D_polypeptide_structure_variant"))

(defconcept SO:0001600)
(assert (subset-of SO:0001600 SO:0001599))
(assert (documentation SO:0001600 "A sequence variant that changes the resulting polypeptide structure."))
(assert (= (name SO:0001600) "complex_3D_structural_variant"))

(defconcept SO:0001601)
(assert (subset-of SO:0001601 SO:0001599))
(assert (documentation SO:0001601 "A sequence variant in the CDS region that causes a conformational change in the resulting polypeptide sequence."))
(assert (= (name SO:0001601) "conformational_change_variant"))

(defconcept SO:0001602)
(assert (subset-of SO:0001602 SO:0001598))
(assert (= (name SO:0001602) "complex_change_of_translational_product_variant"))

(defconcept SO:0001603)
(assert (subset-of SO:0001603 SO:0001598))
(assert (documentation SO:0001603 "A sequence variant with in the CDS that causes a change in the resulting polypeptide sequence."))
(assert (= (name SO:0001603) "polypeptide_sequence_variant"))

(defconcept SO:0001604)
(assert (subset-of SO:0001604 SO:0001603))
(assert (documentation SO:0001604 "A sequence variant within a CDS resulting in the loss of an amino acid from the resulting polypeptide."))
(assert (= (name SO:0001604) "amino_acid_deletion"))

(defconcept SO:0001605)
(assert (subset-of SO:0001605 SO:0001603))
(assert (documentation SO:0001605 "A sequence variant within a CDS resulting in the gain of an amino acid to the resulting polypeptide."))
(assert (= (name SO:0001605) "amino_acid_insertion"))

(defconcept SO:0001606)
(assert (subset-of SO:0001606 SO:0001603))
(assert (documentation SO:0001606 "A sequence variant of a codon resulting in the substitution of one amino acid for another in the resulting polypeptide."))
(assert (= (name SO:0001606) "amino_acid_substitution"))

(defconcept SO:0001607)
(assert (subset-of SO:0001607 SO:0001606))
(assert (documentation SO:0001607 "A sequence variant of a codon causing the substitution of a similar amino acid for another in the resulting polypeptide."))
(assert (= (name SO:0001607) "conservative_amino_acid_substitution"))

(defconcept SO:0001608)
(assert (subset-of SO:0001608 SO:0001606))
(assert (documentation SO:0001608 "A sequence variant of a codon causing the substitution of a non conservative amino acid for another in the resulting polypeptide."))
(assert (= (name SO:0001608) "non_conservative_amino_acid_substitution"))

(defconcept SO:0001609)
(assert (subset-of SO:0001609 SO:0001603))
(assert (documentation SO:0001609 "A sequence variant with in the CDS that causes elongation of the resulting polypeptide sequence."))
(assert (= (name SO:0001609) "elongated_polypeptide"))

(defconcept SO:0001610)
(assert (subset-of SO:0001610 SO:0001609))
(assert (documentation SO:0001610 "A sequence variant with in the CDS that causes elongation of the resulting polypeptide sequence at the C terminus."))
(assert (= (name SO:0001610) "elongated_polypeptide_C_terminal"))

(defconcept SO:0001611)
(assert (subset-of SO:0001611 SO:0001609))
(assert (documentation SO:0001611 "A sequence variant with in the CDS that causes elongation of the resulting polypeptide sequence at the N terminus."))
(assert (= (name SO:0001611) "elongated_polypeptide_N_terminal"))

(defconcept SO:0001612)
(assert (subset-of SO:0001612 SO:0001610))
(assert (documentation SO:0001612 "A sequence variant with in the CDS that causes in frame elongation of the resulting polypeptide sequence at the C terminus."))
(assert (= (name SO:0001612) "elongated_in_frame_polypeptide_C_terminal"))

(defconcept SO:0001613)
(assert (subset-of SO:0001613 SO:0001610))
(assert (documentation SO:0001613 "A sequence variant with in the CDS that causes out of frame elongation of the resulting polypeptide sequence at the C terminus."))
(assert (= (name SO:0001613) "elongated_out_of_frame_polypeptide_C_terminal"))

(defconcept SO:0001614)
(assert (subset-of SO:0001614 SO:0001611))
(assert (documentation SO:0001614 "A sequence variant with in the CDS that causes in frame elongation of the resulting polypeptide sequence at the N terminus."))
(assert (= (name SO:0001614) "elongated_in_frame_polypeptide_N_terminal_elongation"))

(defconcept SO:0001615)
(assert (subset-of SO:0001615 SO:0001611))
(assert (documentation SO:0001615 "A sequence variant with in the CDS that causes out of frame elongation of the resulting polypeptide sequence at the N terminus."))
(assert (= (name SO:0001615) "elongated_out_of_frame_polypeptide_N_terminal"))

(defconcept SO:0001616)
(assert (subset-of SO:0001616 SO:0001603))
(assert (documentation SO:0001616 "A sequence variant that causes a fusion of two polypeptide sequences."))
(assert (= (name SO:0001616) "polypeptide_fusion"))

(defconcept SO:0001617)
(assert (subset-of SO:0001617 SO:0001603))
(assert (documentation SO:0001617 "A sequence variant of the CD that causes a truncation of the resulting polypeptide."))
(assert (= (name SO:0001617) "polypeptide_truncation"))

(defconcept SO:0001618)
(assert (subset-of SO:0001618 SO:0001560))
(assert (documentation SO:0001618 "A sequence variant that causes the inactivation of a catalytic site."))
(assert (= (name SO:0001618) "inactive_catalytic_site"))

(defconcept SO:0001619)
(assert (subset-of SO:0001619 SO:0001576))
(assert (documentation SO:0001619 "A transcript variant of a non coding RNA gene."))
(assert (= (name SO:0001619) "nc_transcript_variant"))

(defconcept SO:0001620)
(assert (subset-of SO:0001620 SO:0001619))
(assert (documentation SO:0001620 "A transcript variant located with the sequence of the mature miRNA."))
(assert (= (name SO:0001620) "mature_miRNA_variant"))

(defconcept SO:0001621)
(assert (subset-of SO:0001621 SO:0001576))
(assert (documentation SO:0001621 "A variant in a transcript that is the target of NMD."))
(assert (= (name SO:0001621) "NMD_transcript_variant"))

(defconcept SO:0001622)
(assert (subset-of SO:0001622 SO:0001576))
(assert (documentation SO:0001622 "A transcript variant that is located within the UTR."))
(assert (= (name SO:0001622) "UTR_variant"))

(defconcept SO:0001623)
(assert (subset-of SO:0001623 SO:0001622))
(assert (documentation SO:0001623 "A UTR variant of the 5' UTR."))
(assert (= (name SO:0001623) "5_prime_UTR_variant"))

(defconcept SO:0001624)
(assert (subset-of SO:0001624 SO:0001622))
(assert (documentation SO:0001624 "A UTR variant of the 3' UTR."))
(assert (= (name SO:0001624) "3_prime_UTR_variant"))

(defconcept SO:0001625)
(assert (subset-of SO:0001625 SO:0001581))
(assert (documentation SO:0001625 "A codon variant that changes at least one base of the last codon of the transcript."))
(assert (= (name SO:0001625) "terminal_codon_variant"))

(defconcept SO:0001626)
(assert (subset-of SO:0001626 SO:0001625))
(assert (documentation SO:0001626 "A sequence variant where at least one base of the final codon of an incompletely annotated transcript is changed."))
(assert (= (name SO:0001626) "incomplete_terminal_codon_variant"))

(defconcept SO:0001627)
(assert (subset-of SO:0001627 SO:0001576))
(assert (documentation SO:0001627 "A transcript variant occurring within an intron."))
(assert (= (name SO:0001627) "intron_variant"))

(defconcept SO:0001628)
(assert (subset-of SO:0001628 SO:0001537))
(assert (documentation SO:0001628 "A sequence variant located in the intergenic region, between genes."))
(assert (= (name SO:0001628) "intergenic_variant"))

(defconcept SO:0001629)
(assert (subset-of SO:0001629 SO:0001568))
(assert (documentation SO:0001629 "A sequence variant that changes the first two or last two bases of an intron."))
(assert (= (name SO:0001629) "splice_site_variant"))

(defconcept SO:0001630)
(assert (subset-of SO:0001630 SO:0001568))
(assert (documentation SO:0001630 "A sequence variant in which a change has occurred within the region of the splice site, either within 1-3 bases of the exon or 3-8 bases of the intron."))
(assert (= (name SO:0001630) "splice_region_variant"))

(defconcept SO:0001631)
(assert (subset-of SO:0001631 SO:0001537))
(assert (documentation SO:0001631 "A sequence variant located 5' of a gene."))
(assert (= (name SO:0001631) "upstream_gene_variant"))

(defconcept SO:0001632)
(assert (subset-of SO:0001632 SO:0001537))
(assert (documentation SO:0001632 "A sequence variant located 3' of a gene."))
(assert (= (name SO:0001632) "downstream_gene_variant"))

(defconcept SO:0001633)
(assert (subset-of SO:0001633 SO:0001632))
(assert (documentation SO:0001633 "A sequence variant located within 5 KB of the end of a gene."))
(assert (= (name SO:0001633) "5KB_downstream_variant"))

(defconcept SO:0001634)
(assert (subset-of SO:0001634 SO:0001632))
(assert (documentation SO:0001634 "A sequence variant located within a half KB of the end of a gene."))
(assert (= (name SO:0001634) "500B_downstream_variant"))

(defconcept SO:0001635)
(assert (subset-of SO:0001635 SO:0001631))
(assert (documentation SO:0001635 "A sequence variant located within 5KB 5' of a gene."))
(assert (= (name SO:0001635) "5KB_upstream_variant"))

(defconcept SO:0001636)
(assert (subset-of SO:0001636 SO:0001631))
(assert (documentation SO:0001636 "A sequence variant located within 2KB 5' of a gene."))
(assert (= (name SO:0001636) "2KB_upstream_variant"))

(defconcept SO:0001637)
(assert (subset-of SO:0001637 SO:0001263))
(assert (documentation SO:0001637 "A gene that encodes for ribosomal RNA."))
(assert (= (name SO:0001637) "rRNA_gene"))

(defconcept SO:0001638)
(assert (subset-of SO:0001638 SO:0001263))
(assert (documentation SO:0001638 "A gene that encodes for an piwi associated RNA."))
(assert (= (name SO:0001638) "piRNA_gene"))

(defconcept SO:0001639)
(assert (subset-of SO:0001639 SO:0001263))
(assert (documentation SO:0001639 "A gene that encodes an RNase P RNA."))
(assert (= (name SO:0001639) "RNase_P_RNA_gene"))

(defconcept SO:0001640)
(assert (subset-of SO:0001640 SO:0001263))
(assert (documentation SO:0001640 "A gene that encodes a RNase_MRP_RNA."))
(assert (= (name SO:0001640) "RNase_MRP_RNA_gene"))

(defconcept SO:0001641)
(assert (subset-of SO:0001641 SO:0001263))
(assert (documentation SO:0001641 "A gene that encodes large intervening non-coding RNA."))
(assert (= (name SO:0001641) "lincRNA_gene"))

(defconcept SO:0001642)
(assert (subset-of SO:0001642 SO:0001410))
(assert (documentation SO:0001642 "A mathematically defined repeat (MDR) is a experimental feature that is determined by querying overlapping oligomers of length k against a database of shotgun sequence data and identifying regions in the query sequence that exceed a statistically determined threshold of repetitiveness."))
(assert (= (name SO:0001642) "mathematically_defined_repeat"))

(defconcept SO:0001643)
(assert (subset-of SO:0001643 SO:0001263))
(assert (documentation SO:0001643 "A telomerase RNA gene is a non coding RNA gene the RNA product of which is a component of telomerase."))
(assert (= (name SO:0001643) "telomerase_RNA_gene"))

(defconcept SO:0001644)
(assert (subset-of SO:0001644 SO:0000804))
(assert (subset-of SO:0001644 SO:0000440))
(assert (documentation SO:0001644 "An engineered vector that is able to take part in homologous recombination in a host with the intent of introducing site specific genomic modifications."))
(assert (= (name SO:0001644) "targeting_vector"))

(defconcept SO:0001645)
(assert (subset-of SO:0001645 SO:0001411))
(assert (documentation SO:0001645 "A measurable sequence feature that varies within a population."))
(assert (= (name SO:0001645) "genetic_marker"))

(defconcept SO:0001646)
(assert (subset-of SO:0001646 SO:0001645))
(assert (documentation SO:0001646 "A genetic marker, discovered using Diversity Arrays Technology (DArT) technology."))
(assert (= (name SO:0001646) "DArT_marker"))

(defconcept SO:0001700)
(assert (subset-of SO:0001700 SO:0001720))
(assert (subset-of SO:0001700 SO:0001089))
(assert (documentation SO:0001700 "Histone modification is a post translationally modified region whereby residues of the histone protein are modified by methylation, acetylation, phosphorylation, ubiquitination, sumoylation, citrullination, or ADP-ribosylation."))
(assert (= (name SO:0001700) "histone_modification"))

(defconcept SO:0001701)
(assert (subset-of SO:0001701 SO:0001700))
(assert (documentation SO:0001701 "A histone modification site where the modification is the methylation of the residue."))
(assert (= (name SO:0001701) "histone_methylation_site"))

(defconcept SO:0001702)
(assert (subset-of SO:0001702 SO:0001700))
(assert (documentation SO:0001702 "A histone modification where the modification is the acylation of the residue."))
(assert (= (name SO:0001702) "histone_acetylation_site"))

(defconcept SO:0001703)
(assert (subset-of SO:0001703 SO:0001702))
(assert (documentation SO:0001703 "A kind of histone modification site, whereby the 9th residue (a lysine), from the start of the H3 histone protein is acylated."))
(assert (= (name SO:0001703) "H3K9_acetylation_site"))

(defconcept SO:0001704)
(assert (subset-of SO:0001704 SO:0001702))
(assert (documentation SO:0001704 "A kind of histone modification site, whereby the 14th residue (a lysine), from the start of the H3 histone protein is acylated."))
(assert (= (name SO:0001704) "H3K14_acetylation_site"))

(defconcept SO:0001705)
(assert (subset-of SO:0001705 SO:0001734))
(assert (documentation SO:0001705 "A kind of histone modification, whereby the 4th residue (a lysine), from the start of the H3 protein is mono-methylated."))
(assert (= (name SO:0001705) "H3K4_monomethylation_site"))

(defconcept SO:0001706)
(assert (subset-of SO:0001706 SO:0001734))
(assert (documentation SO:0001706 "A kind of histone modification site, whereby the 4th residue (a lysine), from the start of the H3 protein is tri-methylated."))
(assert (= (name SO:0001706) "H3K4_trimethylation"))

(defconcept SO:0001707)
(assert (subset-of SO:0001707 SO:0001736))
(assert (documentation SO:0001707 "A kind of histone modification site, whereby the 9th residue (a lysine), from the start of the H3 histone protein is tri-methylated."))
(assert (= (name SO:0001707) "H3K9_trimethylation_site"))

(defconcept SO:0001708)
(assert (subset-of SO:0001708 SO:0001732))
(assert (documentation SO:0001708 "A kind of histone modification site, whereby the 27th residue (a lysine), from the start of the H3 histone protein is mono-methylated."))
(assert (= (name SO:0001708) "H3K27_monomethylation_site"))

(defconcept SO:0001709)
(assert (subset-of SO:0001709 SO:0001732))
(assert (documentation SO:0001709 "A kind of histone modification site, whereby the 27th residue (a lysine), from the start of the H3 histone protein is tri-methylated."))
(assert (= (name SO:0001709) "H3K27_trimethylation_site"))

(defconcept SO:0001710)
(assert (subset-of SO:0001710 SO:0001735))
(assert (documentation SO:0001710 "A kind of histone modification site, whereby the 79th residue (a lysine), from the start of the H3 histone protein is mono- methylated."))
(assert (= (name SO:0001710) "H3K79_monomethylation_site"))

(defconcept SO:0001711)
(assert (subset-of SO:0001711 SO:0001735))
(assert (documentation SO:0001711 "A kind of histone modification site, whereby the 79th residue (a lysine), from the start of the H3 histone protein is di-methylated."))
(assert (= (name SO:0001711) "H3K79_dimethylation_site"))

(defconcept SO:0001712)
(assert (subset-of SO:0001712 SO:0001735))
(assert (documentation SO:0001712 "A kind of histone modification site, whereby the 79th residue (a lysine), from the start of the H3 histone protein is tri-methylated."))
(assert (= (name SO:0001712) "H3K79_trimethylation_site"))

(defconcept SO:0001713)
(assert (subset-of SO:0001713 SO:0001701))
(assert (documentation SO:0001713 "A kind of histone modification site, whereby the 20th residue (a lysine), from the start of the H34histone protein is mono-methylated."))
(assert (= (name SO:0001713) "H4K20_monomethylation_site"))

(defconcept SO:0001714)
(assert (subset-of SO:0001714 SO:0001701))
(assert (documentation SO:0001714 "A kind of histone modification site, whereby the 5th residue (a lysine), from the start of the H2B protein is methylated."))
(assert (= (name SO:0001714) "H2BK5_monomethylation_site"))

(defconcept SO:0001715)
(assert (subset-of SO:0001715 SO:0001055))
(assert (documentation SO:0001715 "An ISRE is a transcriptional cis regulatory region, containing the consensus region: YAGTTTC(A/T)YTTTYCC, responsible for increased transcription via interferon binding."))
(assert (= (name SO:0001715) "ISRE"))

(defconcept SO:0001716)
(assert (subset-of SO:0001716 SO:0001700))
(assert (documentation SO:0001716 "A histone modification site where ubiquitin may be added."))
(assert (= (name SO:0001716) "histone_ubiqitination_site"))

(defconcept SO:0001717)
(assert (subset-of SO:0001717 SO:0001716))
(assert (documentation SO:0001717 "A histone modification site on H2B where ubiquitin may be added."))
(assert (= (name SO:0001717) "H2B_ubiquitination_site"))

(defconcept SO:0001718)
(assert (subset-of SO:0001718 SO:0001702))
(assert (documentation SO:0001718 "A kind of histone modification site, whereby the 14th residue (a lysine), from the start of the H3 histone protein is acylated."))
(assert (= (name SO:0001718) "H3K18_acetylation_site"))

(defconcept SO:0001719)
(assert (subset-of SO:0001719 SO:0001702))
(assert (documentation SO:0001719 "A kind of histone modification, whereby the 23rd residue (a lysine), from the start of the H3 histone protein is acylated."))
(assert (= (name SO:0001719) "H3K23_acylation site"))

(defconcept SO:0001720)
(assert (subset-of SO:0001720 SO:0001411))
(assert (documentation SO:0001720 "A biological region implicated in inherited changes caused by mechanisms other than changes in the underlying DNA sequence."))
(assert (= (name SO:0001720) "epigenetically_modified_region"))

(defconcept SO:0001721)
(assert (subset-of SO:0001721 SO:0001702))
(assert (documentation SO:0001721 "A kind of histone modification site, whereby the 27th residue (a lysine), from the start of the H3 histone protein is acylated."))
(assert (= (name SO:0001721) "H3K27_acylation_site"))

(defconcept SO:0001722)
(assert (subset-of SO:0001722 SO:0001733))
(assert (documentation SO:0001722 "A kind of histone modification site, whereby the 36th residue (a lysine), from the start of the H3 histone protein is mono-methylated."))
(assert (= (name SO:0001722) "H3K36_monomethylation_site"))

(defconcept SO:0001723)
(assert (subset-of SO:0001723 SO:0001733))
(assert (documentation SO:0001723 "A kind of histone modification site, whereby the 36th residue (a lysine), from the start of the H3 histone protein is dimethylated."))
(assert (= (name SO:0001723) "H3K36_dimethylation_site"))

(defconcept SO:0001724)
(assert (subset-of SO:0001724 SO:0001733))
(assert (documentation SO:0001724 "A kind of histone modification site, whereby the 36th residue (a lysine), from the start of the H3 histone protein is tri-methylated."))
(assert (= (name SO:0001724) "H3K36_trimethylation_site"))

(defconcept SO:0001725)
(assert (subset-of SO:0001725 SO:0001734))
(assert (documentation SO:0001725 "A kind of histone modification site, whereby the 4th residue (a lysine), from the start of the H3 histone protein is di-methylated."))
(assert (= (name SO:0001725) "H3K4_dimethylation_site"))

(defconcept SO:0001726)
(assert (subset-of SO:0001726 SO:0001732))
(assert (documentation SO:0001726 "A kind of histone modification site, whereby the 27th residue (a lysine), from the start of the H3 histone protein is di-methylated."))
(assert (= (name SO:0001726) "H3K27_dimethylation_site"))

(defconcept SO:0001727)
(assert (subset-of SO:0001727 SO:0001736))
(assert (documentation SO:0001727 "A kind of histone modification site, whereby the 9th residue (a lysine), from the start of the H3 histone protein is mono-methylated."))
(assert (= (name SO:0001727) "H3K9_monomethylation_site"))

(defconcept SO:0001728)
(assert (subset-of SO:0001728 SO:0001736))
(assert (documentation SO:0001728 "A kind of histone modification site, whereby the 9th residue (a lysine), from the start of the H3 histone protein may be dimethylated."))
(assert (= (name SO:0001728) "H3K9_dimethylation_site"))

(defconcept SO:0001729)
(assert (subset-of SO:0001729 SO:0001702))
(assert (documentation SO:0001729 "A kind of histone modification site, whereby the 16th residue (a lysine), from the start of the H4 histone protein is acylated."))
(assert (= (name SO:0001729) "H4K16_acylation_site"))

(defconcept SO:0001730)
(assert (subset-of SO:0001730 SO:0001702))
(assert (documentation SO:0001730 "A kind of histone modification site, whereby the 5th residue (a lysine), from the start of the H4 histone protein is acylated."))
(assert (= (name SO:0001730) "H4K5_acylation_site"))

(defconcept SO:0001731)
(assert (subset-of SO:0001731 SO:0001702))
(assert (documentation SO:0001731 "A kind of histone modification site, whereby the 8th residue (a lysine), from the start of the H4 histone protein is acylated."))
(assert (= (name SO:0001731) "H4K8_acylation site"))

(defconcept SO:0001732)
(assert (subset-of SO:0001732 SO:0001701))
(assert (documentation SO:0001732 "A kind of histone modification site, whereby the 27th residue (a lysine), from the start of the H3 histone protein is methylated."))
(assert (= (name SO:0001732) "H3K27_methylation_site"))

(defconcept SO:0001733)
(assert (subset-of SO:0001733 SO:0001701))
(assert (documentation SO:0001733 "A kind of histone modification site, whereby the 36th residue (a lysine), from the start of the H3 histone protein is methylated."))
(assert (= (name SO:0001733) "H3K36_methylation_site"))

(defconcept SO:0001734)
(assert (subset-of SO:0001734 SO:0001701))
(assert (documentation SO:0001734 "A kind of histone modification, whereby the 4th residue (a lysine), from the start of the H3 protein is methylated."))
(assert (= (name SO:0001734) "H3K4_methylation_site"))

(defconcept SO:0001735)
(assert (subset-of SO:0001735 SO:0001701))
(assert (documentation SO:0001735 "A kind of histone modification site, whereby the 79th residue (a lysine), from the start of the H3 histone protein is methylated."))
(assert (= (name SO:0001735) "H3K79_methylation_site"))

(defconcept SO:0001736)
(assert (subset-of SO:0001736 SO:0001701))
(assert (documentation SO:0001736 "A kind of histone modification site, whereby the 9th residue (a lysine), from the start of the H3 histone protein is methylated."))
(assert (= (name SO:0001736) "H3K9_methylation_site"))

(defconcept SO:0001737)
(assert (subset-of SO:0001737 SO:0001700))
(assert (documentation SO:0001737 "A histone modification, whereby the histone protein is acylated at multiple sites in a region."))
(assert (= (name SO:0001737) "histone_acylation_region"))

(defconcept SO:0001738)
(assert (subset-of SO:0001738 SO:0001737))
(assert (documentation SO:0001738 "A region of the H4 histone whereby multiple lysines are acylated."))
(assert (= (name SO:0001738) "H4K_acylation_region"))

(defconcept SO:0005836)
(assert (subset-of SO:0005836 SO:0000831))
(assert (documentation SO:0005836 "A DNA sequence that controls the expression of a gene."))
(assert (= (name SO:0005836) "regulatory_region"))

(defconcept SO:0005837)
(assert (subset-of SO:0005837 SO:0000232))
(assert (documentation SO:0005837 "The primary transcript of an evolutionarily conserved eukaryotic low molecular weight RNA capable of intermolecular hybridization with both homologous and heterologous 18S rRNA."))
(assert (= (name SO:0005837) "U14_snoRNA_primary_transcript"))

(defconcept SO:0005841)
(assert (derives_from SO:0005841 SO:0000580))
(assert (subset-of SO:0005841 SO:0000593))
(assert (documentation SO:0005841 "A snoRNA that specifies the site of 2'-O-ribose methylation in an RNA molecule by base pairing with a short sequence around the target residue."))
(assert (= (name SO:0005841) "methylation_guide_snoRNA"))

(defconcept SO:0005843)
(assert (derives_from SO:0005843 SO:0000582))
(assert (subset-of SO:0005843 SO:0000655))
(assert (documentation SO:0005843 "An ncRNA that is part of a ribonucleoprotein that cleaves the primary pre-rRNA transcript in the process of producing mature rRNA molecules."))
(assert (= (name SO:0005843) "rRNA_cleavage_RNA"))

(defconcept SO:0005845)
(assert (subset-of SO:0005845 SO:0000147))
(assert (documentation SO:0005845 "An exon that is the only exon in a gene."))
(assert (= (name SO:0005845) "exon_of_single_exon_gene"))

(defconcept SO:0005847)
(assert (subset-of SO:0005847 SO:0005848))
(assert (= (name SO:0005847) "cassette_array_member"))

(defconcept SO:0005848)
(assert (subset-of SO:0005848 SO:0000081))
(assert (= (name SO:0005848) "gene_cassette_member"))

(defconcept SO:0005849)
(assert (subset-of SO:0005849 SO:0000081))
(assert (= (name SO:0005849) "gene_subarray_member"))

(defconcept SO:0005850)
(assert (part_of SO:0005850 SO:0000186))
(assert (subset-of SO:0005850 SO:0000409))
(assert (documentation SO:0005850 "Non-covalent primer binding site for initiation of replication, transcription, or reverse transcription."))
(assert (= (name SO:0005850) "primer_binding_site"))

(defconcept SO:0005851)
(assert (subset-of SO:0005851 SO:0005855))
(assert (documentation SO:0005851 "An array includes two or more genes, or two or more gene subarrays, contiguously arranged where the individual genes, or subarrays, are either identical in sequence, or essentially so."))
(assert (= (name SO:0005851) "gene_array"))

(defconcept SO:0005852)
(assert (subset-of SO:0005852 SO:0005855))
(assert (documentation SO:0005852 "A subarray is, by defintition, a member of a gene array (SO:0005851); the members of a subarray may differ substantially in sequence, but are closely related in function."))
(assert (= (name SO:0005852) "gene_subarray"))

(defconcept SO:0005853)
(assert (subset-of SO:0005853 SO:0000704))
(assert (documentation SO:0005853 "A gene that can be substituted for a related gene at a different site in the genome."))
(assert (= (name SO:0005853) "gene_cassette"))

(defconcept SO:0005854)
(assert (has_part SO:0005854 SO:0005853))
(assert (subset-of SO:0005854 SO:0005855))
(assert (documentation SO:0005854 "An array of non-functional genes whose members, when captured by recombination form functional genes."))
(assert (= (name SO:0005854) "gene_cassette_array"))

(defconcept SO:0005855)
(assert (subset-of SO:0005855 SO:0001411))
(assert (documentation SO:0005855 "A collection of related genes."))
(assert (= (name SO:0005855) "gene_group"))

(defconcept SO:0005856)
(assert (subset-of SO:0005856 SO:0000210))
(assert (documentation SO:0005856 "A primary transcript encoding seryl tRNA (SO:000269)."))
(assert (= (name SO:0005856) "selenocysteine_tRNA_primary_transcript"))

(defconcept SO:0005857)
(assert (derives_from SO:0005857 SO:0005856))
(assert (subset-of SO:0005857 SO:0000253))
(assert (documentation SO:0005857 "A tRNA sequence that has a selenocysteine anticodon, and a 3' selenocysteine binding region."))
(assert (= (name SO:0005857) "selenocysteinyl_tRNA"))

(defconcept SO:0005858)
(assert (subset-of SO:0005858 SO:0000330))
(assert (documentation SO:0005858 "A region in which two or more pairs of homologous markers occur on the same chromosome in two or more species."))
(assert (= (name SO:0005858) "syntenic_region"))

(defconcept SO:0100001)
(assert (subset-of SO:0100001 SO:0001067))
(assert (documentation SO:0100001 "A region of a peptide that is involved in a biochemical function."))
(assert (= (name SO:0100001) "biochemical_region_of_peptide"))

(defconcept SO:0100002)
(assert (subset-of SO:0100002 SO:0100001))
(assert (documentation SO:0100002 "A region that is involved a contact with another molecule."))
(assert (= (name SO:0100002) "molecular_contact_region"))

(defconcept SO:0100003)
(assert (subset-of SO:0100003 SO:0001070))
(assert (documentation SO:0100003 "A region of polypeptide chain with high conformational flexibility."))
(assert (= (name SO:0100003) "intrinsically_unstructured_polypeptide_region"))

(defconcept SO:0100004)
(assert (subset-of SO:0100004 SO:0001078))
(assert (documentation SO:0100004 "A motif of 3 consecutive residues with dihedral angles as follows: res i: phi -90 bounds -120 to -60, res i: psi -10 bounds -50 to 30, res i+1: phi -75 bounds -100 to -50, res i+1: psi 140 bounds 110 to 170. An extra restriction of the length of the O to O distance would be useful, that it be less than 5 Angstrom. More precisely these two oxygens are the main chain carbonyl oxygen atoms of residues i-1 and i+1."))
(assert (= (name SO:0100004) "catmat_left_handed_three"))

(defconcept SO:0100005)
(assert (subset-of SO:0100005 SO:0001078))
(assert (documentation SO:0100005 "A motif of 4 consecutive residues with dihedral angles as follows: res i: phi -90 bounds -120 to -60, res i psi -10 bounds -50 to 30, res i+1: phi -90 bounds -120 to -60, res i+1: psi -10 bounds -50 to 30, res i+2: phi -75 bounds -100 to -50, res i+2: psi 140 bounds 110 to 170.  The extra restriction of the length of the O to O distance is similar, that it be less than 5 Angstrom. In this case these two Oxygen atoms are the main chain carbonyl oxygen atoms of residues i-1 and i+2."))
(assert (= (name SO:0100005) "catmat_left_handed_four"))

(defconcept SO:0100006)
(assert (subset-of SO:0100006 SO:0001078))
(assert (documentation SO:0100006 "A motif of 3 consecutive residues with dihedral angles as follows: res i: phi -90 bounds -120 to -60, res i: psi -10 bounds -50 to 30, res i+1: phi -75 bounds -100 to -50, res i+1: psi 140 bounds 110 to 170. An extra restriction of the length of the O to O distance would be useful, that it be less than 5 Angstrom. More precisely these two oxygens are the main chain carbonyl oxygen atoms of residues i-1 and i+1."))
(assert (= (name SO:0100006) "catmat_right_handed_three"))

(defconcept SO:0100007)
(assert (subset-of SO:0100007 SO:0001078))
(assert (documentation SO:0100007 "A motif of 4 consecutive residues with dihedral angles as follows: res i: phi -90 bounds -120 to -60, res i: psi -10 bounds -50 to 30, res i+1: phi -90 bounds -120 to -60, res i+1: psi -10 bounds -50 to 30, res i+2: phi -75 bounds -100 to -50, res i+2: psi 140 bounds 110 to 170. The extra restriction of the length of the O to O distance is similar, that it be less than 5 Angstrom. In this case these two Oxygen atoms are the main chain carbonyl oxygen atoms of residues i-1 and i+2."))
(assert (= (name SO:0100007) "catmat_right_handed_four"))

(defconcept SO:0100008)
(assert (subset-of SO:0100008 SO:0001078))
(assert (documentation SO:0100008 "A motif of five consecutive residues and two H-bonds in which: H-bond between CO of residue(i) and NH of residue(i+4), H-bond between CO of residue(i) and NH of residue(i+3),Phi angles of residues(i+1), (i+2) and (i+3) are negative."))
(assert (= (name SO:0100008) "alpha_beta_motif"))

(defconcept SO:0100009)
(assert (subset-of SO:0100009 SO:0100011))
(assert (documentation SO:0100009 "A peptide that acts as a signal for both membrane translocation and lipid attachment in prokaryotes."))
(assert (= (name SO:0100009) "lipoprotein_signal_peptide"))

(defconcept SO:0100010)
(assert (subset-of SO:0100010 SO:0000703))
(assert (documentation SO:0100010 "An experimental region wherean analysis has been run and not produced any annotation."))
(assert (= (name SO:0100010) "no_output"))

(defconcept SO:0100011)
(assert (part_of SO:0100011 SO:0001063))
(assert (subset-of SO:0100011 SO:0000839))
(assert (documentation SO:0100011 "The cleaved_peptide_regon is the a region of peptide sequence that is cleaved during maturation."))
(assert (= (name SO:0100011) "cleaved_peptide_region"))

(defconcept SO:0100012)
(assert (subset-of SO:0100012 SO:0001078))
(assert (documentation SO:0100012 "Irregular, unstructured regions of a protein's backbone, as distinct from the regular region (namely alpha helix and beta strand - characterised by specific patterns of main-chain hydrogen bonds)."))
(assert (= (name SO:0100012) "peptide_coil"))

(defconcept SO:0100013)
(assert (subset-of SO:0100013 SO:0000839))
(assert (documentation SO:0100013 "Hydrophobic regions are regions with a low affinity for water."))
(assert (= (name SO:0100013) "hydrophobic_region_of_peptide"))

(defconcept SO:0100014)
(assert (part_of SO:0100014 SO:0000418))
(assert (subset-of SO:0100014 SO:0100011))
(assert (documentation SO:0100014 "The amino-terminal positively-charged region of a signal peptide (approx 1-5 aa)."))
(assert (= (name SO:0100014) "n_terminal_region"))

(defconcept SO:0100015)
(assert (part_of SO:0100015 SO:0000418))
(assert (subset-of SO:0100015 SO:0100011))
(assert (documentation SO:0100015 "The more polar, carboxy-terminal region of the signal peptide (approx 3-7 aa)."))
(assert (= (name SO:0100015) "c_terminal_region"))

(defconcept SO:0100016)
(assert (part_of SO:0100016 SO:0000418))
(assert (subset-of SO:0100016 SO:0100011))
(assert (documentation SO:0100016 "The central, hydrophobic region of the signal peptide (approx 7-15 aa)."))
(assert (= (name SO:0100016) "central_hydrophobic_region_of_signal_peptide"))

(defconcept SO:0100017)
(assert (subset-of SO:0100017 SO:0001067))
(assert (documentation SO:0100017 "A conserved motif is a short (up to 20 amino acids) region of biological interest that is conserved in different proteins. They may or may not have functional or structural significance within the proteins in which they are found."))
(assert (= (name SO:0100017) "polypeptide_conserved_motif"))

(defconcept SO:0100018)
(assert (subset-of SO:0100018 SO:0100001))
(assert (documentation SO:0100018 "A polypeptide binding motif is a short (up to 20 amino acids) polypeptide region of biological interest that contains one or more amino acids experimentally shown to bind to a ligand."))
(assert (= (name SO:0100018) "polypeptide_binding_motif"))

(defconcept SO:0100019)
(assert (subset-of SO:0100019 SO:0100001))
(assert (documentation SO:0100019 "A polypeptide catalytic motif is a short (up to 20 amino acids) polypeptide region that contains one or more active site residues."))
(assert (= (name SO:0100019) "polypeptide_catalytic_motif"))

(defconcept SO:0100020)
(assert (subset-of SO:0100020 SO:0100002))
(assert (subset-of SO:0100020 SO:0000409))
(assert (documentation SO:0100020 "Residues involved in interactions with DNA."))
(assert (= (name SO:0100020) "polypeptide_DNA_contact"))

(defconcept SO:0100021)
(assert (subset-of SO:0100021 SO:0000839))
(assert (documentation SO:0100021 "A subsection of sequence with biological interest that is conserved in different proteins. They may or may not have functional or structural significance within the proteins in which they are found."))
(assert (= (name SO:0100021) "polypeptide_conserved_region"))

(defconcept SO:1000002)
(assert (subset-of SO:1000002 SO:0001411))
(assert (subset-of SO:1000002 SO:0001059))
(assert (documentation SO:1000002 "Any change in genomic DNA caused by a single event."))
(assert (= (name SO:1000002) "substitution"))

(defconcept SO:1000005)
(assert (subset-of SO:1000005 SO:1000002))
(assert (documentation SO:1000005 "When no simple or well defined DNA mutation event describes the observed DNA change, the keyword \\\"complex\\\" should be used. Usually there are multiple equally plausible explanations for the change."))
(assert (= (name SO:1000005) "complex_substitution"))

(defconcept SO:1000008)
(assert (subset-of SO:1000008 SO:0001483))
(assert (documentation SO:1000008 "A single nucleotide change which has occurred at the same position of a corresponding nucleotide in a reference sequence."))
(assert (= (name SO:1000008) "point_mutation"))

(defconcept SO:1000009)
(assert (subset-of SO:1000009 SO:0001483))
(assert (documentation SO:1000009 "Change of a pyrimidine nucleotide, C or T, into an other pyrimidine nucleotide, or change of a purine nucleotide, A or G, into an other purine nucleotide."))
(assert (= (name SO:1000009) "transition"))

(defconcept SO:1000010)
(assert (subset-of SO:1000010 SO:1000009))
(assert (documentation SO:1000010 "A substitution of a pyrimidine, C or T, for another pyrimidine."))
(assert (= (name SO:1000010) "pyrimidine_transition"))

(defconcept SO:1000011)
(assert (subset-of SO:1000011 SO:1000010))
(assert (documentation SO:1000011 "A transition of a cytidine to a thymine."))
(assert (= (name SO:1000011) "C_to_T_transition"))

(defconcept SO:1000012)
(assert (subset-of SO:1000012 SO:1000011))
(assert (documentation SO:1000012 "The transition of cytidine to thymine occurring at a pCpG site as a consequence of the spontaneous deamination of 5'-methylcytidine."))
(assert (= (name SO:1000012) "C_to_T_transition_at_pCpG_site"))

(defconcept SO:1000013)
(assert (subset-of SO:1000013 SO:1000010))
(assert (= (name SO:1000013) "T_to_C_transition"))

(defconcept SO:1000014)
(assert (subset-of SO:1000014 SO:1000009))
(assert (documentation SO:1000014 "A substitution of a purine, A or G, for another purine."))
(assert (= (name SO:1000014) "purine_transition"))

(defconcept SO:1000015)
(assert (subset-of SO:1000015 SO:1000014))
(assert (documentation SO:1000015 "A transition of an adenine to a guanine."))
(assert (= (name SO:1000015) "A_to_G_transition"))

(defconcept SO:1000016)
(assert (subset-of SO:1000016 SO:1000014))
(assert (documentation SO:1000016 "A transition of a guanine to an adenine."))
(assert (= (name SO:1000016) "G_to_A_transition"))

(defconcept SO:1000017)
(assert (subset-of SO:1000017 SO:0001483))
(assert (documentation SO:1000017 "Change of a pyrimidine nucleotide, C or T, into a purine nucleotide, A or G, or vice versa."))
(assert (= (name SO:1000017) "transversion"))

(defconcept SO:1000018)
(assert (subset-of SO:1000018 SO:1000017))
(assert (documentation SO:1000018 "Change of a pyrimidine nucleotide, C or T, into a purine nucleotide, A or G."))
(assert (= (name SO:1000018) "pyrimidine_to_purine_transversion"))

(defconcept SO:1000019)
(assert (subset-of SO:1000019 SO:1000018))
(assert (documentation SO:1000019 "A transversion from cytidine to adenine."))
(assert (= (name SO:1000019) "C_to_A_transversion"))

(defconcept SO:1000020)
(assert (subset-of SO:1000020 SO:1000018))
(assert (= (name SO:1000020) "C_to_G_transversion"))

(defconcept SO:1000021)
(assert (subset-of SO:1000021 SO:1000018))
(assert (documentation SO:1000021 "A transversion from T to A."))
(assert (= (name SO:1000021) "T_to_A_transversion"))

(defconcept SO:1000022)
(assert (subset-of SO:1000022 SO:1000018))
(assert (documentation SO:1000022 "A transversion from T to G."))
(assert (= (name SO:1000022) "T_to_G_transversion"))

(defconcept SO:1000023)
(assert (subset-of SO:1000023 SO:1000017))
(assert (documentation SO:1000023 "Change of a purine nucleotide, A or G , into a pyrimidine nucleotide C or T."))
(assert (= (name SO:1000023) "purine_to_pyrimidine_transversion"))

(defconcept SO:1000024)
(assert (subset-of SO:1000024 SO:1000023))
(assert (documentation SO:1000024 "A transversion from adenine to cytidine."))
(assert (= (name SO:1000024) "A_to_C_transversion"))

(defconcept SO:1000025)
(assert (subset-of SO:1000025 SO:1000023))
(assert (documentation SO:1000025 "A transversion from adenine to thymine."))
(assert (= (name SO:1000025) "A_to_T_transversion"))

(defconcept SO:1000026)
(assert (subset-of SO:1000026 SO:1000023))
(assert (documentation SO:1000026 "A transversion from guanine to cytidine."))
(assert (= (name SO:1000026) "G_to_C_transversion"))

(defconcept SO:1000027)
(assert (subset-of SO:1000027 SO:1000023))
(assert (documentation SO:1000027 "A transversion from guanine to thymine."))
(assert (= (name SO:1000027) "G_to_T_transversion"))

(defconcept SO:1000028)
(assert (subset-of SO:1000028 SO:1000183))
(assert (documentation SO:1000028 "A chromosomal structure variation within a single chromosome."))
(assert (= (name SO:1000028) "intrachromosomal_mutation"))

(defconcept SO:1000029)
(assert (subset-of SO:1000029 SO:1000028))
(assert (documentation SO:1000029 "An incomplete chromosome."))
(assert (= (name SO:1000029) "chromosomal_deletion"))

(defconcept SO:1000030)
(assert (subset-of SO:1000030 SO:1000028))
(assert (documentation SO:1000030 "An interchromosomal mutation where a region of the chromosome is inverted with respect to wild type."))
(assert (= (name SO:1000030) "chromosomal_inversion"))

(defconcept SO:1000031)
(assert (subset-of SO:1000031 SO:1000183))
(assert (documentation SO:1000031 "A chromosomal structure variation whereby more than one chromosome is involved."))
(assert (= (name SO:1000031) "interchromosomal_mutation"))

(defconcept SO:1000032)
(assert (subset-of SO:1000032 SO:0001059))
(assert (documentation SO:1000032 "A sequence alteration which included an insertion and a deletion, affecting 2 or more bases."))
(assert (= (name SO:1000032) "indel"))

(defconcept SO:1000035)
(assert (subset-of SO:1000035 SO:0000667))
(assert (documentation SO:1000035 "One or more nucleotides are added between two adjacent nucleotides in the sequence; the inserted sequence derives from, or is identical in sequence to, nucleotides adjacent to insertion point."))
(assert (= (name SO:1000035) "duplication"))

(defconcept SO:1000036)
(assert (subset-of SO:1000036 SO:0001411))
(assert (subset-of SO:1000036 SO:0001059))
(assert (documentation SO:1000036 "A continuous nucleotide sequence is inverted in the same position."))
(assert (= (name SO:1000036) "inversion"))

(defconcept SO:1000037)
(assert (subset-of SO:1000037 SO:1000183))
(assert (documentation SO:1000037 "An extra chromosome."))
(assert (= (name SO:1000037) "chromosomal_duplication"))

(defconcept SO:1000038)
(assert (subset-of SO:1000038 SO:1000037))
(assert (subset-of SO:1000038 SO:1000028))
(assert (documentation SO:1000038 "A duplication that occurred within a chromosome."))
(assert (= (name SO:1000038) "intrachromosomal_duplication"))

(defconcept SO:1000039)
(assert (subset-of SO:1000039 SO:1000173))
(assert (documentation SO:1000039 "A tandem duplication where the individual regions are in the same orientation."))
(assert (= (name SO:1000039) "direct_tandem_duplication"))

(defconcept SO:1000040)
(assert (subset-of SO:1000040 SO:1000173))
(assert (documentation SO:1000040 "A tandem duplication where the individual regions are not in the same orientation."))
(assert (= (name SO:1000040) "inverted_tandem_duplication"))

(defconcept SO:1000041)
(assert (subset-of SO:1000041 SO:1000038))
(assert (subset-of SO:1000041 SO:0000453))
(assert (documentation SO:1000041 "A chromosome structure variation whereby a transposition occurred within a chromosome."))
(assert (= (name SO:1000041) "intrachromosomal_transposition"))

(defconcept SO:1000042)
(assert (subset-of SO:1000042 SO:1000183))
(assert (documentation SO:1000042 "A chromosome structure variant where a monocentric element is caused by the fusion of two chromosome arms."))
(assert (= (name SO:1000042) "compound_chromosome"))

(defconcept SO:1000043)
(assert (subset-of SO:1000043 SO:1000044))
(assert (documentation SO:1000043 "A non reciprocal translocation whereby the participating chromosomes break at their centromeres and the long arms fuse to form a single chromosome with a single centromere."))
(assert (= (name SO:1000043) "Robertsonian_fusion"))

(defconcept SO:1000044)
(assert (subset-of SO:1000044 SO:1000031))
(assert (documentation SO:1000044 "An interchromosomal mutation. Rearrangements that alter the pairing of telomeres are classified as translocations."))
(assert (= (name SO:1000044) "chromosomal_translocation"))

(defconcept SO:1000045)
(assert (subset-of SO:1000045 SO:1000028))
(assert (documentation SO:1000045 "A ring chromosome is a chromosome whose arms have fused together to form a ring, often with the loss of the ends of the chromosome."))
(assert (= (name SO:1000045) "ring_chromosome"))

(defconcept SO:1000046)
(assert (subset-of SO:1000046 SO:1000030))
(assert (documentation SO:1000046 "A chromosomal inversion that includes the centromere."))
(assert (= (name SO:1000046) "pericentric_inversion"))

(defconcept SO:1000047)
(assert (subset-of SO:1000047 SO:1000030))
(assert (documentation SO:1000047 "A chromosomal inversion that does not include the centromere."))
(assert (= (name SO:1000047) "paracentric_inversion"))

(defconcept SO:1000048)
(assert (subset-of SO:1000048 SO:1000044))
(assert (documentation SO:1000048 "A chromosomal translocation with two breaks; two chromosome segments have simply been exchanged."))
(assert (= (name SO:1000048) "reciprocal_chromosomal_translocation"))

(defconcept SO:1000049)
(assert (subset-of SO:1000049 SO:1000132))
(assert (documentation SO:1000049 "Any change in mature, spliced and processed, RNA that results from a change in the corresponding DNA sequence."))
(assert (= (name SO:1000049) "sequence_variation_affecting_transcript"))

(defconcept SO:1000050)
(assert (subset-of SO:1000050 SO:1000049))
(assert (documentation SO:1000050 "No effect on the state of the RNA."))
(assert (= (name SO:1000050) "sequence_variant_causing_no_change_in_transcript"))

(defconcept SO:1000052)
(assert (subset-of SO:1000052 SO:1000049))
(assert (= (name SO:1000052) "sequence_variation_affecting_complex_change_in_transcript"))

(defconcept SO:1000054)
(assert (subset-of SO:1000054 SO:1000079))
(assert (documentation SO:1000054 "Any of the amino acid coding triplets of a gene are affected by the DNA mutation."))
(assert (= (name SO:1000054) "sequence_variation_affecting_coding_sequence"))

(defconcept SO:1000055)
(assert (subset-of SO:1000055 SO:1000056))
(assert (documentation SO:1000055 "The DNA mutation changes, usually destroys, the first coding triplet of a gene. Usually prevents translation although another initiator codon may be used."))
(assert (= (name SO:1000055) "sequence_variant_causing_initiator_codon_change_in_transcript"))

(defconcept SO:1000056)
(assert (subset-of SO:1000056 SO:1000054))
(assert (documentation SO:1000056 "The DNA mutation affects the amino acid coding sequence of a gene; this region includes both the initiator and terminator codons."))
(assert (= (name SO:1000056) "sequence_variant_causing_amino_acid_coding_codon_change_in_transcript"))

(defconcept SO:1000057)
(assert (subset-of SO:1000057 SO:1000056))
(assert (documentation SO:1000057 "The changed codon has the same translation product as the original codon."))
(assert (= (name SO:1000057) "sequence_variant_causing_synonymous_codon_change_in_transcript"))

(defconcept SO:1000058)
(assert (subset-of SO:1000058 SO:1000056))
(assert (documentation SO:1000058 "A DNA point mutation that causes a substitution of an amino acid by an other."))
(assert (= (name SO:1000058) "sequence_variant_causing_non_synonymous_codon_change_in_transcript"))

(defconcept SO:1000059)
(assert (subset-of SO:1000059 SO:1000058))
(assert (documentation SO:1000059 "The nucleotide change in the codon leads to a new codon coding for a new amino acid."))
(assert (= (name SO:1000059) "sequence_variant_causing_missense_codon_change_in_transcript"))

(defconcept SO:1000060)
(assert (subset-of SO:1000060 SO:1000059))
(assert (documentation SO:1000060 "The amino acid change following from the codon change does not change the gross properties (size, charge, hydrophobicity) of the amino acid at that position."))
(assert (= (name SO:1000060) "sequence_variant_causing_conservative_missense_codon_change_in_transcript"))

(defconcept SO:1000061)
(assert (subset-of SO:1000061 SO:1000059))
(assert (documentation SO:1000061 "The amino acid change following from the codon change changes the gross properties (size, charge, hydrophobicity) of the amino acid in that position."))
(assert (= (name SO:1000061) "sequence_variant_causing_nonconservative_missense_codon_change_in_transcript"))

(defconcept SO:1000062)
(assert (subset-of SO:1000062 SO:1000056))
(assert (documentation SO:1000062 "The nucleotide change in the codon triplet creates a terminator codon."))
(assert (= (name SO:1000062) "sequence_variant_causing_nonsense_codon_change_in_transcript"))

(defconcept SO:1000063)
(assert (subset-of SO:1000063 SO:1000054))
(assert (documentation SO:1000063 "The nucleotide change in the codon triplet changes the stop codon, causing an elongated transcript sequence."))
(assert (= (name SO:1000063) "sequence_variant_causing_terminator_codon_change_in_transcript"))

(defconcept SO:1000064)
(assert (subset-of SO:1000064 SO:1000054))
(assert (documentation SO:1000064 "An umbrella term for terms describing an effect of a sequence variation on the frame of translation."))
(assert (= (name SO:1000064) "sequence_variation_affecting_reading_frame"))

(defconcept SO:1000065)
(assert (subset-of SO:1000065 SO:1000064))
(assert (documentation SO:1000065 "A mutation causing a disruption of the translational reading frame, because the number of nucleotides inserted or deleted is not a multiple of three."))
(assert (= (name SO:1000065) "frameshift_sequence_variation"))

(defconcept SO:1000066)
(assert (subset-of SO:1000066 SO:1000065))
(assert (documentation SO:1000066 "A mutation causing a disruption of the translational reading frame, due to the insertion of a nucleotide."))
(assert (= (name SO:1000066) "sequence_variant_causing_plus_1_frameshift_mutation"))

(defconcept SO:1000067)
(assert (subset-of SO:1000067 SO:1000065))
(assert (documentation SO:1000067 "A mutation causing a disruption of the translational reading frame, due to the deletion of a nucleotide."))
(assert (= (name SO:1000067) "sequence_variant_causing_minus_1_frameshift"))

(defconcept SO:1000068)
(assert (subset-of SO:1000068 SO:1000065))
(assert (documentation SO:1000068 "A mutation causing a disruption of the translational reading frame, due to the insertion of two nucleotides."))
(assert (= (name SO:1000068) "sequence_variant_causing_plus_2_frameshift"))

(defconcept SO:1000069)
(assert (subset-of SO:1000069 SO:1000065))
(assert (documentation SO:1000069 "A mutation causing a disruption of the translational reading frame, due to the deletion of two nucleotides."))
(assert (= (name SO:1000069) "sequence_variant_causing_minus_2_frameshift"))

(defconcept SO:1000070)
(assert (subset-of SO:1000070 SO:1000079))
(assert (documentation SO:1000070 "Sequence variant affects the way in which the primary transcriptional product is processed to form the mature transcript."))
(assert (= (name SO:1000070) "sequence_variant_affecting_transcript_processing"))

(defconcept SO:1000071)
(assert (subset-of SO:1000071 SO:1000132))
(assert (documentation SO:1000071 "A sequence_variant_effect where the way in which the primary transcriptional product is processed to form the mature transcript, specifically by the removal (splicing) of intron sequences is changed."))
(assert (= (name SO:1000071) "sequence_variant_affecting_splicing"))

(defconcept SO:1000072)
(assert (subset-of SO:1000072 SO:1000071))
(assert (documentation SO:1000072 "A sequence_variant_effect that changes the splice donor sequence."))
(assert (= (name SO:1000072) "sequence_variant_affecting_splice_donor"))

(defconcept SO:1000073)
(assert (subset-of SO:1000073 SO:1000071))
(assert (documentation SO:1000073 "A sequence_variant_effect that changes the splice acceptor sequence."))
(assert (= (name SO:1000073) "sequence_variant_affecting_splice_acceptor"))

(defconcept SO:1000074)
(assert (subset-of SO:1000074 SO:1000071))
(assert (documentation SO:1000074 "A sequence variant causing a new (functional) splice site."))
(assert (= (name SO:1000074) "sequence_variant_causing_cryptic_splice_activation"))

(defconcept SO:1000075)
(assert (subset-of SO:1000075 SO:1000070))
(assert (documentation SO:1000075 "Sequence variant affects the editing of the transcript."))
(assert (= (name SO:1000075) "sequence_variant_affecting_editing"))

(defconcept SO:1000076)
(assert (subset-of SO:1000076 SO:1000049))
(assert (documentation SO:1000076 "Mutation affects the process of transcription, its initiation, progression or termination."))
(assert (= (name SO:1000076) "sequence_variant_affecting_transcription"))

(defconcept SO:1000078)
(assert (subset-of SO:1000078 SO:1000081))
(assert (documentation SO:1000078 "A sequence variation that decreases the rate a which transcription of the sequence occurs."))
(assert (= (name SO:1000078) "sequence_variant_decreasing_rate_of_transcription"))

(defconcept SO:1000079)
(assert (subset-of SO:1000079 SO:1000049))
(assert (= (name SO:1000079) "sequence_variation_affecting_transcript_sequence"))

(defconcept SO:1000080)
(assert (subset-of SO:1000080 SO:1000081))
(assert (= (name SO:1000080) "sequence_variant_increasing_rate_of_transcription"))

(defconcept SO:1000081)
(assert (subset-of SO:1000081 SO:1000076))
(assert (documentation SO:1000081 "A mutation that alters the rate a which transcription of the sequence occurs."))
(assert (= (name SO:1000081) "sequence_variant_affecting_rate_of_transcription"))

(defconcept SO:1000082)
(assert (subset-of SO:1000082 SO:1000079))
(assert (documentation SO:1000082 "Sequence variant affects the stability of the transcript."))
(assert (= (name SO:1000082) "sequence variant_affecting_transcript_stability"))

(defconcept SO:1000083)
(assert (subset-of SO:1000083 SO:1000082))
(assert (documentation SO:1000083 "Sequence variant increases the stability (half-life) of the transcript."))
(assert (= (name SO:1000083) "sequence_variant_increasing_transcript_stability"))

(defconcept SO:1000084)
(assert (subset-of SO:1000084 SO:1000082))
(assert (documentation SO:1000084 "Sequence variant decreases the stability (half-life) of the transcript."))
(assert (= (name SO:1000084) "sequence_variant_decreasing_transcript_stability"))

(defconcept SO:1000085)
(assert (subset-of SO:1000085 SO:1000049))
(assert (documentation SO:1000085 "A sequence variation that causes a change in the level of mature, spliced and processed RNA, resulting from a change in the corresponding DNA sequence."))
(assert (= (name SO:1000085) "sequence_variation_affecting_level_of_transcript"))

(defconcept SO:1000086)
(assert (subset-of SO:1000086 SO:1000085))
(assert (documentation SO:1000086 "A sequence variation that causes a decrease in the level of mature, spliced and processed RNA, resulting from a change in the corresponding DNA sequence."))
(assert (= (name SO:1000086) "sequence_variation_decreasing_level_of_transcript"))

(defconcept SO:1000087)
(assert (subset-of SO:1000087 SO:1000085))
(assert (documentation SO:1000087 "A sequence_variation that causes an increase in the level of mature, spliced and processed RNA, resulting from a change in the corresponding DNA sequence."))
(assert (= (name SO:1000087) "sequence_variation_increasing_level_of_transcript"))

(defconcept SO:1000088)
(assert (subset-of SO:1000088 SO:1000132))
(assert (documentation SO:1000088 "A sequence variant causing a change in primary translation product of a transcript."))
(assert (= (name SO:1000088) "sequence_variant_affecting_translational_product"))

(defconcept SO:1000089)
(assert (subset-of SO:1000089 SO:1000088))
(assert (documentation SO:1000089 "The sequence variant at RNA level does not lead to any change in polypeptide."))
(assert (= (name SO:1000089) "sequence_variant_causing_no_change_of_translational_product"))

(defconcept SO:1000092)
(assert (subset-of SO:1000092 SO:1000088))
(assert (documentation SO:1000092 "Any sequence variant effect that is known at nucleotide level but cannot be explained by using other key terms."))
(assert (= (name SO:1000092) "sequence_variant_causing_complex_change_of_translational_product"))

(defconcept SO:1000093)
(assert (subset-of SO:1000093 SO:1000105))
(assert (documentation SO:1000093 "The replacement of a single amino acid by another."))
(assert (= (name SO:1000093) "sequence_variant_causing_amino_acid_substitution"))

(defconcept SO:1000094)
(assert (subset-of SO:1000094 SO:1000093))
(assert (= (name SO:1000094) "sequence_variant_causing_conservative_amino_acid_substitution"))

(defconcept SO:1000095)
(assert (subset-of SO:1000095 SO:1000093))
(assert (= (name SO:1000095) "sequence_variant_causing_nonconservative_amino_acid_substitution"))

(defconcept SO:1000096)
(assert (subset-of SO:1000096 SO:1000105))
(assert (documentation SO:1000096 "The insertion of one or more amino acids from the polypeptide, without affecting the surrounding sequence."))
(assert (= (name SO:1000096) "sequence_variant_causing_amino_acid_insertion"))

(defconcept SO:1000097)
(assert (subset-of SO:1000097 SO:1000105))
(assert (documentation SO:1000097 "The deletion of one or more amino acids from the polypeptide, without affecting the surrounding sequence."))
(assert (= (name SO:1000097) "sequence_variant_causing_amino_acid_deletion"))

(defconcept SO:1000098)
(assert (subset-of SO:1000098 SO:1000105))
(assert (documentation SO:1000098 "The translational product is truncated at its C-terminus, usually a result of a nonsense codon change in transcript (SO:1000062)."))
(assert (= (name SO:1000098) "sequence_variant_causing_polypeptide_truncation"))

(defconcept SO:1000099)
(assert (subset-of SO:1000099 SO:1000105))
(assert (documentation SO:1000099 "The extension of the translational product at either (or both) the N-terminus and/or the C-terminus."))
(assert (= (name SO:1000099) "sequence_variant_causing_polypeptide_elongation"))

(defconcept SO:1000100)
(assert (subset-of SO:1000100 SO:1000099))
(assert (documentation SO:1000100 "."))
(assert (= (name SO:1000100) "mutation_causing_polypeptide_N_terminal_elongation"))

(defconcept SO:1000101)
(assert (subset-of SO:1000101 SO:1000099))
(assert (documentation SO:1000101 "."))
(assert (= (name SO:1000101) "mutation_causing_polypeptide_C_terminal_elongation"))

(defconcept SO:1000102)
(assert (subset-of SO:1000102 SO:1000088))
(assert (= (name SO:1000102) "sequence_variant_affecting_level_of_translational_product"))

(defconcept SO:1000103)
(assert (subset-of SO:1000103 SO:1000102))
(assert (= (name SO:1000103) "sequence_variant_decreasing_level_of_translation_product"))

(defconcept SO:1000104)
(assert (subset-of SO:1000104 SO:1000102))
(assert (= (name SO:1000104) "sequence_variant_increasing_level_of_translation_product"))

(defconcept SO:1000105)
(assert (subset-of SO:1000105 SO:1000088))
(assert (= (name SO:1000105) "sequence_variant_affecting_polypeptide_amino_acid_sequence"))

(defconcept SO:1000106)
(assert (subset-of SO:1000106 SO:1000100))
(assert (= (name SO:1000106) "mutation_causing_inframe_polypeptide_N_terminal_elongation"))

(defconcept SO:1000107)
(assert (subset-of SO:1000107 SO:1000100))
(assert (= (name SO:1000107) "mutation_causing_out_of_frame_polypeptide_N_terminal_elongation"))

(defconcept SO:1000108)
(assert (subset-of SO:1000108 SO:1000101))
(assert (= (name SO:1000108) "mutaton_causing_inframe_polypeptide_C_terminal_elongation"))

(defconcept SO:1000109)
(assert (subset-of SO:1000109 SO:1000101))
(assert (= (name SO:1000109) "mutation_causing_out_of_frame_polypeptide_C_terminal_elongation"))

(defconcept SO:1000110)
(assert (subset-of SO:1000110 SO:1000065))
(assert (documentation SO:1000110 "A mutation that reverts the sequence of a previous frameshift mutation back to the initial frame."))
(assert (= (name SO:1000110) "frame_restoring_sequence_variant"))

(defconcept SO:1000111)
(assert (subset-of SO:1000111 SO:1000088))
(assert (documentation SO:1000111 "A mutation that changes the amino acid sequence of the peptide in such a way that it changes the 3D structure of the molecule."))
(assert (= (name SO:1000111) "sequence_variant_affecting_3D_structure_of_polypeptide"))

(defconcept SO:1000112)
(assert (subset-of SO:1000112 SO:1000111))
(assert (= (name SO:1000112) "sequence_variant_causing_no_3D_structural_change"))

(defconcept SO:1000115)
(assert (subset-of SO:1000115 SO:1000111))
(assert (= (name SO:1000115) "sequence_variant_causing_complex_3D_structural_change"))

(defconcept SO:1000116)
(assert (subset-of SO:1000116 SO:1000111))
(assert (= (name SO:1000116) "sequence_variant_causing_conformational_change"))

(defconcept SO:1000117)
(assert (subset-of SO:1000117 SO:1000088))
(assert (= (name SO:1000117) "sequence_variant_affecting_polypeptide_function"))

(defconcept SO:1000118)
(assert (subset-of SO:1000118 SO:1000117))
(assert (= (name SO:1000118) "sequence_variant_causing_loss_of_function_of_polypeptide"))

(defconcept SO:1000119)
(assert (subset-of SO:1000119 SO:1000118))
(assert (= (name SO:1000119) "sequence_variant_causing_inactive_ligand_binding_site"))

(defconcept SO:1000120)
(assert (subset-of SO:1000120 SO:1000119))
(assert (= (name SO:1000120) "sequence_variant_causing_inactive_catalytic_site"))

(defconcept SO:1000121)
(assert (subset-of SO:1000121 SO:1000117))
(assert (= (name SO:1000121) "sequence_variant_causing_polypeptide_localization_change"))

(defconcept SO:1000122)
(assert (subset-of SO:1000122 SO:1000118))
(assert (subset-of SO:1000122 SO:1000117))
(assert (= (name SO:1000122) "sequence_variant_causing_polypeptide_post_translational_processing_change"))

(defconcept SO:1000123)
(assert (= (name SO:1000123) "polypeptide_post_translational_processing_affected"))

(defconcept SO:1000124)
(assert (subset-of SO:1000124 SO:1000118))
(assert (= (name SO:1000124) "sequence_variant_causing_partial_loss_of_function_of_polypeptide"))

(defconcept SO:1000125)
(assert (subset-of SO:1000125 SO:1000117))
(assert (= (name SO:1000125) "sequence_variant_causing_gain_of_function_of_polypeptide"))

(defconcept SO:1000126)
(assert (subset-of SO:1000126 SO:1000079))
(assert (documentation SO:1000126 "A sequence variant that affects the secondary structure (folding) of the RNA transcript molecule."))
(assert (= (name SO:1000126) "sequence_variant_affecting_transcript_secondary_structure"))

(defconcept SO:1000127)
(assert (subset-of SO:1000127 SO:1000126))
(assert (= (name SO:1000127) "sequence_variant_causing_compensatory_transcript_secondary_structure_mutation"))

(defconcept SO:1000132)
(assert (documentation SO:1000132 "The effect of a change in nucleotide sequence."))
(assert (= (name SO:1000132) "sequence_variant_effect"))

(defconcept SO:1000134)
(assert (subset-of SO:1000134 SO:1000105))
(assert (= (name SO:1000134) "sequence_variant_causing_polypeptide_fusion"))

(defconcept SO:1000136)
(assert (subset-of SO:1000136 SO:1000183))
(assert (documentation SO:1000136 "An autosynaptic chromosome is the aneuploid product of recombination between a pericentric inversion and a cytologically wild-type chromosome."))
(assert (= (name SO:1000136) "autosynaptic_chromosome"))

(defconcept SO:1000138)
(assert (subset-of SO:1000138 SO:1000042))
(assert (documentation SO:1000138 "A compound chromosome whereby two copies of the same chromosomal arm attached to a common centromere. The chromosome is diploid for the arm involved."))
(assert (= (name SO:1000138) "homo_compound_chromosome"))

(defconcept SO:1000140)
(assert (subset-of SO:1000140 SO:1000042))
(assert (documentation SO:1000140 "A compound chromosome whereby two arms from different chromosomes are connected through the centromere of one of them."))
(assert (= (name SO:1000140) "hetero_compound_chromosome"))

(defconcept SO:1000141)
(assert (subset-of SO:1000141 SO:1000028))
(assert (documentation SO:1000141 "A chromosome that occurred by the division of a larger chromosome."))
(assert (= (name SO:1000141) "chromosome_fission"))

(defconcept SO:1000142)
(assert (subset-of SO:1000142 SO:1000136))
(assert (documentation SO:1000142 "An autosynaptic chromosome carrying the two right (D = dextro) telomeres."))
(assert (= (name SO:1000142) "dexstrosynaptic_chromosome"))

(defconcept SO:1000143)
(assert (subset-of SO:1000143 SO:1000136))
(assert (documentation SO:1000143 "LS is an autosynaptic chromosome carrying the two left (L = levo) telomeres."))
(assert (= (name SO:1000143) "laevosynaptic_chromosome"))

(defconcept SO:1000144)
(assert (subset-of SO:1000144 SO:1000037))
(assert (documentation SO:1000144 "A chromosome structure variation whereby the duplicated sequences are carried as a free centric element."))
(assert (= (name SO:1000144) "free_duplication"))

(defconcept SO:1000145)
(assert (subset-of SO:1000145 SO:1000144))
(assert (subset-of SO:1000145 SO:1000045))
(assert (documentation SO:1000145 "A ring chromosome which is a copy of another chromosome."))
(assert (= (name SO:1000145) "free_ring_duplication"))

(defconcept SO:1000146)
(assert (subset-of SO:1000146 SO:1000183))
(assert (documentation SO:1000146 "A chromosome structure variant with 4 or more breakpoints."))
(assert (= (name SO:1000146) "complex_chromosomal_mutation"))

(defconcept SO:1000147)
(assert (subset-of SO:1000147 SO:1000044))
(assert (subset-of SO:1000147 SO:1000029))
(assert (documentation SO:1000147 "A chromosomal deletion whereby a translocation occurs in which one of the four broken ends loses a segment before re-joining."))
(assert (= (name SO:1000147) "deficient_translocation"))

(defconcept SO:1000148)
(assert (subset-of SO:1000148 SO:1000044))
(assert (subset-of SO:1000148 SO:1000030))
(assert (documentation SO:1000148 "A chromosomal translocation whereby the first two breaks are in the same chromosome, and the region between them is rejoined in inverted order to the other side of the first break, such that both sides of break one are present on the same chromosome. The remaining free ends are joined as a translocation with those resulting from the third break."))
(assert (= (name SO:1000148) "inversion_cum_translocation"))

(defconcept SO:1000149)
(assert (subset-of SO:1000149 SO:1000038))
(assert (subset-of SO:1000149 SO:1000031))
(assert (documentation SO:1000149 "An interchromosomal mutation whereby the (large) region between the first two breaks listed is lost, and the two flanking segments (one of them centric) are joined as a translocation to the free ends resulting from the third break."))
(assert (= (name SO:1000149) "bipartite_duplication"))

(defconcept SO:1000150)
(assert (subset-of SO:1000150 SO:1000044))
(assert (documentation SO:1000150 "A chromosomal translocation whereby three breaks occurred in three different chromosomes. The centric segment resulting from the first break listed is joined to the acentric segment resulting from the second, rather than the third."))
(assert (= (name SO:1000150) "cyclic_translocation"))

(defconcept SO:1000151)
(assert (subset-of SO:1000151 SO:1000030))
(assert (documentation SO:1000151 "A chromosomal inversion caused by three breaks in the same chromosome; both central segments are inverted in place (i.e., they are not transposed)."))
(assert (= (name SO:1000151) "bipartite_inversion"))

(defconcept SO:1000152)
(assert (subset-of SO:1000152 SO:1000154))
(assert (documentation SO:1000152 "An insertional duplication where a copy of the segment between the first two breaks listed is inserted at the third break; the insertion is in cytologically the same orientation as its flanking segments."))
(assert (= (name SO:1000152) "uninverted_insertional_duplication"))

(defconcept SO:1000153)
(assert (subset-of SO:1000153 SO:1000154))
(assert (documentation SO:1000153 "An insertional duplication where a copy of the segment between the first two breaks listed is inserted at the third break; the insertion is in cytologically inverted orientation with respect to its flanking segments."))
(assert (= (name SO:1000153) "inverted_insertional_duplication"))

(defconcept SO:1000154)
(assert (subset-of SO:1000154 SO:1000037))
(assert (documentation SO:1000154 "A chromosome duplication involving the insertion of a duplicated region (as opposed to a free duplication)."))
(assert (= (name SO:1000154) "insertional_duplication"))

(defconcept SO:1000155)
(assert (subset-of SO:1000155 SO:1000031))
(assert (subset-of SO:1000155 SO:0000453))
(assert (documentation SO:1000155 "A chromosome structure variation whereby a transposition occurred between chromosomes."))
(assert (= (name SO:1000155) "interchromosomal_transposition"))

(defconcept SO:1000156)
(assert (subset-of SO:1000156 SO:1000155))
(assert (documentation SO:1000156 "An interchromosomal transposition whereby a copy of the segment between the first two breaks listed is inserted at the third break; the insertion is in cytologically inverted orientation with respect to its flanking segment."))
(assert (= (name SO:1000156) "inverted_interchromosomal_transposition"))

(defconcept SO:1000157)
(assert (subset-of SO:1000157 SO:1000155))
(assert (documentation SO:1000157 "An interchromosomal transition where the segment between the first two breaks listed is removed and inserted at the third break; the insertion is in cytologically the same orientation as its flanking segments."))
(assert (= (name SO:1000157) "uninverted_interchromosomal_transposition"))

(defconcept SO:1000158)
(assert (subset-of SO:1000158 SO:1000148))
(assert (subset-of SO:1000158 SO:1000041))
(assert (subset-of SO:1000158 SO:1000030))
(assert (documentation SO:1000158 "An intrachromosomal transposition whereby the segment between the first two breaks listed is removed and inserted at the third break; the insertion is in cytologically inverted orientation with respect to its flanking segments."))
(assert (= (name SO:1000158) "inverted_intrachromosomal_transposition"))

(defconcept SO:1000159)
(assert (subset-of SO:1000159 SO:1000041))
(assert (documentation SO:1000159 "An intrachromosomal transposition whereby the segment between the first two breaks listed is removed and inserted at the third break; the insertion is in cytologically the same orientation as its flanking segments."))
(assert (= (name SO:1000159) "uninverted_intrachromosomal_transposition"))

(defconcept SO:1000160)
(assert (subset-of SO:1000160 SO:1000154))
(assert (documentation SO:1000160 "An insertional duplication where a copy of the segment between the first two breaks listed is inserted at the third break; the orientation of the insertion with respect to its flanking segments is not recorded."))
(assert (= (name SO:1000160) "unoriented_insertional_duplication"))

(defconcept SO:1000161)
(assert (subset-of SO:1000161 SO:1000155))
(assert (documentation SO:1000161 "An interchromosomal transposition whereby a copy of the segment between the first two breaks listed is inserted at the third break; the orientation of the insertion with respect to its flanking segments is not recorded."))
(assert (= (name SO:1000161) "unoriented_interchromosomal_transposition"))

(defconcept SO:1000162)
(assert (subset-of SO:1000162 SO:1000041))
(assert (documentation SO:1000162 "An intrachromosomal transposition whereby the segment between the first two breaks listed is removed and inserted at the third break; the orientation of the insertion with respect to its flanking segments is not recorded."))
(assert (= (name SO:1000162) "unoriented_intrachromosomal_transposition"))

(defconcept SO:1000170)
(assert (subset-of SO:1000170 SO:1000183))
(assert (= (name SO:1000170) "uncharacterised_chromosomal_mutation"))

(defconcept SO:1000171)
(assert (subset-of SO:1000171 SO:1000030))
(assert (subset-of SO:1000171 SO:1000029))
(assert (documentation SO:1000171 "A chromosomal deletion whereby three breaks occur in the same chromosome; one central region is lost, and the other is inverted."))
(assert (= (name SO:1000171) "deficient_inversion"))

(defconcept SO:1000173)
(assert (subset-of SO:1000173 SO:1000035))
(assert (documentation SO:1000173 "A duplication consisting of 2 identical regions, which are adjacent."))
(assert (= (name SO:1000173) "tandem_duplication"))

(defconcept SO:1000175)
(assert (subset-of SO:1000175 SO:1000170))
(assert (= (name SO:1000175) "partially_characterised_chromosomal_mutation"))

(defconcept SO:1000180)
(assert (subset-of SO:1000180 SO:1000132))
(assert (documentation SO:1000180 "A sequence_variant_effect that changes the gene structure."))
(assert (= (name SO:1000180) "sequence_variant_affecting_gene_structure"))

(defconcept SO:1000181)
(assert (subset-of SO:1000181 SO:1000180))
(assert (documentation SO:1000181 "A sequence_variant_effect that changes the gene structure by causing a fusion to another gene."))
(assert (= (name SO:1000181) "sequence_variant_causing_gene_fusion"))

(defconcept SO:1000182)
(assert (subset-of SO:1000182 SO:0000240))
(assert (documentation SO:1000182 "A kind of chromosome variation where the chromosome complement is not an exact multiple of the haploid number."))
(assert (= (name SO:1000182) "chromosome_number_variation"))

(defconcept SO:1000183)
(assert (subset-of SO:1000183 SO:0000240))
(assert (= (name SO:1000183) "chromosome_structure_variation"))

(defconcept SO:1000184)
(assert (subset-of SO:1000184 SO:1000071))
(assert (documentation SO:1000184 "A sequence variant affecting splicing and causes an exon loss."))
(assert (= (name SO:1000184) "sequence_variant_causes_exon_loss"))

(defconcept SO:1000185)
(assert (subset-of SO:1000185 SO:1000071))
(assert (documentation SO:1000185 "A sequence variant effect, causing an intron to be gained by the processed transcript; usually a result of a donor acceptor mutation (SO:1000072)."))
(assert (= (name SO:1000185) "sequence_variant_causes_intron_gain"))

(defconcept SO:1000186)
(assert (subset-of SO:1000186 SO:1000074))
(assert (= (name SO:1000186) "sequence_variant_causing_cryptic_splice_donor_activation"))

(defconcept SO:1001186)
(assert (subset-of SO:1001186 SO:1000074))
(assert (= (name SO:1001186) "sequence_variant_causing_cryptic_splice_acceptor_activation"))

(defconcept SO:1001187)
(assert (subset-of SO:1001187 SO:0000673))
(assert (documentation SO:1001187 "A transcript that is alternatively spliced."))
(assert (= (name SO:1001187) "alternatively_spliced_transcript"))

(defconcept SO:1001188)
(assert (subset-of SO:1001188 SO:0000463))
(assert (documentation SO:1001188 "A gene that is alternately spliced, but encodes only one polypeptide."))
(assert (= (name SO:1001188) "encodes_1_polypeptide"))

(defconcept SO:1001189)
(assert (subset-of SO:1001189 SO:0000463))
(assert (documentation SO:1001189 "A gene that is alternately spliced, and encodes more than one polypeptide."))
(assert (= (name SO:1001189) "encodes_greater_than_1_polypeptide"))

(defconcept SO:1001190)
(assert (subset-of SO:1001190 SO:1001195))
(assert (documentation SO:1001190 "A gene that is alternately spliced, and encodes more than one polypeptide, that have overlapping peptide sequences, but use different stop codons."))
(assert (= (name SO:1001190) "encodes_different_polypeptides_different_stop"))

(defconcept SO:1001191)
(assert (subset-of SO:1001191 SO:1001195))
(assert (documentation SO:1001191 "A gene that is alternately spliced, and encodes more than one polypeptide, that have overlapping peptide sequences, but use different start codons."))
(assert (= (name SO:1001191) "encodes_overlapping_peptides_different_start"))

(defconcept SO:1001192)
(assert (subset-of SO:1001192 SO:1001189))
(assert (documentation SO:1001192 "A gene that is alternately spliced, and encodes more than one polypeptide, that do not have overlapping peptide sequences."))
(assert (= (name SO:1001192) "encodes_disjoint_polypeptides"))

(defconcept SO:1001193)
(assert (subset-of SO:1001193 SO:1001195))
(assert (documentation SO:1001193 "A gene that is alternately spliced, and encodes more than one polypeptide, that have overlapping peptide sequences, but use different start and stop codons."))
(assert (= (name SO:1001193) "encodes_overlapping_polypeptides_different_start_and_stop"))

(defconcept SO:1001194)
(assert (= (name SO:1001194) "alternatively_spliced_gene_encoding_greater_than_1_polypeptide_coding_regions_overlapping"))

(defconcept SO:1001195)
(assert (subset-of SO:1001195 SO:1001189))
(assert (documentation SO:1001195 "A gene that is alternately spliced, and encodes more than one polypeptide, that have overlapping peptide sequences."))
(assert (= (name SO:1001195) "encodes_overlapping_peptides"))

(defconcept SO:1001196)
(assert (subset-of SO:1001196 SO:0001431))
(assert (subset-of SO:1001196 SO:0000654))
(assert (documentation SO:1001196 "A maxicircle gene so extensively edited that it cannot be matched to its edited mRNA sequence."))
(assert (= (name SO:1001196) "cryptogene"))

(defconcept SO:1001197)
(assert (subset-of SO:1001197 SO:0000631))
(assert (subset-of SO:1001197 SO:0000079))
(assert (documentation SO:1001197 "A primary transcript that has the quality dicistronic."))
(assert (= (name SO:1001197) "dicistronic_primary_transcript"))

(defconcept SO:1001217)
(assert (subset-of SO:1001217 SO:0000081))
(assert (= (name SO:1001217) "member_of_regulon"))

(defconcept SO:1001244)
(assert (= (name SO:1001244) "alternatively_spliced_transcript_encoding_greater_than_1_polypeptide_different_start_codon_different_stop_codon_coding_regions_non_overlapping"))

(defconcept SO:1001246)
(assert (subset-of SO:1001246 SO:0000316))
(assert (documentation SO:1001246 "A CDS with the evidence status of being independently known."))
(assert (= (name SO:1001246) "CDS_independently_known"))

(defconcept SO:1001247)
(assert (subset-of SO:1001247 SO:1001254))
(assert (documentation SO:1001247 "A CDS whose predicted amino acid sequence is unsupported by any experimental evidence or by any match with any other known sequence."))
(assert (= (name SO:1001247) "orphan_CDS"))

(defconcept SO:1001249)
(assert (subset-of SO:1001249 SO:1001251))
(assert (documentation SO:1001249 "A CDS that is supported by domain similarity."))
(assert (= (name SO:1001249) "CDS_supported_by_domain_match_data"))

(defconcept SO:1001251)
(assert (subset-of SO:1001251 SO:1001254))
(assert (documentation SO:1001251 "A CDS that is supported by sequence similarity data."))
(assert (= (name SO:1001251) "CDS_supported_by_sequence_similarity_data"))

(defconcept SO:1001254)
(assert (subset-of SO:1001254 SO:0000316))
(assert (documentation SO:1001254 "A CDS that is predicted."))
(assert (= (name SO:1001254) "CDS_predicted"))

(defconcept SO:1001255)
(assert (= (name SO:1001255) "status_of_coding_sequence"))

(defconcept SO:1001259)
(assert (subset-of SO:1001259 SO:1001251))
(assert (documentation SO:1001259 "A CDS that is supported by similarity to EST or cDNA data."))
(assert (= (name SO:1001259) "CDS_supported_by_EST_or_cDNA_data"))

(defconcept SO:1001260)
(assert (subset-of SO:1001260 SO:1001268))
(assert (subset-of SO:1001260 SO:0000243))
(assert (documentation SO:1001260 "A Shine-Dalgarno sequence that stimulates recoding through interactions with the anti-Shine-Dalgarno in the RNA of small ribosomal subunits of translating ribosomes. The signal is only operative in Bacteria."))
(assert (= (name SO:1001260) "internal_Shine_Dalgarno_sequence"))

(defconcept SO:1001261)
(assert (subset-of SO:1001261 SO:0000234))
(assert (documentation SO:1001261 "The sequence of a mature mRNA transcript, modified before translation or during translation, usually by special cis-acting signals."))
(assert (= (name SO:1001261) "recoded_mRNA"))

(defconcept SO:1001262)
(assert (subset-of SO:1001262 SO:0000887))
(assert (documentation SO:1001262 "An attribute describing a translational frameshift of -1."))
(assert (= (name SO:1001262) "minus_1_translationally_frameshifted"))

(defconcept SO:1001263)
(assert (subset-of SO:1001263 SO:0000887))
(assert (documentation SO:1001263 "An attribute describing a translational frameshift of +1."))
(assert (= (name SO:1001263) "plus_1_translationally_frameshifted"))

(defconcept SO:1001264)
(assert (subset-of SO:1001264 SO:1001261))
(assert (documentation SO:1001264 "A recoded_mRNA where translation was suspended at a particular codon and resumed at a particular non-overlapping downstream codon."))
(assert (= (name SO:1001264) "mRNA_recoded_by_translational_bypass"))

(defconcept SO:1001265)
(assert (subset-of SO:1001265 SO:1001261))
(assert (documentation SO:1001265 "A recoded_mRNA that was modified by an alteration of codon meaning."))
(assert (= (name SO:1001265) "mRNA_recoded_by_codon_redefinition"))

(defconcept SO:1001266)
(assert (= (name SO:1001266) "stop_codon_redefinition_as_selenocysteine"))

(defconcept SO:1001267)
(assert (= (name SO:1001267) "stop_codon_readthrough"))

(defconcept SO:1001268)
(assert (subset-of SO:1001268 SO:0000836))
(assert (documentation SO:1001268 "A site in an mRNA sequence that stimulates the recoding of a region in the same mRNA."))
(assert (= (name SO:1001268) "recoding_stimulatory_region"))

(defconcept SO:1001269)
(assert (subset-of SO:1001269 SO:0000680))
(assert (documentation SO:1001269 "A non-canonical start codon with 4 base pairs."))
(assert (= (name SO:1001269) "four_bp_start_codon"))

(defconcept SO:1001270)
(assert (= (name SO:1001270) "stop_codon_redefinition_as_pyrrolysine"))

(defconcept SO:1001271)
(assert (subset-of SO:1001271 SO:0001216))
(assert (documentation SO:1001271 "An intron characteristic of Archaeal tRNA and rRNA genes, where intron transcript generates a bulge-helix-bulge motif that is recognised by a splicing endoribonuclease."))
(assert (= (name SO:1001271) "archaeal_intron"))

(defconcept SO:1001272)
(assert (subset-of SO:1001272 SO:0001216))
(assert (documentation SO:1001272 "An intron found in tRNA that is spliced via endonucleolytic cleavage and ligation rather than transesterification."))
(assert (= (name SO:1001272) "tRNA_intron"))

(defconcept SO:1001273)
(assert (subset-of SO:1001273 SO:0000680))
(assert (documentation SO:1001273 "A non-canonical start codon of sequence CTG."))
(assert (= (name SO:1001273) "CTG_start_codon"))

(defconcept SO:1001274)
(assert (subset-of SO:1001274 SO:1001268))
(assert (documentation SO:1001274 "The incorporation of selenocysteine into a protein sequence is directed by an in-frame UGA codon (usually a stop codon) within the coding region of the mRNA. Selenoprotein mRNAs contain a conserved secondary structure in the 3' UTR that is required for the distinction of UGA stop from UGA selenocysteine. The selenocysteine insertion sequence (SECIS) is around 60 nt in length and adopts a hairpin structure which is sufficiently well-defined and conserved to act as a computational screen for selenoprotein genes."))
(assert (= (name SO:1001274) "SECIS_element"))

(defconcept SO:1001275)
(assert (subset-of SO:1001275 SO:0001411))
(assert (documentation SO:1001275 "Sequence coding for a short, single-stranded, DNA sequence via a retrotransposed RNA intermediate; characteristic of some microbial genomes."))
(assert (= (name SO:1001275) "retron"))

(defconcept SO:1001277)
(assert (subset-of SO:1001277 SO:1001268))
(assert (documentation SO:1001277 "The recoding stimulatory signal located downstream of the recoding site."))
(assert (= (name SO:1001277) "three_prime_recoding_site"))

(defconcept SO:1001279)
(assert (subset-of SO:1001279 SO:1001277))
(assert (documentation SO:1001279 "A recoding stimulatory region, the stem-loop secondary structural element is downstream of the redefined region."))
(assert (= (name SO:1001279) "three_prime_stem_loop_structure"))

(defconcept SO:1001280)
(assert (subset-of SO:1001280 SO:1001268))
(assert (documentation SO:1001280 "The recoding stimulatory signal located upstream of the recoding site."))
(assert (= (name SO:1001280) "five_prime_recoding_site"))

(defconcept SO:1001281)
(assert (subset-of SO:1001281 SO:1001277))
(assert (documentation SO:1001281 "Four base pair sequence immediately downstream of the redefined region. The redefined region is a frameshift site. The quadruplet is 2 overlapping codons."))
(assert (= (name SO:1001281) "flanking_three_prime_quadruplet_recoding_signal"))

(defconcept SO:1001282)
(assert (subset-of SO:1001282 SO:1001288))
(assert (documentation SO:1001282 "A stop codon signal for a UAG stop codon redefinition."))
(assert (= (name SO:1001282) "UAG_stop_codon_signal"))

(defconcept SO:1001283)
(assert (subset-of SO:1001283 SO:1001288))
(assert (documentation SO:1001283 "A stop codon signal for a UAA stop codon redefinition."))
(assert (= (name SO:1001283) "UAA_stop_codon_signal"))

(defconcept SO:1001284)
(assert (subset-of SO:1001284 SO:0005855))
(assert (documentation SO:1001284 "A group of genes, whether linked as a cluster or not, that respond to a common regulatory signal."))
(assert (= (name SO:1001284) "regulon"))

(defconcept SO:1001285)
(assert (subset-of SO:1001285 SO:1001288))
(assert (documentation SO:1001285 "A stop codon signal for a UGA stop codon redefinition."))
(assert (= (name SO:1001285) "UGA_stop_codon_signal"))

(defconcept SO:1001286)
(assert (subset-of SO:1001286 SO:1001277))
(assert (documentation SO:1001286 "A recoding stimulatory signal, downstream sequence important for recoding that contains repetitive elements."))
(assert (= (name SO:1001286) "three_prime_repeat_recoding_signal"))

(defconcept SO:1001287)
(assert (subset-of SO:1001287 SO:1001277))
(assert (documentation SO:1001287 "A recoding signal that is found many hundreds of nucleotides 3' of a redefined stop codon."))
(assert (= (name SO:1001287) "distant_three_prime_recoding_signal"))

(defconcept SO:1001288)
(assert (subset-of SO:1001288 SO:1001268))
(assert (documentation SO:1001288 "A recoding stimulatory signal that is a stop codon and has effect on efficiency of recoding."))
(assert (= (name SO:1001288) "stop_codon_signal"))

(defconcept SO:2000061)
(assert (subset-of SO:2000061 SO:0000695))
(assert (documentation SO:2000061 "The sequence referred to by an entry in a databank such as Genbank or SwissProt."))
(assert (= (name SO:2000061) "databank_entry"))

(defconcept SO:3000000)
(assert (subset-of SO:3000000 SO:0000842))
(assert (documentation SO:3000000 "A gene component region which acts as a recombinational unit of a gene whose functional form is generated through somatic recombination."))
(assert (= (name SO:3000000) "gene_segment"))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000882))
            (SO:1001265 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000886))
            (SO:1001264 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000881))
            (SO:1001261 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1001251 ?term)
                (has_quality ?term SO:0000909))
            (SO:1001259 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000316 ?term)
                (has_quality ?term SO:0000732))
            (SO:1001254 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000316 ?term)
                (has_quality ?term SO:0000907))
            (SO:1001251 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1001251 ?term)
                (has_quality ?term SO:0000908))
            (SO:1001249 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1001254 ?term)
                (has_origin ?term SO:0000910))
            (SO:1001247 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000316 ?term)
                (has_quality ?term SO:0000906))
            (SO:1001246 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000185 ?term)
                (has_quality ?term SO:0000879))
            (SO:1001197 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000654 ?term)
                (has_quality ?term SO:0000976))
            (SO:1001196 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000877))
            (SO:1001187 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:1000036)
                (has_part ?term SO:0000159))
            (SO:1000171 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000041 ?term)
                (has_part ?term SO:0001514))
            (SO:1000159 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000041 ?term)
                (has_part ?term SO:1000036))
            (SO:1000158 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:1000036)
                (has_part ?term SO:0000199))
            (SO:1000148 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000044 ?term)
                (has_part ?term SO:0000199)
                (has_part ?term SO:0000159))
            (SO:1000147 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000045 ?term)
                (has_quality ?term SO:0001516))
            (SO:1000145 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000030 ?term)
                (has_quality ?term SO:0001519))
            (SO:1000047 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000030 ?term)
                (has_quality ?term SO:0001518))
            (SO:1000046 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_quality ?term SO:0000988))
            (SO:1000045 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000031 ?term)
                (has_part ?term SO:0000199))
            (SO:1000044 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:1000035)
                (has_part ?term SO:0000199))
            (SO:1000041 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:1000035))
            (SO:1000038 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000183 ?term)
                (has_quality ?term SO:0001511))
            (SO:1000031 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:1000036))
            (SO:1000030 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000028 ?term)
                (has_part ?term SO:0000159))
            (SO:1000029 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000183 ?term)
                (has_quality ?term SO:0001510))
            (SO:1000028 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000330 ?term)
                (has_quality ?term SO:0000860))
            (SO:0005858 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001411 ?term)
                (has_quality ?term SO:0000133))
            (SO:0001720 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001089 ?term)
                (has_quality ?term SO:0000133))
            (SO:0001700 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000440 ?term)
                (has_quality ?term SO:0000783)
                (has_part ?term SO:0000853))
            (SO:0001644 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001260 ?term)
                (has_part ?term SO:0001059))
            (SO:0001507 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001260 ?term)
                (has_part ?term SO:0000104))
            (SO:0001501 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000155 ?term)
                (has_quality ?term SO:0000782))
            (SO:0001476 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001085 ?term)
                (has_part ?term SO:0000149))
            (SO:0001462 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000976))
            (SO:0001431 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000316 ?term)
                (has_quality ?term SO:0000731))
            (SO:0001384 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000663))
            (SO:0001272 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000659))
            (SO:0001271 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000656))
            (SO:0001270 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000642))
            (SO:0001269 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0001263))
            (SO:0001268 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000578))
            (SO:0001267 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000575))
            (SO:0001266 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000571))
            (SO:0001265 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001263 ?term)
                (has_quality ?term SO:0000979))
            (SO:0001264 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000743))
            (SO:0001259 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001225 ?term)
                (has_quality ?term SO:0001223))
            (SO:0001227 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001225 ?term)
                (has_quality ?term SO:0001222))
            (SO:0001226 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000127 ?term)
                (has_quality ?term SO:0001221))
            (SO:0001225 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000127 ?term)
                (has_quality ?term SO:0001220))
            (SO:0001224 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000569))
            (SO:0001219 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000667 ?term)
                (has_quality ?term SO:0000781))
            (SO:0001218 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000010))
            (SO:0001217 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001193 ?term)
                (has_quality ?term SO:0001196))
            (SO:0001197 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001193 ?term)
                (has_quality ?term SO:0001194))
            (SO:0001195 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001247 ?term)
                (has_quality ?term SO:0001192))
            (SO:0001193 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001247 ?term)
                (has_quality ?term SO:0001190))
            (SO:0001191 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001247 ?term)
                (has_quality ?term SO:0001188))
            (SO:0001189 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000731))
            (SO:0001054 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000657 ?term)
                (has_quality ?term SO:0000731))
            (SO:0001050 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001039 ?term)
                (derives_from ?term SO:0000155))
            (SO:0001040 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000001 ?term)
                (has_quality ?term SO:0001234))
            (SO:0001037 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000745 ?term)
                (has_quality ?term SO:0000352))
            (SO:0001033 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000737 ?term)
                (has_quality ?term SO:0000352))
            (SO:0001032 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001260 ?term)
                (has_part ?term SO:0001235))
            (SO:0001026 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000696 ?term)
                (has_quality ?term SO:0001185))
            (SO:0001012 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001247 ?term)
                (has_quality ?term SO:0001184))
            (SO:0001011 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000001 ?term)
                (has_quality ?term SO:0001004))
            (SO:0001005 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000842 ?term)
                (has_quality ?term SO:0000731))
            (SO:0000997 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000732))
            (SO:0000996 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000993))
            (SO:0000995 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000001 ?term)
                (has_quality ?term SO:0000993))
            (SO:0000994 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000914 ?term)
                (derives_from ?term SO:0000153))
            (SO:0000992 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000089 ?term)
                (part_of ?term SO:0000980))
            (SO:0000975 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000965 ?term)
                (has_quality ?term SO:0000988))
            (SO:0000967 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000962 ?term)
                (has_quality ?term SO:0000988))
            (SO:0000966 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000961 ?term)
                (has_quality ?term SO:0000985))
            (SO:0000965 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000965 ?term)
                (has_quality ?term SO:0000987))
            (SO:0000964 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000962 ?term)
                (has_quality ?term SO:0000987))
            (SO:0000963 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000961 ?term)
                (has_quality ?term SO:0000984))
            (SO:0000962 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_quality ?term SO:0000356))
            (SO:0000961 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000956 ?term)
                (has_quality ?term SO:0000988))
            (SO:0000960 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000956 ?term)
                (has_quality ?term SO:0000987))
            (SO:0000959 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000955 ?term)
                (has_quality ?term SO:0000988))
            (SO:0000958 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000955 ?term)
                (has_quality ?term SO:0000987))
            (SO:0000957 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000954 ?term)
                (has_quality ?term SO:0000984))
            (SO:0000956 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000954 ?term)
                (has_quality ?term SO:0000985))
            (SO:0000955 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_quality ?term SO:0000352))
            (SO:0000954 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000316 ?term)
                (has_quality ?term SO:0000116))
            (SO:0000935 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000873 ?term)
                (has_quality ?term SO:0000116))
            (SO:0000929 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000753 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000915 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000753 ?term)
                (has_quality ?term SO:0000991))
            (SO:0000914 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000753 ?term)
                (has_quality ?term SO:0000756))
            (SO:0000913 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000781))
            (SO:0000902 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000133))
            (SO:0000898 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000898 ?term)
                (has_quality ?term SO:0000137))
            (SO:0000897 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000131))
            (SO:0000896 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000475))
            (SO:0000892 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000473))
            (SO:0000891 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000130))
            (SO:0000890 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000136))
            (SO:0000889 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000135))
            (SO:0000888 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000116)
                (has_part ?term SO:0000977)
                (guided_by ?term SO:0000602))
            (SO:0000873 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000870)
                (adjacent_to ?term SO:0000636))
            (SO:0000872 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000246)
                (adjacent_to ?term SO:0000610))
            (SO:0000871 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000146)
                (adjacent_to ?term SO:0000581))
            (SO:0000862 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000185 ?term)
                (has_quality ?term SO:0000146)
                (adjacent_to ?term SO:0000581))
            (SO:0000861 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000853 ?term)
                (has_quality ?term SO:0000858))
            (SO:0000855 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000853 ?term)
                (has_quality ?term SO:0000859))
            (SO:0000854 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000330 ?term)
                (has_quality ?term SO:0000857))
            (SO:0000853 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000739))
            (SO:0000829 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000738))
            (SO:0000828 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000084))
            (SO:0000825 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000083))
            (SO:0000824 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000747))
            (SO:0000823 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000746))
            (SO:0000822 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000744))
            (SO:0000821 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000745))
            (SO:0000820 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000340 ?term)
                (has_origin ?term SO:0000737))
            (SO:0000819 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000817))
            (SO:0000818 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000814))
            (SO:0000816 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000809 ?term)
                (has_quality ?term SO:0000416))
            (SO:0000813 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000809 ?term)
                (has_quality ?term SO:0000415))
            (SO:0000812 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000809 ?term)
                (has_quality ?term SO:0000414))
            (SO:0000811 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000809 ?term)
                (has_quality ?term SO:0000362))
            (SO:0000810 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000317 ?term)
                (has_quality ?term SO:0000790))
            (SO:0000809 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000317 ?term)
                (has_quality ?term SO:0000789))
            (SO:0000808 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000324 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000807 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000001 ?term)
                (has_quality ?term SO:0000784)
                (has_quality ?term SO:0000783))
            (SO:0000805 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000001 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000804 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000784)
                (has_quality ?term SO:0000783))
            (SO:0000799 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000798 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000782))
            (SO:0000797 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000781)
                (derives_from ?term SO:0000151))
            (SO:0000796 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000815 ?term)
                (has_quality ?term SO:0000814))
            (SO:0000795 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000411 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000794 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000768 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000779 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001235 ?term)
                (derives_from ?term SO:0000155))
            (SO:0000755 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001260 ?term)
                (has_part ?term SO:0000980)
                (has_part ?term SO:0000742))
            (SO:0000741 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000864))
            (SO:0000734 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001055 ?term)
                (has_part ?term SO:0000235))
            (SO:0000727 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000692 ?term)
                (transcribed_to ?term SO:0000716))
            (SO:0000722 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000692 ?term)
                (transcribed_to ?term SO:1001197))
            (SO:0000721 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000101 ?term)
                (has_quality ?term SO:0000784))
            (SO:0000720 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000879))
            (SO:0000716 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000693 ?term)
                (has_quality ?term SO:0000887))
            (SO:0000712 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001217 ?term)
                (has_quality ?term SO:0000886))
            (SO:0000711 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000697 ?term)
                (has_part ?term SO:0000885))
            (SO:0000710 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000693 ?term)
                (has_part ?term SO:0000884))
            (SO:0000698 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000693 ?term)
                (has_part ?term SO:0000883))
            (SO:0000697 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001217 ?term)
                (has_quality ?term SO:0000881))
            (SO:0000693 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000690 ?term)
                (transcribed_to ?term SO:0000079))
            (SO:0000692 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (transcribed_to ?term SO:0000078))
            (SO:0000690 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000188 ?term)
                (has_quality ?term SO:0001234))
            (SO:0000666 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000878))
            (SO:0000665 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000089 ?term)
                (part_of ?term SO:0000742))
            (SO:0000654 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000155 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000637 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000880))
            (SO:0000634 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000878))
            (SO:0000633 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000185 ?term)
                (has_quality ?term SO:0000878))
            (SO:0000632 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000185 ?term)
                (has_quality ?term SO:0000880))
            (SO:0000631 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000188 ?term)
                (has_quality ?term SO:0001186))
            (SO:0000588 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001217 ?term)
                (transcribed_to ?term SO:0000873))
            (SO:0000548 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000870))
            (SO:0000479 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (transcribed_to ?term SO:0000479))
            (SO:0000459 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000940))
            (SO:0000456 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001217 ?term)
                (has_quality ?term SO:0000865))
            (SO:0000455 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001217 ?term)
                (transcribed_to ?term SO:0000871))
            (SO:0000451 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000314 ?term)
                (derives_from ?term SO:0000101))
            (SO:0000434 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000695 ?term)
                (has_quality ?term SO:0000814))
            (SO:0000411 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000715 ?term)
                (has_quality ?term SO:0001186))
            (SO:0000380 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000372 ?term)
                (has_quality ?term SO:0001186))
            (SO:0000374 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000456 ?term)
                (has_quality ?term SO:1000036))
            (SO:0000373 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0001185))
            (SO:0000372 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000902 ?term)
                (has_quality ?term SO:0000359))
            (SO:0000363 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000108 ?term)
                (has_quality ?term SO:0000867))
            (SO:0000335 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000108 ?term)
                (has_quality ?term SO:0000869))
            (SO:0000329 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000108 ?term)
                (has_quality ?term SO:0000868))
            (SO:0000321 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000151 ?term)
                (has_quality ?term SO:0000756))
            (SO:0000317 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000657 ?term)
                (has_quality ?term SO:0000784)
                (has_quality ?term SO:0000783))
            (SO:0000293 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000287 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000288 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000806))
            (SO:0000287 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000784))
            (SO:0000285 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000111 ?term)
                (has_quality ?term SO:0000784)
                (has_quality ?term SO:0000783))
            (SO:0000283 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000108 ?term)
                (has_quality ?term SO:0000866))
            (SO:0000282 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000280 ?term)
                (has_quality ?term SO:0000784)
                (has_quality ?term SO:0000783))
            (SO:0000281 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000783))
            (SO:0000280 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000875))
            (SO:0000279 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000876))
            (SO:0000278 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000165 ?term)
                (has_quality ?term SO:0000277))
            (SO:0000166 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000898 ?term)
                (has_quality ?term SO:0000904))
            (SO:0000138 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000112 ?term)
                (has_quality ?term SO:0001031))
            (SO:0000132 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000128 ?term)
                (has_quality ?term SO:0000895))
            (SO:0000129 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000894))
            (SO:0000128 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_quality ?term SO:0000893))
            (SO:0000127 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000112 ?term)
                (has_quality ?term SO:0001030))
            (SO:0000121 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000887))
            (SO:0000118 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (part_of ?term SO:0000101))
            (SO:0000111 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000234 ?term)
                (has_quality ?term SO:0000865))
            (SO:0000108 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000099 ?term)
                (has_origin ?term SO:0000903))
            (SO:0000100 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000751))
            (SO:0000099 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000749))
            (SO:0000098 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000739))
            (SO:0000097 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000748))
            (SO:0000096 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000747))
            (SO:0000095 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000746))
            (SO:0000094 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000744))
            (SO:0000093 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000745))
            (SO:0000092 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000090 ?term)
                (has_origin ?term SO:0000743))
            (SO:0000091 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000740))
            (SO:0000090 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000088 ?term)
                (has_origin ?term SO:0000741))
            (SO:0000089 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000737))
            (SO:0000088 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000704 ?term)
                (has_origin ?term SO:0000738))
            (SO:0000087 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000879))
            (SO:0000079 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000673 ?term)
                (has_quality ?term SO:0000880))
            (SO:0000078 ?term))))

(assert (forall ?term
          (=> (and
                (SO:1000041 ?term)
                (has_part ?term SO:0000159))
            (SO:0000062 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0000151 ?term)
                (has_quality ?term SO:0000991))
            (SO:0000040 ?term))))

(assert (forall ?term
          (=> (and
                (SO:0001247 ?term)
                (has_quality ?term SO:0001183))
            (SO:0000034 ?term))))


